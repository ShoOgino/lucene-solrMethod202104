  public void testIllegalStateOnReplay() throws Exception {
    CachingCollector cc = CachingCollector.create(new NoOpCollector(), true, 50 * ONE_BYTE);
    LeafCollector acc = cc.getLeafCollector(null);
    acc.setScorer(new MockScorable());

    // collect 130 docs, this should be enough for triggering cache abort.
    for (int i = 0; i < 130; i++) {
      acc.collect(i);
    }

    assertFalse("CachingCollector should not be cached due to low memory limit", cc.isCached());

    expectThrows(
        IllegalStateException.class,
        () -> {
          cc.replay(new NoOpCollector());
        });
  }


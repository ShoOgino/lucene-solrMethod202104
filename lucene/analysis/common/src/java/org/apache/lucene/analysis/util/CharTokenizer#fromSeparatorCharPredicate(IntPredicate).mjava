  /**
   * Creates a new instance of CharTokenizer using a custom predicate, supplied as method reference
   * or lambda expression. The predicate should return {@code true} for all valid token separator
   * characters. This method is provided for convenience to easily use predicates that are negated
   * (they match the separator characters, not the token characters).
   *
   * <p>This factory is intended to be used with lambdas or method references. E.g., an elegant way
   * to create an instance which behaves exactly as {@link WhitespaceTokenizer} is:
   *
   * <pre class="prettyprint lang-java">
   * Tokenizer tok = CharTokenizer.fromSeparatorCharPredicate(Character::isWhitespace);
   * </pre>
   */
  public static CharTokenizer fromSeparatorCharPredicate(
      final IntPredicate separatorCharPredicate) {
    return fromSeparatorCharPredicate(DEFAULT_TOKEN_ATTRIBUTE_FACTORY, separatorCharPredicate);
  }


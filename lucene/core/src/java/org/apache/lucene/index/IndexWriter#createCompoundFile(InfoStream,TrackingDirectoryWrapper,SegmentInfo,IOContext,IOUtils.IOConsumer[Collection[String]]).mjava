  /**
   * NOTE: this method creates a compound file for all files returned by info.files(). While,
   * generally, this may include separate norms and deletion files, this SegmentInfo must not
   * reference such files when this method is called, because they are not allowed within a compound
   * file.
   */
  static void createCompoundFile(
      InfoStream infoStream,
      TrackingDirectoryWrapper directory,
      final SegmentInfo info,
      IOContext context,
      IOUtils.IOConsumer<Collection<String>> deleteFiles)
      throws IOException {

    // maybe this check is not needed, but why take the risk?
    if (!directory.getCreatedFiles().isEmpty()) {
      throw new IllegalStateException("pass a clean trackingdir for CFS creation");
    }

    if (infoStream.isEnabled("IW")) {
      infoStream.message("IW", "create compound file");
    }
    // Now merge all added files
    boolean success = false;
    try {
      info.getCodec().compoundFormat().write(directory, info, context);
      success = true;
    } finally {
      if (!success) {
        // Safe: these files must exist
        deleteFiles.accept(directory.getCreatedFiles());
      }
    }

    // Replace all previous files with the CFS/CFE files:
    info.setFiles(new HashSet<>(directory.getCreatedFiles()));
  }


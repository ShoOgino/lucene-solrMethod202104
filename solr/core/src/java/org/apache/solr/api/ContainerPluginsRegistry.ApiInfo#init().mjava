    @SuppressWarnings({"rawtypes", "unchecked"})
    public void init() throws Exception {
      if (this.holders != null) return;
      Constructor constructor = klas.getConstructors()[0];
      if (constructor.getParameterTypes().length == 0) {
        instance = constructor.newInstance();
      } else if (constructor.getParameterTypes().length == 1 && constructor.getParameterTypes()[0] == CoreContainer.class) {
        instance = constructor.newInstance(coreContainer);
      } else {
        throw new RuntimeException("Must have a no-arg constructor or CoreContainer constructor ");
      }
      if (instance instanceof ConfigurablePlugin) {
        Class<? extends MapWriter> c = getConfigClass((ConfigurablePlugin<? extends MapWriter>) instance);
        if (c != null && holder.meta.config != null) {
          MapWriter initVal = mapper.readValue(Utils.toJSON(holder.meta.config), c);
          ((ConfigurablePlugin) instance).configure(initVal);
        }
      }
      if (instance instanceof ResourceLoaderAware) {
        try {
          ((ResourceLoaderAware) instance).inform(pkgVersion.getLoader());
        } catch (IOException e) {
          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);
        }
      }
      this.holders = new ArrayList<>();
      for (Api api : AnnotatedApi.getApis(instance.getClass(), instance, true)) {
        holders.add(new ApiHolder((AnnotatedApi) api));
      }
    }


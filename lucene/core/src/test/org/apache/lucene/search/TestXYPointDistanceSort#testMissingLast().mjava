  /** Add two points (one doc missing) and sort by distance */
  public void testMissingLast() throws Exception {
    Directory dir = newDirectory();
    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);

    // missing
    Document doc = new Document();
    iw.addDocument(doc);

    doc = new Document();
    doc.add(new XYDocValuesField("location", 40.718266f, -74.007819f));
    iw.addDocument(doc);
    double d2 = cartesianDistance(40.718266f, -74.007819f, 40.7143528f, -74.0059731f);

    doc = new Document();
    doc.add(new XYDocValuesField("location", 40.7051157f, -74.0088305f));
    iw.addDocument(doc);
    double d3 = cartesianDistance(40.7051157f, -74.0088305f, 40.7143528f, -74.0059731f);

    IndexReader reader = iw.getReader();
    IndexSearcher searcher = newSearcher(reader);
    iw.close();

    Sort sort = new Sort(XYDocValuesField.newDistanceSort("location", 40.7143528f, -74.0059731f));
    TopDocs td = searcher.search(new MatchAllDocsQuery(), 3, sort);

    FieldDoc d = (FieldDoc) td.scoreDocs[0];
    assertEquals(d2, (Double) d.fields[0], 0.0D);

    d = (FieldDoc) td.scoreDocs[1];
    assertEquals(d3, (Double) d.fields[0], 0.0D);

    d = (FieldDoc) td.scoreDocs[2];
    assertEquals(Double.POSITIVE_INFINITY, (Double) d.fields[0], 0.0D);

    reader.close();
    dir.close();
  }


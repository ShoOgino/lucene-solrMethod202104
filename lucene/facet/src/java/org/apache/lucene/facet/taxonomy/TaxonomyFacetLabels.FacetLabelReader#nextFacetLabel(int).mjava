    /**
     * Retrieves the next {@link FacetLabel} for the specified {@code docId}, or {@code null} if
     * there are no more. This method has state: if the provided {@code docId} is the same as the
     * previous invocation, it returns the next {@link FacetLabel} for that document. Otherwise, it
     * advances to the new {@code docId} and provides the first {@link FacetLabel} for that
     * document, or {@code null} if that document has no indexed facets. Each new {@code docId} must
     * be in strictly monotonic (increasing) order.
     *
     * <p><b>NOTE</b>: The returned FacetLabels may not be in the same order in which they were
     * indexed
     *
     * @param docId input docId provided in monotonic (non-decreasing) order
     * @return the first or next {@link FacetLabel}, or {@code null} if there are no more
     * @throws IOException when a low-level IO issue occurs
     * @throws IllegalArgumentException if docId provided is less than docId supplied in an earlier
     *     invocation
     */
    public FacetLabel nextFacetLabel(int docId) throws IOException {
      if (currentDocId != docId) {
        if (docId < currentDocId) {
          throw new IllegalArgumentException(
              "docs out of order: previous docId=" + currentDocId + " current docId=" + docId);
        }
        ordinalsSegmentReader.get(docId, decodedOrds);
        currentDocId = docId;
        currentPos = decodedOrds.offset;
      }

      int endPos = decodedOrds.offset + decodedOrds.length;
      assert currentPos <= endPos;

      if (currentPos == endPos) {
        // no more FacetLabels
        return null;
      }

      int ord = decodedOrds.ints[currentPos++];
      return taxoReader.getPath(ord);
    }


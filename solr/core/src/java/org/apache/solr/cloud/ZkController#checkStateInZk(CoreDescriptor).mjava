  private void checkStateInZk(CoreDescriptor cd) throws InterruptedException, NotInClusterStateException {
    CloudDescriptor cloudDesc = cd.getCloudDescriptor();
    String nodeName = cloudDesc.getCoreNodeName();
    if (nodeName == null) {
      throw new SolrException(ErrorCode.SERVER_ERROR, "No coreNodeName for " + cd);
    }
    final String coreNodeName = nodeName;

    if (cloudDesc.getShardId() == null) {
      throw new SolrException(ErrorCode.SERVER_ERROR, "No shard id for " + cd);
    }

    AtomicReference<String> errorMessage = new AtomicReference<>();
    try {
      zkStateReader.waitForState(cd.getCollectionName(), 10, TimeUnit.SECONDS, (c) -> {
        if (c == null)
          return false;
        Slice slice = c.getSlice(cloudDesc.getShardId());
        if (slice == null) {
          errorMessage.set("Invalid shard: " + cloudDesc.getShardId());
          return false;
        }
        Replica replica = slice.getReplica(coreNodeName);
        if (replica == null) {
          errorMessage.set("coreNodeName " + coreNodeName + " does not exist in shard " + cloudDesc.getShardId() +
              ", ignore the exception if the replica was deleted");
          return false;
        }
        return true;
      });
    } catch (TimeoutException e) {
      String error = errorMessage.get();
      if (error == null)
        error = "coreNodeName " + coreNodeName + " does not exist in shard " + cloudDesc.getShardId() +
            ", ignore the exception if the replica was deleted";
      throw new NotInClusterStateException(ErrorCode.SERVER_ERROR, error);
    }
  }


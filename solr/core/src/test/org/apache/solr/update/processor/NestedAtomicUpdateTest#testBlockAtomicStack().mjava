  @Test
  public void testBlockAtomicStack() throws Exception {
    SolrInputDocument doc = sdoc("id", "1", "child1", sdocs(sdoc("id", "2", "child_s", "child")));
    assertU(adoc(doc));

    assertU(commit());

    assertJQ(req("q","id:1", "fl", "*, [child]"),
        "/response/numFound==1",
        "/response/docs/[0]/child1/[0]/id=='2'",
        "/response/docs/[0]/child1/[0]/child_s=='child'"
    );

    doc = sdoc("id", "1", "child1", Collections.singletonMap("add", sdocs(sdoc("id", "3", "child_s", "child"))));
    addAndGetVersion(doc, params("wt", "json"));

    assertU(commit());

    assertJQ(req("q","id:1", "fl", "*, [child]"),
        "/response/numFound==1",
        "/response/docs/[0]/child1/[0]/id=='2'",
        "/response/docs/[0]/child1/[0]/child_s=='child'",
        "/response/docs/[0]/child1/[1]/id=='3'",
        "/response/docs/[0]/child1/[0]/child_s=='child'"
    );

    doc = sdoc("id", "2",
        "grandChild", Collections.singletonMap("add", sdocs(sdoc("id", "4", "child_s", "grandChild"), sdoc("id", "5", "child_s", "grandChild"))));
    addAndGetVersion(doc, params("wt", "json", "_route_", "1"));

    assertU(commit());

    assertJQ(req("q","id:1", "fl", "*, [child]", "sort", "id asc"),
        "/response/numFound==1",
        "/response/docs/[0]/id=='1'",
        "/response/docs/[0]/child1/[0]/id=='2'",
        "/response/docs/[0]/child1/[0]/child_s=='child'",
        "/response/docs/[0]/child1/[1]/id=='3'",
        "/response/docs/[0]/child1/[1]/child_s=='child'",
        "/response/docs/[0]/child1/[0]/grandChild/[0]/id=='4'",
        "/response/docs/[0]/child1/[0]/grandChild/[0]/child_s=='grandChild'"
    );

    doc = sdoc("id", "1",
        "child2", Collections.singletonMap("add", sdocs(sdoc("id", "8", "child_s", "child"))));
    addAndGetVersion(doc, params("wt", "json"));

    assertU(commit());

    assertJQ(req("q","id:1", "fl", "*, [child]", "sort", "id asc"),
        "/response/numFound==1",
        "/response/docs/[0]/id=='1'",
        "/response/docs/[0]/child1/[0]/id=='2'",
        "/response/docs/[0]/child1/[0]/child_s=='child'",
        "/response/docs/[0]/child1/[1]/id=='3'",
        "/response/docs/[0]/child1/[1]/child_s=='child'",
        "/response/docs/[0]/child1/[0]/grandChild/[0]/id=='4'",
        "/response/docs/[0]/child1/[0]/grandChild/[0]/child_s=='grandChild'",
        "/response/docs/[0]/child2/[0]/id=='8'",
        "/response/docs/[0]/child2/[0]/child_s=='child'"
    );

    doc = sdoc("id", "1",
        "new_s", Collections.singletonMap("add", "new string"));
    addAndGetVersion(doc, params("wt", "json"));

    assertU(commit());

    // ensure the whole block has been committed correctly to the index.
    assertJQ(req("q","id:1", "fl", "*, [child]"),
        "/response/numFound==1",
        "/response/docs/[0]/id=='1'",
        "/response/docs/[0]/child1/[0]/id=='2'",
        "/response/docs/[0]/child1/[0]/child_s=='child'",
        "/response/docs/[0]/child1/[1]/id=='3'",
        "/response/docs/[0]/child1/[1]/child_s=='child'",
        "/response/docs/[0]/child1/[0]/grandChild/[0]/id=='4'",
        "/response/docs/[0]/child1/[0]/grandChild/[0]/child_s=='grandChild'",
        "/response/docs/[0]/child1/[0]/grandChild/[1]/id=='5'",
        "/response/docs/[0]/child1/[0]/grandChild/[1]/child_s=='grandChild'",
        "/response/docs/[0]/new_s=='new string'",
        "/response/docs/[0]/child2/[0]/id=='8'",
        "/response/docs/[0]/child2/[0]/child_s=='child'"
    );

  }


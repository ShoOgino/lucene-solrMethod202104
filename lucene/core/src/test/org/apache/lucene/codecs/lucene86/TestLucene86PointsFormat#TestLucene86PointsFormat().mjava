  public TestLucene86PointsFormat() {
    // standard issue
    Codec defaultCodec = TestUtil.getDefaultCodec();
    if (random().nextBoolean()) {
      // randomize parameters
      maxPointsInLeafNode = TestUtil.nextInt(random(), 50, 500);
      double maxMBSortInHeap = 3.0 + (3 * random().nextDouble());
      if (VERBOSE) {
        System.out.println(
            "TEST: using Lucene60PointsFormat with maxPointsInLeafNode="
                + maxPointsInLeafNode
                + " and maxMBSortInHeap="
                + maxMBSortInHeap);
      }

      // sneaky impersonation!
      codec =
          new FilterCodec(defaultCodec.getName(), defaultCodec) {
            @Override
            public PointsFormat pointsFormat() {
              return new PointsFormat() {
                @Override
                public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {
                  return new Lucene86PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);
                }

                @Override
                public PointsReader fieldsReader(SegmentReadState readState) throws IOException {
                  return new Lucene86PointsReader(readState);
                }
              };
            }
          };
    } else {
      // standard issue
      codec = defaultCodec;
      maxPointsInLeafNode = BKDConfig.DEFAULT_MAX_POINTS_IN_LEAF_NODE;
    }
  }


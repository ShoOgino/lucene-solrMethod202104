  private <T> List<Class<? extends T>> getInstantiableSubTypesBuiltIn(Class<T> superType) {
    ClassScanner scanner =
        new ClassScanner("org.apache.lucene.analysis", getClass().getClassLoader());
    Set<Class<? extends T>> types = scanner.scanSubTypes(superType);
    return types.stream()
        .filter(type -> !Modifier.isAbstract(type.getModifiers()))
        .filter(type -> !type.getSimpleName().startsWith("Mock"))
        .sorted(Comparator.comparing(Class::getName))
        .collect(Collectors.toList());
  }


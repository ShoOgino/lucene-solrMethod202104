  /**
   * Tests that {@link #expectThrows} behaves correctly when the Runnable contains an assertion that
   * does not pass but the caller has explicitly said they expect an Exception of that type: by
   * returning that assertion failure Exception.
   */
  public void testExpectingNestedFail() {
    final AtomicBoolean ran = new AtomicBoolean(false);
    AssertionError returned = null;
    try {
      returned =
          expectThrows(
              AssertionError.class,
              () -> {
                ran.getAndSet(true);
                fail("this failure should be returned, not propogated");
              });
    } catch (AssertionError caught) { // NOTE: we don't use expectThrows to test expectThrows
      assertNull("An exception should not have been thrown", caught);
    }
    assertTrue(ran.get());
    assertNotNull(returned);
    assertEquals("this failure should be returned, not propogated", returned.getMessage());
  }


  @Test
  public void testCollectionRepair() throws Exception {
    eventsListener.setExpectedType(ClusterEvent.EventType.COLLECTIONS_ADDED);
    String collection = "testCollectionRepair_collection";
    CollectionAdminRequest.Create create = CollectionAdminRequest.createCollection(collection, "conf", 1, 3);
    cluster.getSolrClient().request(create);
    cluster.waitForActiveCollection(collection, 1, 3);
    eventsListener.waitForExpectedEvent(10);
    eventsListener.setExpectedType(ClusterEvent.EventType.NODES_DOWN);

    // don't kill Overseer
    JettySolrRunner nonOverseerJetty = null;
    for (JettySolrRunner jetty : cluster.getJettySolrRunners()) {
      if (cluster.getOpenOverseer().getCoreContainer().getZkController().getNodeName().equals(jetty.getNodeName())) {
        continue;
      }
      nonOverseerJetty = jetty;
      break;
    }
    String nodeName = nonOverseerJetty.getNodeName();
    cluster.stopJettySolrRunner(nonOverseerJetty);
    cluster.waitForJettyToStop(nonOverseerJetty);
    eventsListener.waitForExpectedEvent(10);
    cluster.waitForActiveCollection(collection, 1, 2);

    Thread.sleep(TimeUnit.MILLISECONDS.convert(waitFor, TimeUnit.SECONDS));

    // wait for completed processing in the repair listener
    boolean await = repairListener.completed.await(60, TimeUnit.SECONDS);
    if (!await) {
      fail("Timeout waiting for the processing to complete");
    }
    cluster.waitForActiveCollection(collection, 1, 3);
  }


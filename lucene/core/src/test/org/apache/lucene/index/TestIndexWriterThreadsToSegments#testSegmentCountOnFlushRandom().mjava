  // LUCENE-5644: index docs w/ multiple threads but in between flushes we limit how many threads
  // can index concurrently in the next
  // iteration, and then verify that no more segments were flushed than number of threads:
  public void testSegmentCountOnFlushRandom() throws Exception {
    Directory dir = newFSDirectory(createTempDir());
    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));

    // Never trigger flushes (so we only flush on getReader):
    iwc.setMaxBufferedDocs(100000000);
    iwc.setRAMBufferSizeMB(-1);

    // Never trigger merges (so we can simplistically count flushed segments):
    iwc.setMergePolicy(NoMergePolicy.INSTANCE);

    final IndexWriter w = new IndexWriter(dir, iwc);

    // How many threads are indexing in the current cycle:
    final AtomicInteger indexingCount = new AtomicInteger();

    // How many threads we will use on each cycle:
    final AtomicInteger maxThreadCount = new AtomicInteger();

    CheckSegmentCount checker = new CheckSegmentCount(w, maxThreadCount, indexingCount);

    // We spin up 10 threads up front, but then in between flushes we limit how many can run on each
    // iteration
    final int ITERS = TEST_NIGHTLY ? 300 : 10;
    Thread[] threads = new Thread[MAX_THREADS_AT_ONCE];

    // We use this to stop all threads once they've indexed their docs in the current iter, and pull
    // a new NRT reader, and verify the
    // segment count:
    final CyclicBarrier barrier = new CyclicBarrier(MAX_THREADS_AT_ONCE, checker);

    for (int i = 0; i < threads.length; i++) {
      threads[i] =
          new Thread() {
            @Override
            public void run() {
              try {
                for (int iter = 0; iter < ITERS; iter++) {
                  if (indexingCount.incrementAndGet() <= maxThreadCount.get()) {
                    if (VERBOSE) {
                      System.out.println(
                          "TEST: " + Thread.currentThread().getName() + ": do index");
                    }

                    // We get to index on this cycle:
                    Document doc = new Document();
                    doc.add(
                        new TextField(
                            "field",
                            "here is some text that is a bit longer than normal trivial text",
                            Field.Store.NO));
                    for (int j = 0; j < 200; j++) {
                      w.addDocument(doc);
                    }
                  } else {
                    // We lose: no indexing for us on this cycle
                    if (VERBOSE) {
                      System.out.println(
                          "TEST: " + Thread.currentThread().getName() + ": don't index");
                    }
                  }
                  barrier.await();
                }
              } catch (Exception e) {
                throw new RuntimeException(e);
              }
            }
          };
      threads[i].start();
    }

    for (Thread t : threads) {
      t.join();
    }

    IOUtils.close(checker, w, dir);
  }


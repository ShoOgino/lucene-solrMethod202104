  /**
   * A simple sanity check that asserts the current weird behavior of DirectoryReader.openIfChanged()
   * and demos how 'softCommit' can cause the IndexReader in use by SolrIndexSearcher to missrepresent what 
   * commit is "current".  So Backup code should only ever "trust" the IndexCommit info available from the 
   * IndexDeletionPolicyWrapper
   * 
   * @see <a href="https://issues.apache.org/jira/browse/LUCENE-9040">LUCENE-9040</a>
   * @see <a href="https://issues.apache.org/jira/browse/SOLR-13909">SOLR-13909</a>
   */
  public void testDemoWhyBackupCodeShouldNeverUseIndexCommitFromSearcher() throws Exception {

    final long EXPECTED_GEN_OF_EMPTY_INDEX = 1L;
    
    // sanity check this is an empty index...
    assertQ(req("q", "*:*"), "//result[@numFound='0']");
    
    // sanity check what the searcher/reader of this empty index report about current commit
    final IndexCommit empty = h.getCore().withSearcher(s -> {
        // sanity check we are empty...
        assertEquals(0L, (long) s.getIndexReader().numDocs());
        
        // sanity check this is the initial commit..
        final IndexCommit commit = s.getIndexReader().getIndexCommit();
        assertEquals(EXPECTED_GEN_OF_EMPTY_INDEX, commit.getGeneration());
        return commit;
      });

    // now let's add & soft commit 1 doc...
    assertU(adoc("id", "42"));
    assertU(commit("softCommit", "true", "openSearcher", "true"));

    // verify it's "searchable" ...
    assertQ(req("q", "id:42"), "//result[@numFound='1']");

    // sanity check what the searcher/reader of this empty index report about current commit
    IndexCommit oneDoc = h.getCore().withSearcher(s -> {
        // sanity check this really is the searcher/reader that has the new doc...
        assertEquals(1L, (long) s.getIndexReader().numDocs());
        
        final IndexCommit commit = s.getIndexReader().getIndexCommit();
        // WTF: how/why does this reader still have the same commit generation as before ? ? ? ? ?
        assertEquals("WTF: This Reader (claims) the same generation as our previous pre-softCommif (empty) reader",
                     EXPECTED_GEN_OF_EMPTY_INDEX, commit.getGeneration());
        return commit;
      });

    assertEquals("WTF: Our two IndexCommits, which we know have different docs, claim to be equals",
                 empty, oneDoc);
    
  }


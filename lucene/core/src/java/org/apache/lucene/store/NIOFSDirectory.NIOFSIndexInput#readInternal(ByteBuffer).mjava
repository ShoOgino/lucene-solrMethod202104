    @Override
    protected void readInternal(ByteBuffer b) throws IOException {
      long pos = getFilePointer() + off;

      if (pos + b.remaining() > end) {
        throw new EOFException("read past EOF: " + this);
      }

      try {
        int readLength = b.remaining();
        while (readLength > 0) {
          final int toRead = Math.min(CHUNK_SIZE, readLength);
          b.limit(b.position() + toRead);
          assert b.remaining() == toRead;
          final int i = channel.read(b, pos);
          if (i < 0) {
            // be defensive here, even though we checked before hand, something could have changed
            throw new EOFException(
                "read past EOF: "
                    + this
                    + " buffer: "
                    + b
                    + " chunkLen: "
                    + toRead
                    + " end: "
                    + end);
          }
          assert i > 0
              : "FileChannel.read with non zero-length bb.remaining() must always read at least "
                  + "one byte (FileChannel is in blocking mode, see spec of ReadableByteChannel)";
          pos += i;
          readLength -= i;
        }
        assert readLength == 0;
      } catch (IOException ioe) {
        throw new IOException(ioe.getMessage() + ": " + this, ioe);
      }
    }


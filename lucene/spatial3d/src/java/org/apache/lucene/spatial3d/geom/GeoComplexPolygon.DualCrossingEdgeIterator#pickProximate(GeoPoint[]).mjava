    private GeoPoint pickProximate(final GeoPoint[] points) {
      if (points.length == 0) {
        throw new IllegalArgumentException(
            "No off-plane intersection points were found; can't compute traversal");
      } else if (points.length == 1) {
        return points[0];
      } else {
        final double p1dist = computeSquaredDistance(points[0], intersectionPoint);
        final double p2dist = computeSquaredDistance(points[1], intersectionPoint);
        if (p1dist < p2dist) {
          return points[0];
        } else if (p2dist < p1dist) {
          return points[1];
        } else {
          throw new IllegalArgumentException(
              "Neither off-plane intersection point matched intersection point; intersection = "
                  + intersectionPoint
                  + "; offplane choice 0: "
                  + points[0]
                  + "; offplane choice 1: "
                  + points[1]);
        }
      }
    }


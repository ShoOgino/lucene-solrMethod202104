  /**
   * Obtain a ReadersAndLiveDocs instance from the readerPool. If create is true, you must later
   * call {@link #release(ReadersAndUpdates, boolean)}.
   */
  synchronized ReadersAndUpdates get(SegmentCommitInfo info, boolean create) {
    assert info.info.dir == originalDirectory
        : "info.dir=" + info.info.dir + " vs " + originalDirectory;
    if (closed.get()) {
      assert readerMap.isEmpty() : "Reader map is not empty: " + readerMap;
      throw new AlreadyClosedException("ReaderPool is already closed");
    }

    ReadersAndUpdates rld = readerMap.get(info);
    if (rld == null) {
      if (create == false) {
        return null;
      }
      rld =
          new ReadersAndUpdates(
              segmentInfos.getIndexCreatedVersionMajor(), info, newPendingDeletes(info));
      // Steal initial reference:
      readerMap.put(info, rld);
    } else {
      assert rld.info == info
          : "rld.info="
              + rld.info
              + " info="
              + info
              + " isLive?="
              + assertInfoIsLive(rld.info)
              + " vs "
              + assertInfoIsLive(info);
    }

    if (create) {
      // Return ref to caller:
      rld.incRef();
    }

    assert noDups();

    return rld;
  }


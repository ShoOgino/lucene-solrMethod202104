  /**
   * check extreme values of longs check for correct ordering of the encoded bytes and that values
   * round-trip.
   */
  public void testLongSpecialValues() throws Exception {
    long[] values =
        new long[] {
          Long.MIN_VALUE,
          Long.MIN_VALUE + 1,
          Long.MIN_VALUE + 2,
          -5003400000000L,
          -4000L,
          -3000L,
          -2000L,
          -1000L,
          -1L,
          0L,
          1L,
          10L,
          300L,
          50006789999999999L,
          Long.MAX_VALUE - 2,
          Long.MAX_VALUE - 1,
          Long.MAX_VALUE
        };
    BytesRef[] encoded = new BytesRef[values.length];

    for (int i = 0; i < values.length; i++) {
      encoded[i] = new BytesRef(new byte[Long.BYTES]);
      NumericUtils.longToSortableBytes(values[i], encoded[i].bytes, encoded[i].offset);

      // check forward and back conversion
      assertEquals(
          "forward and back conversion should generate same long",
          values[i],
          NumericUtils.sortableBytesToLong(encoded[i].bytes, encoded[i].offset));
    }

    // check sort order (encoded values should be ascending)
    for (int i = 1; i < encoded.length; i++) {
      assertTrue("check sort order", encoded[i - 1].compareTo(encoded[i]) < 0);
    }
  }


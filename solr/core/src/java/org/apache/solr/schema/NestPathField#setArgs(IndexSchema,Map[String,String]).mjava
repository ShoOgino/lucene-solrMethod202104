  @Override
  public void setArgs(IndexSchema schema, Map<String, String> args) {
    args.putIfAbsent("stored", "false");
    args.putIfAbsent("multiValued", "false");
    args.putIfAbsent("omitTermFreqAndPositions", "true");
    args.putIfAbsent("omitNorms", "true");
    args.putIfAbsent("maxCharsForDocValues", "-1");
    super.setArgs(schema, args);

    // CustomAnalyzer is easy to use
    CustomAnalyzer customAnalyzer;
    try {
      customAnalyzer = CustomAnalyzer.builder(schema.getResourceLoader())
          .withDefaultMatchVersion(schema.getDefaultLuceneMatchVersion())
          .withTokenizer(KeywordTokenizerFactory.class)
          .addTokenFilter(PatternReplaceFilterFactory.class,
              "pattern", "#\\d*",
              "replace", "all")
          .build();
    } catch (IOException e) {
      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);//impossible?
    }
    // Solr HTTP Schema APIs don't know about CustomAnalyzer so use TokenizerChain instead
    setIndexAnalyzer(new TokenizerChain(customAnalyzer));
    // leave queryAnalyzer as literal
  }


    boolean mayCompound(CharsRef nextStem, int nextPartLength, WordCase originalCase) {
      boolean patternsOk =
          enablingPattern != null
              ? enablingPattern.prohibitsCompounding(tail, length, stem, nextStem)
              : dictionary.checkCompoundPatterns.stream()
                  .noneMatch(p -> p.prohibitsCompounding(tail, length, stem, nextStem));
      if (!patternsOk) {
        return false;
      }

      if (dictionary.checkCompoundRep
          && isMisspelledSimpleWord(length + nextPartLength, originalCase)) {
        return false;
      }

      String spaceSeparated =
          new String(tail.chars, tail.offset, length)
              + " "
              + new String(tail.chars, tail.offset + length, nextPartLength);
      return !checkWord(spaceSeparated);
    }


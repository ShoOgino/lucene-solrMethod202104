  private synchronized TokenFilter maybePayload(TokenFilter stream, String fieldName) {
    Integer val = previousMappings.get(fieldName);
    if (val == null) {
      val = -1; // no payloads
      if (LuceneTestCase.rarely(random)) {
        switch (random.nextInt(3)) {
          case 0:
            val = -1; // no payloads
            break;
          case 1:
            val = Integer.MAX_VALUE; // variable length payload
            break;
          case 2:
            val = random.nextInt(12); // fixed length payload
            break;
        }
      }
      if (LuceneTestCase.VERBOSE) {
        if (val == Integer.MAX_VALUE) {
          System.out.println("MockAnalyzer: field=" + fieldName + " gets variable length payloads");
        } else if (val != -1) {
          System.out.println(
              "MockAnalyzer: field=" + fieldName + " gets fixed length=" + val + " payloads");
        }
      }
      previousMappings.put(fieldName, val); // save it so we are consistent for this field
    }

    if (val == -1) return stream;
    else if (val == Integer.MAX_VALUE) return new MockVariableLengthPayloadFilter(random, stream);
    else return new MockFixedLengthPayloadFilter(random, stream, val);
  }


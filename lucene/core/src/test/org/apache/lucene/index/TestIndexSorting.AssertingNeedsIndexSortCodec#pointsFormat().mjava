    @Override
    public PointsFormat pointsFormat() {
      final PointsFormat pf = delegate.pointsFormat();
      return new PointsFormat() {
        @Override
        public PointsWriter fieldsWriter(SegmentWriteState state) throws IOException {
          final PointsWriter writer = pf.fieldsWriter(state);
          return new PointsWriter() {
            @Override
            public void merge(MergeState mergeState) throws IOException {
              // For single segment merge we cannot infer if the segment is already sorted or not.
              if (mergeState.docMaps.length > 1) {
                assertEquals(needsIndexSort, mergeState.needsIndexSort);
              }
              ++numCalls;
              writer.merge(mergeState);
            }

            @Override
            public void writeField(FieldInfo fieldInfo, PointsReader values) throws IOException {
              writer.writeField(fieldInfo, values);
            }

            @Override
            public void finish() throws IOException {
              writer.finish();
            }

            @Override
            public void close() throws IOException {
              writer.close();
            }
          };
        }

        @Override
        public PointsReader fieldsReader(SegmentReadState state) throws IOException {
          return pf.fieldsReader(state);
        }
      };
    }


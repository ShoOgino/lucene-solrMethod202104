  private boolean updateStallState() {

    assert Thread.holdsLock(this);
    final long limit = stallLimitBytes();
    /*
     * we block indexing threads if net byte grows due to slow flushes
     * yet, for small ram buffers and large documents we can easily
     * reach the limit without any ongoing flushes. we need to ensure
     * that we don't stall/block if an ongoing or pending flush can
     * not free up enough memory to release the stall lock.
     */
    final boolean stall = (activeBytes + flushBytes) > limit && activeBytes < limit && !closed;

    if (infoStream.isEnabled("DWFC")) {
      if (stall != stallControl.anyStalledThreads()) {
        if (stall) {
          infoStream.message(
              "DW",
              String.format(
                  Locale.ROOT,
                  "now stalling flushes: netBytes: %.1f MB flushBytes: %.1f MB fullFlush: %b",
                  netBytes() / 1024. / 1024.,
                  getFlushingBytes() / 1024. / 1024.,
                  fullFlush));
          stallStartNS = System.nanoTime();
        } else {
          infoStream.message(
              "DW",
              String.format(
                  Locale.ROOT,
                  "done stalling flushes for %.1f msec: netBytes: %.1f MB flushBytes: %.1f MB fullFlush: %b",
                  (System.nanoTime() - stallStartNS) / 1000000.,
                  netBytes() / 1024. / 1024.,
                  getFlushingBytes() / 1024. / 1024.,
                  fullFlush));
        }
      }
    }

    stallControl.updateStalled(stall);
    return stall;
  }


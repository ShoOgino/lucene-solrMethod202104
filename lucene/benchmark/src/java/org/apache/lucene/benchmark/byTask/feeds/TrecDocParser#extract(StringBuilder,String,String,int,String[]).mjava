  /**
   * Extract from <code>buf</code> the text of interest within specified tags
   *
   * @param buf entire input text
   * @param startTag tag marking start of text of interest
   * @param endTag tag marking end of text of interest
   * @param maxPos if &ge; 0 sets a limit on start of text of interest
   * @return text of interest or null if not found
   */
  public static String extract(
      StringBuilder buf, String startTag, String endTag, int maxPos, String noisePrefixes[]) {
    int k1 = buf.indexOf(startTag);
    if (k1 >= 0 && (maxPos < 0 || k1 < maxPos)) {
      k1 += startTag.length();
      int k2 = buf.indexOf(endTag, k1);
      if (k2 >= 0 && (maxPos < 0 || k2 < maxPos)) { // found end tag with allowed range
        if (noisePrefixes != null) {
          for (String noise : noisePrefixes) {
            int k1a = buf.indexOf(noise, k1);
            if (k1a >= 0 && k1a < k2) {
              k1 = k1a + noise.length();
            }
          }
        }
        return buf.substring(k1, k2).trim();
      }
    }
    return null;
  }


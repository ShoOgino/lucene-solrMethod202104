    @Override
    public Relation compare(byte[] minPackedValue, byte[] maxPackedValue) {
      Cell cell = new Cell(minPackedValue, maxPackedValue);
      // System.out.println("compare: " + cell);

      // TODO: this is a bit hacky, having to reverse-engineer where we are in the BKD tree's
      // recursion ... but it's the lesser evil vs e.g. polluting this visitor API, or
      // implementing this "under the hood" in BKDReader instead?
      if (firstPhase) {

        // Pop stack:
        while (stack.size() > 0 && stack.get(stack.size() - 1).contains(cell) == false) {
          stack.remove(stack.size() - 1);
          // System.out.println("  pop");
        }

        // Push stack:
        stack.add(cell);
        // System.out.println("  push");

        return Relation.CELL_CROSSES_QUERY;
      } else {
        Relation result = in.compare(minPackedValue, maxPackedValue);
        if (targetStackUpto < stackToTargetDoc.size()
            && cell.equals(stackToTargetDoc.get(targetStackUpto))) {
          b.append(
              "  on cell "
                  + stackToTargetDoc.get(targetStackUpto)
                  + ", wrapped visitor returned "
                  + result
                  + "\n");
          targetStackUpto++;
        }
        return result;
      }
    }


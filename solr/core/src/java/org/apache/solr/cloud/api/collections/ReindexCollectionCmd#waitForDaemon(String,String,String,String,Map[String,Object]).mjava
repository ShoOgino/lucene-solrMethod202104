  // XXX currently this is complicated to due a bug in the way the daemon 'list'
  // XXX operation is implemented - see SOLR-13245. We need to query the actual
  // XXX SolrCore where the daemon is running
  @SuppressWarnings({"unchecked"})
  private void waitForDaemon(String daemonName, String daemonUrl, String sourceCollection, String targetCollection, Map<String, Object> reindexingState) throws Exception {
    HttpClient client = ccc.getCoreContainer().getUpdateShardHandler().getDefaultHttpClient();
    try (HttpSolrClient solrClient = new HttpSolrClient.Builder()
        .withHttpClient(client)
        .withBaseSolrUrl(daemonUrl).build()) {
      ModifiableSolrParams q = new ModifiableSolrParams();
      q.set(CommonParams.QT, "/stream");
      q.set("action", "list");
      q.set(CommonParams.DISTRIB, false);
      QueryRequest req = new QueryRequest(q);
      boolean isRunning;
      int statusCheck = 0;
      do {
        isRunning = false;
        statusCheck++;
        try {
          NamedList<Object> rsp = solrClient.request(req);
          Map<String, Object> rs = (Map<String, Object>)rsp.get("result-set");
          if (rs == null || rs.isEmpty()) {
            throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, "Can't find daemon list: missing result-set: " + Utils.toJSONString(rsp));
          }
          List<Object> list = (List<Object>)rs.get("docs");
          if (list == null) {
            throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, "Can't find daemon list: missing result-set: " + Utils.toJSONString(rsp));
          }
          if (list.isEmpty()) { // finished?
            break;
          }
          for (Object o : list) {
            Map<String, Object> map = (Map<String, Object>)o;
            String id = (String)map.get("id");
            if (daemonName.equals(id)) {
              isRunning = true;
              // fail here
              TestInjection.injectReindexFailure();
              break;
            }
          }
        } catch (Exception e) {
          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, "Exception waiting for daemon " +
              daemonName + " at " + daemonUrl, e);
        }
        if (statusCheck % 5 == 0) {
          reindexingState.put("processedDocs", getNumberOfDocs(targetCollection));
          setReindexingState(sourceCollection, State.RUNNING, reindexingState);
        }
        ccc.getSolrCloudManager().getTimeSource().sleep(2000);
      } while (isRunning && !maybeAbort(sourceCollection));
    }
  }


  /** Parses the encoding and flag format specified in the provided InputStream */
  private void readConfig(BufferedInputStream stream) throws IOException, ParseException {
    // I assume we don't support other BOMs (utf16, etc.)? We trivially could,
    // by adding maybeConsume() with a proper bom... but I don't see hunspell repo to have
    // any such exotic examples.
    Charset streamCharset;
    if (maybeConsume(stream, BOM_UTF8)) {
      streamCharset = StandardCharsets.UTF_8;
    } else {
      streamCharset = DEFAULT_CHARSET;
    }

    // TODO: can these flags change throughout the file? If not then we can abort sooner. And
    // then we wouldn't even need to create a temp file for the affix stream - a large enough
    // leading buffer (BufferedInputStream) would be sufficient?
    LineNumberReader reader = new LineNumberReader(new InputStreamReader(stream, streamCharset));
    String line;
    while ((line = reader.readLine()) != null) {
      String firstWord = line.split("\\s")[0];
      if ("SET".equals(firstWord)) {
        decoder = getDecoder(singleArgument(reader, line));
      } else if ("FLAG".equals(firstWord)) {
        flagParsingStrategy = getFlagParsingStrategy(line, decoder.charset());
      }
    }
  }


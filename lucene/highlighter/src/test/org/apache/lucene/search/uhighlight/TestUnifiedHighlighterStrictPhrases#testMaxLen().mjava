  public void testMaxLen() throws IOException {
    indexWriter.addDocument(
        newDoc("alpha bravo charlie - gap alpha bravo")); // hyphen is at char 21
    initReaderSearcherHighlighter();
    highlighter.setMaxLength(21);

    BooleanQuery query =
        new BooleanQuery.Builder()
            .add(newPhraseQuery("body", "alpha bravo"), BooleanClause.Occur.SHOULD)
            .add(newPhraseQuery("body", "gap alpha"), BooleanClause.Occur.SHOULD)
            .add(newPhraseQuery("body", "charlie gap"), BooleanClause.Occur.SHOULD)
            .build();

    TopDocs topDocs = searcher.search(query, 10, Sort.INDEXORDER);
    String[] snippets = highlighter.highlight("body", query, topDocs);

    final boolean weightMatches =
        highlighter.getFlags("body").contains(HighlightFlag.WEIGHT_MATCHES);
    if (fieldType == UHTestHelper.reanalysisType || weightMatches) {
      if (weightMatches) {
        assertArrayEquals(new String[] {"<b>alpha bravo</b> charlie -"}, snippets);
      } else {
        assertArrayEquals(new String[] {"<b>alpha</b> <b>bravo</b> charlie -"}, snippets);
      }
    } else {
      assertArrayEquals(new String[] {"<b>alpha</b> <b>bravo</b> <b>charlie</b> -"}, snippets);
    }
  }


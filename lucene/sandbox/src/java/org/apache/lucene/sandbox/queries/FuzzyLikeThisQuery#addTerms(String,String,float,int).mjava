  /**
   * Adds user input for "fuzzification"
   *
   * @param queryString The string which will be parsed by the analyzer and for which fuzzy variants
   *     will be parsed
   * @param minSimilarity The minimum similarity of the term variants; must be 0, 1 or 2 (see
   *     FuzzyTermsEnum)
   * @param prefixLength Length of required common prefix on variant terms (see FuzzyTermsEnum)
   */
  public void addTerms(
      String queryString, String fieldName, float minSimilarity, int prefixLength) {
    int maxEdits = (int) minSimilarity;
    if (maxEdits != minSimilarity
        || maxEdits < 0
        || maxEdits > LevenshteinAutomata.MAXIMUM_SUPPORTED_DISTANCE) {
      throw new IllegalArgumentException(
          "minSimilarity must integer value between 0 and "
              + LevenshteinAutomata.MAXIMUM_SUPPORTED_DISTANCE
              + ", inclusive; got "
              + minSimilarity);
    }
    fieldVals.add(new FieldVals(fieldName, maxEdits, prefixLength, queryString));
  }


    private Explanation explainScore(Explanation freq, long encodedNorm, float[] normTable) {
      List<Explanation> subs = new ArrayList<Explanation>();
      if (boost != 1F) {
        subs.add(Explanation.match(boost, "boost"));
      }
      subs.add(idf);
      Explanation tf =
          Explanation.match(
              tf(freq.getValue().floatValue()),
              "tf(freq=" + freq.getValue() + "), with freq of:",
              freq);
      subs.add(tf);

      float norm = normTable[(int) (encodedNorm & 0xFF)];

      Explanation fieldNorm = Explanation.match(norm, "fieldNorm");
      subs.add(fieldNorm);

      return Explanation.match(
          queryWeight * tf.getValue().floatValue() * norm,
          "score(freq=" + freq.getValue() + "), product of:",
          subs);
    }


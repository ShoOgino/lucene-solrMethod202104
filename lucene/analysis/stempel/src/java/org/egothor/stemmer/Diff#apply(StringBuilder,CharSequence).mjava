  /**
   * Apply the given patch string <code>diff</code> to the given string <code>
   * dest</code>.
   *
   * @param dest Destination string
   * @param diff Patch string
   */
  public static void apply(StringBuilder dest, CharSequence diff) {
    try {

      if (diff == null) {
        return;
      }

      int pos = dest.length() - 1;
      if (pos < 0) {
        return;
      }
      // orig == ""
      for (int i = 0; i < diff.length() / 2; i++) {
        char cmd = diff.charAt(2 * i);
        char param = diff.charAt(2 * i + 1);
        int par_num = (param - 'a' + 1);
        switch (cmd) {
          case '-':
            pos = pos - par_num + 1;
            break;
          case 'R':
            dest.setCharAt(pos, param);
            break;
          case 'D':
            int o = pos;
            pos -= par_num - 1;
            /*
             * delete par_num chars from index pos
             */
            // String s = orig.toString();
            // s = s.substring( 0, pos ) + s.substring( o + 1 );
            // orig = new StringBuffer( s );
            dest.delete(pos, o + 1);
            break;
          case 'I':
            dest.insert(pos += 1, param);
            break;
        }
        pos--;
      }
    } catch (StringIndexOutOfBoundsException x) {
      // x.printStackTrace();
    } catch (ArrayIndexOutOfBoundsException x) {
      // x.printStackTrace();
    }
  }


  private IndexOutput mergeDictionaries(
      Directory tempDir,
      String tempFileNamePrefix,
      List<InputStream> dictionaries,
      CharsetDecoder decoder)
      throws IOException {
    StringBuilder sb = new StringBuilder();
    IndexOutput unsorted = tempDir.createTempOutput(tempFileNamePrefix, "dat", IOContext.DEFAULT);
    try (ByteSequencesWriter writer = new ByteSequencesWriter(unsorted)) {
      for (InputStream dictionary : dictionaries) {
        BufferedReader lines = new BufferedReader(new InputStreamReader(dictionary, decoder));
        lines.readLine(); // first line is number of entries (approximately, sometimes)

        String line;
        while ((line = lines.readLine()) != null) {
          // wild and unpredictable code comment rules
          if (line.isEmpty()
              || line.charAt(0) == '/'
              || line.charAt(0) == '#'
              || line.charAt(0) == '\t') {
            continue;
          }
          line = unescapeEntry(line);
          // if we havent seen any stem exceptions, try to parse one
          if (!hasStemExceptions) {
            int morphStart = line.indexOf(MORPH_SEPARATOR);
            if (morphStart >= 0 && morphStart < line.length()) {
              hasStemExceptions = parseStemException(line.substring(morphStart + 1)) != null;
            }
          }

          writeNormalizedWordEntry(sb, writer, line);
        }
      }
      CodecUtil.writeFooter(unsorted);
    }
    return unsorted;
  }


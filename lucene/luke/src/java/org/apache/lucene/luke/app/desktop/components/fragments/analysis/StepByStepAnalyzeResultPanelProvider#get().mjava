  public JPanel get() {
    JPanel panel = new JPanel(new BorderLayout());
    panel.setOpaque(false);

    JPanel hint = new JPanel(new FlowLayout(FlowLayout.LEADING));
    hint.setOpaque(false);
    hint.add(
        new JLabel(MessageUtils.getLocalizedMessage("analysis.hint.show_attributes_step_by_step")));
    panel.add(hint, BorderLayout.PAGE_START);

    TableUtils.setupTable(
        charfilterTextsRowHeader,
        ListSelectionModel.SINGLE_SELECTION,
        new RowHeaderTableModel(),
        null);
    TableUtils.setupTable(
        charfilterTextsTable,
        ListSelectionModel.SINGLE_SELECTION,
        new CharfilterTextTableModel(),
        null);

    TableUtils.setupTable(
        namedTokensRowHeader, ListSelectionModel.SINGLE_SELECTION, new RowHeaderTableModel(), null);
    TableUtils.setupTable(
        namedTokensTable,
        ListSelectionModel.SINGLE_SELECTION,
        new NamedTokensTableModel(),
        new MouseAdapter() {
          @Override
          public void mouseClicked(MouseEvent e) {
            listeners.showAttributeValues(e);
          }
        });
    namedTokensTable.setColumnSelectionAllowed(true);
    JSplitPane inner =
        new JSplitPane(
            JSplitPane.VERTICAL_SPLIT,
            initResultScroll(charfilterTextsTable, charfilterTextsRowHeader),
            initResultScroll(namedTokensTable, namedTokensRowHeader));
    inner.setDividerLocation(60);

    panel.add(inner, BorderLayout.CENTER);
    return panel;
  }


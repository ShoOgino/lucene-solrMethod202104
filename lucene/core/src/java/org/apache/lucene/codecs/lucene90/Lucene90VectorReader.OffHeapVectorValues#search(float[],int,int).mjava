    @Override
    public TopDocs search(float[] vector, int topK, int fanout) throws IOException {
      // use a seed that is fixed for the index so we get reproducible results for the same query
      final Random random = new Random(checksumSeed);
      NeighborQueue results =
          HnswGraph.search(
              vector, topK, topK + fanout, randomAccess(), getGraphValues(fieldEntry), random);
      int i = 0;
      ScoreDoc[] scoreDocs = new ScoreDoc[Math.min(results.size(), topK)];
      boolean reversed = searchStrategy().reversed;
      while (results.size() > 0) {
        int node = results.topNode();
        float score = results.topScore();
        results.pop();
        if (reversed) {
          score = (float) Math.exp(-score / vector.length);
        }
        scoreDocs[scoreDocs.length - ++i] = new ScoreDoc(fieldEntry.ordToDoc[node], score);
      }
      // always return >= the case where we can assert == is only when there are fewer than topK
      // vectors in the index
      return new TopDocs(
          new TotalHits(results.visitedCount(), TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO),
          scoreDocs);
    }


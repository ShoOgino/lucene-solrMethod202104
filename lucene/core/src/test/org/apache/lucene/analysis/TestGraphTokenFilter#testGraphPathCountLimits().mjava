  public void testGraphPathCountLimits() {

    Token[] tokens = new Token[50];
    tokens[0] = new Token("term", 1, 0, 1);
    tokens[1] = new Token("term1", 1, 2, 3);
    for (int i = 2; i < 50; i++) {
      tokens[i] = new Token("term" + i, i % 2, 2, 3);
    }

    Exception e =
        expectThrows(
            IllegalStateException.class,
            () -> {
              GraphTokenFilter graph = new TestFilter(new CannedTokenStream(tokens));
              graph.reset();
              graph.incrementBaseToken();
              for (int i = 0; i < 10; i++) {
                graph.incrementGraphToken();
              }
              while (graph.incrementGraph()) {
                for (int i = 0; i < 10; i++) {
                  graph.incrementGraphToken();
                }
              }
            });
    assertEquals("Too many graph paths (> 1000)", e.getMessage());
  }


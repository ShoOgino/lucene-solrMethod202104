    @Override
    public Weight createWeight(IndexSearcher searcher, ScoreMode scoreMode, float boost)
        throws IOException {

      return new Weight(FixedScoreQuery.this) {

        @Override
        public Scorer scorer(final LeafReaderContext context) throws IOException {

          return new Scorer(this) {
            int docID = -1;

            @Override
            public int docID() {
              return docID;
            }

            @Override
            public DocIdSetIterator iterator() {
              return new DocIdSetIterator() {

                @Override
                public int docID() {
                  return docID;
                }

                @Override
                public long cost() {
                  return 1;
                }

                @Override
                public int nextDoc() {
                  docID++;
                  if (docID >= context.reader().maxDoc()) {
                    return NO_MORE_DOCS;
                  }
                  return docID;
                }

                @Override
                public int advance(int target) {
                  docID = target;
                  return docID;
                }
              };
            }

            @Override
            public float score() throws IOException {
              int num = idToNum[Integer.parseInt(context.reader().document(docID).get("id"))];
              if (reverse) {
                // System.out.println("score doc=" + docID + " num=" + num);
                return num;
              } else {
                // System.out.println("score doc=" + docID + " num=" + -num);
                return 1f / (1 + num);
              }
            }

            @Override
            public float getMaxScore(int upTo) throws IOException {
              return Float.POSITIVE_INFINITY;
            }
          };
        }

        @Override
        public boolean isCacheable(LeafReaderContext ctx) {
          return false;
        }

        @Override
        public Explanation explain(LeafReaderContext context, int doc) throws IOException {
          return null;
        }
      };
    }


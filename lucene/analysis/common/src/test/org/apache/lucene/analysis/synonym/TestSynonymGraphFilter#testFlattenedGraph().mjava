  /**
   * If we expand synonyms during indexing, it's a bit better than SynonymFilter is today, but still
   * necessarily has false positive and negative PhraseQuery matches because we do not index
   * posLength, so we lose information.
   */
  public void testFlattenedGraph() throws Exception {

    SynonymMap.Builder b = new SynonymMap.Builder();
    add(b, "wtf", "what the fudge", true);

    Analyzer a = getFlattenAnalyzer(b, true);

    assertAnalyzesTo(
        a,
        "wtf happened",
        new String[] {"what", "wtf", "the", "fudge", "happened"},
        new int[] {0, 0, 0, 0, 4},
        new int[] {3, 3, 3, 3, 12},
        null,
        new int[] {1, 0, 1, 1, 1},
        new int[] {1, 3, 1, 1, 1},
        true);

    Directory dir = newDirectory();
    RandomIndexWriter w = new RandomIndexWriter(random(), dir, a);
    Document doc = new Document();
    doc.add(newTextField("field", "wtf happened", Field.Store.NO));
    w.addDocument(doc);
    IndexReader r = w.getReader();
    w.close();

    IndexSearcher s = newSearcher(r);

    // Good (this should not match, and doesn't):
    assertEquals(0, s.count(new PhraseQuery("field", "what", "happened")));

    // Bad (this should match, but doesn't):
    assertEquals(0, s.count(new PhraseQuery("field", "wtf", "happened")));

    // Good (this should match, and does):
    assertEquals(1, s.count(new PhraseQuery("field", "what", "the", "fudge", "happened")));

    // Bad (this should not match, but does):
    assertEquals(1, s.count(new PhraseQuery("field", "wtf", "the")));

    IOUtils.close(r, dir);
  }


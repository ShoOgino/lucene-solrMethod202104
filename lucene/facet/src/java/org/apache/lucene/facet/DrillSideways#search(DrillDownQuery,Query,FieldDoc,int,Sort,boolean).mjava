  /** Search, sorting by {@link Sort}, and computing drill down and sideways counts. */
  public DrillSidewaysResult search(
      DrillDownQuery query, Query filter, FieldDoc after, int topN, Sort sort, boolean doDocScores)
      throws IOException {
    if (filter != null) {
      query = new DrillDownQuery(config, filter, query);
    }
    if (sort != null) {
      int limit = searcher.getIndexReader().maxDoc();
      if (limit == 0) {
        limit = 1; // the collector does not alow numHits = 0
      }
      final int fTopN = Math.min(topN, limit);

      if (executor != null) { // We have an executor, let use the multi-threaded version

        final CollectorManager<TopFieldCollector, TopFieldDocs> collectorManager =
            new CollectorManager<TopFieldCollector, TopFieldDocs>() {

              @Override
              public TopFieldCollector newCollector() throws IOException {
                return TopFieldCollector.create(sort, fTopN, after, Integer.MAX_VALUE);
              }

              @Override
              public TopFieldDocs reduce(Collection<TopFieldCollector> collectors)
                  throws IOException {
                final TopFieldDocs[] topFieldDocs = new TopFieldDocs[collectors.size()];
                int pos = 0;
                for (TopFieldCollector collector : collectors)
                  topFieldDocs[pos++] = collector.topDocs();
                return TopDocs.merge(sort, topN, topFieldDocs);
              }
            };
        ConcurrentDrillSidewaysResult<TopFieldDocs> r = search(query, collectorManager);
        TopFieldDocs topDocs = r.collectorResult;
        if (doDocScores) {
          TopFieldCollector.populateScores(topDocs.scoreDocs, searcher, query);
        }
        return new DrillSidewaysResult(r.facets, topDocs);

      } else {

        final TopFieldCollector hitCollector =
            TopFieldCollector.create(sort, fTopN, after, Integer.MAX_VALUE);
        DrillSidewaysResult r = search(query, hitCollector);
        TopFieldDocs topDocs = hitCollector.topDocs();
        if (doDocScores) {
          TopFieldCollector.populateScores(topDocs.scoreDocs, searcher, query);
        }
        return new DrillSidewaysResult(r.facets, topDocs);
      }
    } else {
      return search(after, query, topN);
    }
  }


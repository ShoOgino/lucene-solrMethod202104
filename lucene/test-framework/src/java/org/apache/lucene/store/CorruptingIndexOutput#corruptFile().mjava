  protected void corruptFile() throws IOException {
    // Now corrupt the specfied byte:
    String newTempName;
    try (IndexOutput tmpOut = dir.createTempOutput("tmp", "tmp", IOContext.DEFAULT);
        IndexInput in = dir.openInput(out.getName(), IOContext.DEFAULT)) {
      newTempName = tmpOut.getName();

      if (byteToCorrupt >= in.length()) {
        throw new IllegalArgumentException(
            "byteToCorrupt="
                + byteToCorrupt
                + " but file \""
                + out.getName()
                + "\" is only length="
                + in.length());
      }

      tmpOut.copyBytes(in, byteToCorrupt);
      // Flip the 0th bit:
      tmpOut.writeByte((byte) (in.readByte() ^ 1));
      tmpOut.copyBytes(in, in.length() - byteToCorrupt - 1);
    }

    // Delete original and copy corrupt version back:
    dir.deleteFile(out.getName());
    dir.copyFrom(dir, newTempName, out.getName(), IOContext.DEFAULT);
    dir.deleteFile(newTempName);
  }


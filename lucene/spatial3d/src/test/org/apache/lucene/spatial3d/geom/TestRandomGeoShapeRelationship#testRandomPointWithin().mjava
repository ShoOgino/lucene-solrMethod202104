  /**
   * Test for WITHIN points. We build a WITHIN shape with respect the geoAreaShape
   * and create a point WITHIN the shape. The resulting shape should be WITHIN
   * the original shape.
   *
   */
  @Test
  public void testRandomPointWithin() {
    int referenceShapeType = CONVEX_POLYGON;
    PlanetModel planetModel = randomPlanetModel();
    int shapeType = randomShapeType();
    while (shapeType == POINT || shapeType == LINE) {
      shapeType = randomShapeType();
    }
    GeoAreaShape shape = null;
    GeoPoint point = null;
    while (point == null) {
      shape = randomGeoAreaShape(shapeType, planetModel);
      Constraints constraints = getEmptyConstraint();
      constraints.put(shape, GeoArea.WITHIN);
      GeoAreaShape reference =  randomGeoAreaShape(referenceShapeType, planetModel, constraints);
      if (reference != null) {
        constraints = new Constraints();
        constraints.put(reference, GeoArea.WITHIN);
        point = randomGeoPoint(planetModel, constraints);
      }
    }
    StringBuilder b = new StringBuilder();
    b.append("shape: " + shape + "\n");
    b.append("point: " + point);
    assertTrue(b.toString(), shape.isWithin(point));
  }


  public void testRenameTmpFile() throws IOException {
    try (Directory directory = getDirectory(createTempDir())) {
      final String name;
      try (IndexOutput out = directory.createTempOutput("foo.cfs", "", IOContext.DEFAULT)) {
        out.writeInt(1);
        name = out.getName();
      }
      assertEquals(1, Arrays.stream(directory.listAll()).filter(f -> f.equals(name)).count());
      assertEquals(0, Arrays.stream(directory.listAll()).filter(f -> f.equals("foo.cfs")).count());
      directory.rename(name, "foo.cfs");
      assertEquals(1, Arrays.stream(directory.listAll()).filter(f -> f.equals("foo.cfs")).count());
      assertEquals(0, Arrays.stream(directory.listAll()).filter(f -> f.equals(name)).count());
    }

    try (Directory directory = newFSSwitchDirectory(Collections.singleton("bar"))) {
      String brokenName;
      try (IndexOutput out = directory.createTempOutput("foo", "bar", IOContext.DEFAULT)) {
        out.writeInt(1);
        brokenName = out.getName();
      }
      AtomicMoveNotSupportedException exception =
          expectThrows(
              AtomicMoveNotSupportedException.class, () -> directory.rename(brokenName, "foo.bar"));
      assertEquals(
          "foo_bar_0.tmp -> foo.bar: source and dest are in different directories",
          exception.getMessage());
    }
  }


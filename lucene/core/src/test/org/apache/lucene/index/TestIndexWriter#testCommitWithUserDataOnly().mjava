  // LUCENE-4575
  public void testCommitWithUserDataOnly() throws Exception {
    Directory dir = newDirectory();
    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(null));
    writer.commit(); // first commit to complete IW create transaction.

    // this should store the commit data, even though no other changes were made
    writer.setLiveCommitData(
        new HashMap<String, String>() {
          {
            put("key", "value");
          }
        }.entrySet());
    writer.commit();

    DirectoryReader r = DirectoryReader.open(dir);
    assertEquals("value", r.getIndexCommit().getUserData().get("key"));
    r.close();

    // now check setCommitData and prepareCommit/commit sequence
    writer.setLiveCommitData(
        new HashMap<String, String>() {
          {
            put("key", "value1");
          }
        }.entrySet());
    writer.prepareCommit();
    writer.setLiveCommitData(
        new HashMap<String, String>() {
          {
            put("key", "value2");
          }
        }.entrySet());
    writer.commit(); // should commit the first commitData only, per protocol

    r = DirectoryReader.open(dir);
    assertEquals("value1", r.getIndexCommit().getUserData().get("key"));
    r.close();

    // now should commit the second commitData - there was a bug where
    // IndexWriter.finishCommit overrode the second commitData
    writer.commit();
    r = DirectoryReader.open(dir);
    assertEquals(
        "IndexWriter.finishCommit may have overridden the second commitData",
        "value2",
        r.getIndexCommit().getUserData().get("key"));
    r.close();

    writer.close();
    dir.close();
  }


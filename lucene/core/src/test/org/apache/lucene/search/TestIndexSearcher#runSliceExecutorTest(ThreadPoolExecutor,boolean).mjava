  private void runSliceExecutorTest(ThreadPoolExecutor service, boolean useRandomSliceExecutor)
      throws Exception {
    SliceExecutor sliceExecutor =
        useRandomSliceExecutor == true
            ? new RandomBlockingSliceExecutor(service)
            : new QueueSizeBasedExecutor(service);

    IndexSearcher searcher = new IndexSearcher(reader.getContext(), service, sliceExecutor);

    Query queries[] = new Query[] {new MatchAllDocsQuery(), new TermQuery(new Term("field", "1"))};
    Sort sorts[] = new Sort[] {null, new Sort(new SortField("field2", SortField.Type.STRING))};
    ScoreDoc afters[] =
        new ScoreDoc[] {null, new FieldDoc(0, 0f, new Object[] {new BytesRef("boo!")})};

    for (ScoreDoc after : afters) {
      for (Query query : queries) {
        for (Sort sort : sorts) {
          searcher.search(query, Integer.MAX_VALUE);
          searcher.searchAfter(after, query, Integer.MAX_VALUE);
          if (sort != null) {
            TopDocs topDocs = searcher.search(query, Integer.MAX_VALUE, sort);
            assertTrue(topDocs.totalHits.value > 0);

            topDocs = searcher.search(query, Integer.MAX_VALUE, sort, true);
            assertTrue(topDocs.totalHits.value > 0);

            topDocs = searcher.search(query, Integer.MAX_VALUE, sort, false);
            assertTrue(topDocs.totalHits.value > 0);

            topDocs = searcher.searchAfter(after, query, Integer.MAX_VALUE, sort);
            assertTrue(topDocs.totalHits.value > 0);

            topDocs = searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, true);
            assertTrue(topDocs.totalHits.value > 0);

            topDocs = searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, false);
            assertTrue(topDocs.totalHits.value > 0);
          }
        }
      }
    }
  }


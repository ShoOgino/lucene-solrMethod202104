  private static Query createJoinQuery(
      boolean multipleValuesPerDocument,
      String toField,
      Query fromQuery,
      String fromField,
      IndexSearcher fromSearcher,
      ScoreMode scoreMode,
      final GenericTermsCollector collector)
      throws IOException {

    fromSearcher.search(fromQuery, collector);
    switch (scoreMode) {
      case None:
        return new TermsQuery(
            toField,
            collector.getCollectedTerms(),
            fromField,
            fromQuery,
            fromSearcher.getTopReaderContext().id());
      case Total:
      case Max:
      case Min:
      case Avg:
        return new TermsIncludingScoreQuery(
            scoreMode,
            toField,
            multipleValuesPerDocument,
            collector.getCollectedTerms(),
            collector.getScoresPerTerm(),
            fromField,
            fromQuery,
            fromSearcher.getTopReaderContext().id());
      default:
        throw new IllegalArgumentException(
            String.format(Locale.ROOT, "Score mode %s isn't supported.", scoreMode));
    }
  }


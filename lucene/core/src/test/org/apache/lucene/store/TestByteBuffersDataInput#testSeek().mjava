  @Test
  public void testSeek() throws Exception {
    for (int reps = randomIntBetween(1, 200); --reps > 0; ) {
      ByteBuffersDataOutput dst = new ByteBuffersDataOutput();

      byte[] prefix = {};
      if (randomBoolean()) {
        prefix = new byte[randomIntBetween(1, 1024 * 8)];
        dst.writeBytes(prefix);
      }

      long seed = randomLong();
      int max = 1000;
      List<IOConsumer<DataInput>> reply =
          TestByteBuffersDataOutput.addRandomData(dst, new Xoroshiro128PlusRandom(seed), max);

      ByteBuffersDataInput in = dst.toDataInput().slice(prefix.length, dst.size() - prefix.length);

      in.seek(0);
      for (IOConsumer<DataInput> c : reply) {
        c.accept(in);
      }

      in.seek(0);
      for (IOConsumer<DataInput> c : reply) {
        c.accept(in);
      }

      byte[] array = dst.toArrayCopy();
      array = ArrayUtil.copyOfSubArray(array, prefix.length, array.length);

      for (int i = 0; i < 1000; i++) {
        int offs = randomIntBetween(0, array.length - 1);
        in.seek(offs);
        assertEquals(offs, in.position());
        assertEquals(array[offs], in.readByte());
      }
      in.seek(in.size());
      assertEquals(in.size(), in.position());
      LuceneTestCase.expectThrows(
          EOFException.class,
          () -> {
            in.readByte();
          });
    }
  }


  /**
   * Recursively looks for indexes underneath <code>file</code>, and runs checkindex on them.
   * returns true if it found any indexes.
   */
  public boolean checkIndexes(Path path) throws IOException {
    final AtomicBoolean found = new AtomicBoolean();
    Files.walkFileTree(
        path,
        new SimpleFileVisitor<Path>() {
          @Override
          public FileVisitResult postVisitDirectory(Path dirPath, IOException exc)
              throws IOException {
            if (exc != null) {
              throw exc;
            } else {
              try (BaseDirectoryWrapper dir = newFSDirectory(dirPath)) {
                dir.setCheckIndexOnClose(false); // don't double-checkindex
                if (DirectoryReader.indexExists(dir)) {
                  if (VERBOSE) {
                    System.err.println("Checking index: " + dirPath);
                  }
                  // LUCENE-4738: if we crashed while writing first
                  // commit it's possible index will be corrupt (by
                  // design we don't try to be smart about this case
                  // since that too risky):
                  if (SegmentInfos.getLastCommitGeneration(dir) > 1) {
                    TestUtil.checkIndex(dir);
                  }
                  found.set(true);
                }
              }
              return FileVisitResult.CONTINUE;
            }
          }
        });
    return found.get();
  }


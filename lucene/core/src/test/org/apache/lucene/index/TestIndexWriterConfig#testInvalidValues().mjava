  @Test
  public void testInvalidValues() throws Exception {
    IndexWriterConfig conf = new IndexWriterConfig(new MockAnalyzer(random()));

    // Test IndexDeletionPolicy
    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());
    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));
    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());
    expectThrows(
        IllegalArgumentException.class,
        () -> {
          conf.setIndexDeletionPolicy(null);
        });

    // Test MergeScheduler
    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());
    conf.setMergeScheduler(new SerialMergeScheduler());
    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());
    expectThrows(
        IllegalArgumentException.class,
        () -> {
          conf.setMergeScheduler(null);
        });

    // Test Similarity:
    // we shouldnt assert what the default is, just that it's not null.
    assertTrue(IndexSearcher.getDefaultSimilarity() == conf.getSimilarity());
    conf.setSimilarity(new MySimilarity());
    assertEquals(MySimilarity.class, conf.getSimilarity().getClass());
    expectThrows(
        IllegalArgumentException.class,
        () -> {
          conf.setSimilarity(null);
        });

    expectThrows(
        IllegalArgumentException.class,
        () -> {
          conf.setMaxBufferedDocs(1);
        });

    expectThrows(
        IllegalArgumentException.class,
        () -> {
          // Disable both MAX_BUF_DOCS and RAM_SIZE_MB
          conf.setMaxBufferedDocs(4);
          conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);
          conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);
        });

    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);
    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);
    expectThrows(
        IllegalArgumentException.class,
        () -> {
          conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);
        });

    expectThrows(
        IllegalArgumentException.class,
        () -> {
          conf.setRAMPerThreadHardLimitMB(2048);
        });

    expectThrows(
        IllegalArgumentException.class,
        () -> {
          conf.setRAMPerThreadHardLimitMB(0);
        });

    // Test MergePolicy
    assertEquals(TieredMergePolicy.class, conf.getMergePolicy().getClass());
    conf.setMergePolicy(new LogDocMergePolicy());
    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());
    expectThrows(
        IllegalArgumentException.class,
        () -> {
          conf.setMergePolicy(null);
        });
  }


  private void doTestQueryDoubleValuesSources(Query q) throws Exception {
    DoubleValuesSource vs = DoubleValuesSource.fromQuery(q).rewrite(searcher);
    searcher.search(
        q,
        new SimpleCollector() {

          DoubleValues v;
          Scorable scorer;
          LeafReaderContext ctx;

          @Override
          protected void doSetNextReader(LeafReaderContext context) throws IOException {
            this.ctx = context;
          }

          @Override
          public void setScorer(Scorable scorer) throws IOException {
            this.scorer = scorer;
            this.v = vs.getValues(this.ctx, DoubleValuesSource.fromScorer(scorer));
          }

          @Override
          public void collect(int doc) throws IOException {
            assertTrue(v.advanceExact(doc));
            assertEquals(scorer.score(), v.doubleValue(), 0.00001);
          }

          @Override
          public ScoreMode scoreMode() {
            return ScoreMode.COMPLETE;
          }
        });
  }


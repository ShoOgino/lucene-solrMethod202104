private boolean r_mark_regions() {
  B_no_diacritics = true;
  int v_1 = cursor;
  lab0: {
    golab1: while(true)
    {
      lab2: {
        if (!(in_grouping(g_sa, 263, 382)))
        {
          break lab2;
        }
        break golab1;
      }
      if (cursor >= limit)
      {
        break lab0;
      }
      cursor++;
    }
    B_no_diacritics = false;
  }
  cursor = v_1;
  I_p1 = limit;
  int v_3 = cursor;
  lab3: {
    golab4: while(true)
    {
      lab5: {
        if (!(in_grouping(g_v, 97, 117)))
        {
          break lab5;
        }
        break golab4;
      }
      if (cursor >= limit)
      {
        break lab3;
      }
      cursor++;
    }
    I_p1 = cursor;
    if (!(I_p1 < 2))
    {
      break lab3;
    }
    golab6: while(true)
    {
      lab7: {
        if (!(out_grouping(g_v, 97, 117)))
        {
          break lab7;
        }
        break golab6;
      }
      if (cursor >= limit)
      {
        break lab3;
      }
      cursor++;
    }
    I_p1 = cursor;
  }
  cursor = v_3;
  int v_6 = cursor;
  lab8: {
    golab9: while(true)
    {
      lab10: {
        if (!(eq_s("r")))
        {
          break lab10;
        }
        break golab9;
      }
      if (cursor >= limit)
      {
        break lab8;
      }
      cursor++;
    }
    lab11: {
      int v_8 = cursor;
      lab12: {
        if (!(cursor >= 2))
        {
          break lab12;
        }
        break lab11;
      }
      cursor = v_8;
      golab13: while(true)
      {
        lab14: {
          if (!(out_grouping(g_rg, 114, 114)))
          {
            break lab14;
          }
          break golab13;
        }
        if (cursor >= limit)
        {
          break lab8;
        }
        cursor++;
      }
    }
    if (!((I_p1 - cursor) > 1))
    {
      break lab8;
    }
    I_p1 = cursor;
  }
  cursor = v_6;
  return true;
}


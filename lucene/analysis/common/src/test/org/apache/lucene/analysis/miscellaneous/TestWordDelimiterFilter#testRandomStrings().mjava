  /** blast some random strings through the analyzer */
  public void testRandomStrings() throws Exception {
    int numIterations = atLeast(3);
    for (int i = 0; i < numIterations; i++) {
      final int flags = random().nextInt(512);
      final CharArraySet protectedWords;
      if (random().nextBoolean()) {
        protectedWords = new CharArraySet(new HashSet<>(Arrays.asList("a", "b", "cd")), false);
      } else {
        protectedWords = null;
      }

      Analyzer a =
          new Analyzer() {

            @Override
            protected TokenStreamComponents createComponents(String fieldName) {
              Tokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);
              return new TokenStreamComponents(
                  tokenizer, new WordDelimiterFilter(tokenizer, flags, protectedWords));
            }
          };
      // TODO: properly support positionLengthAttribute
      checkRandomData(random(), a, 100 * RANDOM_MULTIPLIER, 20, false, false);
      a.close();
    }
  }


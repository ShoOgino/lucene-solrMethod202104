  // LUCENE-6299
  public void testDeleteAllMultipleThreads() throws Exception {
    int limit = TestUtil.nextInt(random(), 2, 10);
    setIndexWriterMaxDocs(limit);
    try {
      Directory dir = newDirectory();
      IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(null));

      CountDownLatch startingGun = new CountDownLatch(1);
      Thread[] threads = new Thread[limit];
      for (int i = 0; i < limit; i++) {
        threads[i] =
            new Thread() {
              @Override
              public void run() {
                try {
                  startingGun.await();
                  w.addDocument(new Document());
                } catch (Exception e) {
                  throw new RuntimeException(e);
                }
              }
            };
        threads[i].start();
      }

      startingGun.countDown();

      for (Thread thread : threads) {
        thread.join();
      }

      expectThrows(
          IllegalArgumentException.class,
          () -> {
            w.addDocument(new Document());
          });

      w.deleteAll();
      for (int i = 0; i < limit; i++) {
        w.addDocument(new Document());
      }
      expectThrows(
          IllegalArgumentException.class,
          () -> {
            w.addDocument(new Document());
          });

      w.close();
      dir.close();
    } finally {
      restoreIndexWriterMaxDocs();
    }
  }


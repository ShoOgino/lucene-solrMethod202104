    /**
     * Apply subsequent token filters if the current token's term matches a predicate
     *
     * <p>This is the equivalent of:
     *
     * <pre>
     *   when(new ConditionalTokenFilterFactory(Collections.emptyMap()) {
     *      {@code @}Override
     *      protected ConditionalTokenFilter create(TokenStream input, Function&lt;TokenStream, TokenStream&gt; inner) {
     *        return new ConditionalTokenFilter(input, inner) {
     *          CharTermAttribute termAtt = addAttribute(CharTermAttribute.class);
     *          {@code @}Override
     *          protected boolean shouldFilter() {
     *            return predicate.test(termAtt);
     *          }
     *        };
     *      }
     *   });
     * </pre>
     */
    public ConditionBuilder whenTerm(Predicate<CharSequence> predicate) {
      return new ConditionBuilder(
          new ConditionalTokenFilterFactory(Collections.emptyMap()) {
            @Override
            protected ConditionalTokenFilter create(
                TokenStream input, Function<TokenStream, TokenStream> inner) {
              return new ConditionalTokenFilter(input, inner) {
                CharTermAttribute termAtt = addAttribute(CharTermAttribute.class);

                @Override
                protected boolean shouldFilter() {
                  return predicate.test(termAtt);
                }
              };
            }
          },
          this);
    }


  /**
   * Wait to see an entry in the ClusterState with a specific coreNodeName and
   * baseUrl.
   * 
   * @param zkStateReader
   *          to use for ClusterState
   * @param collection
   *          to look in
   * @param coreNodeName
   *          to wait for
   * @param baseUrl
   *          to wait for
   * @param timeoutInMs
   *          how long to wait before giving up
   * @return false if timed out
   */
  public static boolean waitToSeeLiveReplica(ZkStateReader zkStateReader,
      String collection, String coreNodeName, String baseUrl,
      int timeoutInMs) {
    long timeout = System.nanoTime()
        + TimeUnit.NANOSECONDS.convert(timeoutInMs, TimeUnit.MILLISECONDS);
    
    while (System.nanoTime() < timeout) {
      log.debug("waiting to see replica just created live collection={} replica={} baseUrl={}",
          collection, coreNodeName, baseUrl);
      ClusterState clusterState = zkStateReader.getClusterState();
      if (clusterState != null) {
        DocCollection docCollection = clusterState.getCollection(collection);
        Collection<Slice> slices = docCollection.getSlices();
        for (Slice slice : slices) {
          // only look at active shards
          if (slice.getState() == Slice.State.ACTIVE) {
            Collection<Replica> replicas = slice.getReplicas();
            for (Replica replica : replicas) {
              // on a live node?
              boolean live = clusterState.liveNodesContain(replica.getNodeName());
              String rcoreNodeName = replica.getName();
              String rbaseUrl = replica.getBaseUrl();
              if (live && coreNodeName.equals(rcoreNodeName)
                  && baseUrl.equals(rbaseUrl)) {
                // found it
                return true;
              }
            }
          }
        }
        try {
          Thread.sleep(TIMEOUT_POLL_MS);
        } catch (InterruptedException e) {
          Thread.currentThread().interrupt();
          throw new SolrException(ErrorCode.SERVER_ERROR, "Interrupted");
        }
      }
    }
    
    log.error("Timed out waiting to see replica just created in cluster state. Continuing...");
    return false;
  }


  /**
   * Return true if the query matches at least one document. It creates a visitor that terminates as
   * soon as one or more docs are matched.
   */
  private static boolean hasAnyHits(final ShapeQuery query, final PointValues values)
      throws IOException {
    try {
      values.intersect(
          new IntersectVisitor() {
            final ShapeField.DecodedTriangle scratchTriangle = new ShapeField.DecodedTriangle();

            @Override
            public void visit(int docID) {
              throw new CollectionTerminatedException();
            }

            @Override
            public void visit(int docID, byte[] t) {
              if (query.queryMatches(t, scratchTriangle, query.getQueryRelation())) {
                throw new CollectionTerminatedException();
              }
            }

            @Override
            public void visit(DocIdSetIterator iterator, byte[] t) {
              if (query.queryMatches(t, scratchTriangle, query.getQueryRelation())) {
                throw new CollectionTerminatedException();
              }
            }

            @Override
            public Relation compare(byte[] minPackedValue, byte[] maxPackedValue) {
              Relation rel =
                  query.relateRangeToQuery(
                      minPackedValue, maxPackedValue, query.getQueryRelation());
              if (rel == Relation.CELL_INSIDE_QUERY) {
                throw new CollectionTerminatedException();
              }
              return rel;
            }
          });
    } catch (CollectionTerminatedException e) {
      return true;
    }
    return false;
  }


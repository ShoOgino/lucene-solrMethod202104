  @Override
  public void setBottom(int slot) {
    bottom = values[slot];
    // make bounding box(es) to exclude non-competitive hits, but start
    // sampling if we get called way too much: don't make gobs of bounding
    // boxes if comparator hits a worst case order (e.g. backwards distance order)
    if (bottom < Float.MAX_VALUE
        && (setBottomCounter < 1024 || (setBottomCounter & 0x3F) == 0x3F)) {

      XYRectangle rectangle = XYRectangle.fromPointDistance((float) x, (float) y, (float) bottom);
      // pre-encode our box to our integer encoding, so we don't have to decode
      // to double values for uncompetitive hits. This has some cost!
      this.minX = XYEncodingUtils.encode(rectangle.minX);
      this.maxX = XYEncodingUtils.encode(rectangle.maxX);
      this.minY = XYEncodingUtils.encode(rectangle.minY);
      this.maxY = XYEncodingUtils.encode(rectangle.maxY);
    }
    setBottomCounter++;
  }


  /**
   * Checks whether there is a loop containing s. (This is sufficient since there are never
   * transitions to dead states.)
   */
  // TODO: not great that this is recursive... in theory a
  // large automata could exceed java's stack
  private static boolean isFiniteSlow(Automaton a, int s, HashSet<Integer> path) {
    path.add(s);
    Transition t = new Transition();
    int count = a.initTransition(s, t);
    for (int i = 0; i < count; i++) {
      a.getNextTransition(t);
      if (path.contains(t.dest) || !isFiniteSlow(a, t.dest, path)) {
        return false;
      }
    }
    path.remove(s);
    return true;
  }


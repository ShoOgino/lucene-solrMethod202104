  public void testDoubleRangeDocValuesIntersectsQuery() throws IOException {
    Directory dir = newDirectory();
    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);
    final int iters = atLeast(10);
    double[] min = {112.7, 296.0, 512.4};
    double[] max = {119.3, 314.8, 524.3};
    for (int i = 0; i < iters; ++i) {
      Document doc = new Document();
      doc.add(new DoubleRangeDocValuesField("dv", min, max));
      iw.addDocument(doc);
    }
    iw.commit();

    double[] nonMatchingMin = {256.7, 296.0, 532.4};
    double[] nonMatchingMax = {259.3, 364.8, 534.3};

    Document doc = new Document();
    doc.add(new DoubleRangeDocValuesField("dv", nonMatchingMin, nonMatchingMax));
    iw.addDocument(doc);
    iw.commit();

    IndexReader reader = iw.getReader();
    final IndexSearcher searcher = newSearcher(reader);
    iw.close();

    final double[] lowRange = {111.3, 294.4, 517.4};
    final double[] highRange = {116.7, 319.4, 533.0};

    Query query = DoubleRangeDocValuesField.newSlowIntersectsQuery("dv", lowRange, highRange);
    assertEquals(searcher.count(query), iters);

    double[] lowRange2 = {116.3, 299.3, 517.0};
    double[] highRange2 = {121.0, 317.1, 531.2};

    query = DoubleRangeDocValuesField.newSlowIntersectsQuery("dv", lowRange2, highRange2);

    assertEquals(searcher.count(query), iters);

    reader.close();
    dir.close();
  }


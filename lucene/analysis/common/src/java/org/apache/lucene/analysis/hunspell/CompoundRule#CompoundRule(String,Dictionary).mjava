  CompoundRule(String rule, Dictionary dictionary) {
    this.dictionary = dictionary;
    StringBuilder parsedFlags = new StringBuilder();
    int pos = 0;
    while (pos < rule.length()) {
      int lParen = rule.indexOf("(", pos);
      if (lParen < 0) {
        parsedFlags.append(dictionary.flagParsingStrategy.parseFlags(rule.substring(pos)));
        break;
      }

      parsedFlags.append(dictionary.flagParsingStrategy.parseFlags(rule.substring(pos, lParen)));
      int rParen = rule.indexOf(')', lParen + 1);
      if (rParen < 0) {
        throw new IllegalArgumentException("Unmatched parentheses: " + rule);
      }

      parsedFlags.append(
          dictionary.flagParsingStrategy.parseFlags(rule.substring(lParen + 1, rParen)));
      pos = rParen + 1;
      if (pos < rule.length() && (rule.charAt(pos) == '?' || rule.charAt(pos) == '*')) {
        parsedFlags.append(rule.charAt(pos++));
      }
    }
    data = parsedFlags.toString().toCharArray();
  }


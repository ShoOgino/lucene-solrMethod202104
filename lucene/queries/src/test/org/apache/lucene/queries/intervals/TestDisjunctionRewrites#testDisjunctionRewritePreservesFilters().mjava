  public void testDisjunctionRewritePreservesFilters() {

    // BLOCK(a, MAXGAPS/3(OR(BLOCK(a, b), BLOCK(c, d))), c)
    // => or(BLOCK(a, MAXGAPS/3(BLOCK(a, b)), c), BLOCK(a, MAXGAPS/3(BLOCK(c, d)), c))

    IntervalsSource actual =
        Intervals.phrase(
            Intervals.term("a"),
            Intervals.maxgaps(
                3, Intervals.or(Intervals.phrase("a", "b"), Intervals.phrase("c", "d"))),
            Intervals.term("c"));

    IntervalsSource expected =
        Intervals.or(
            Intervals.phrase(
                Intervals.term("a"),
                Intervals.maxgaps(3, Intervals.phrase("a", "b")),
                Intervals.term("c")),
            Intervals.phrase(
                Intervals.term("a"),
                Intervals.maxgaps(3, Intervals.phrase("c", "d")),
                Intervals.term("c")));

    assertEquals(expected, actual);
  }


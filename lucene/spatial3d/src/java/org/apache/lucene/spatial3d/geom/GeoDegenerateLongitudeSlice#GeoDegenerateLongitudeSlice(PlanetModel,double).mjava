  /** Accepts only values in the following ranges: lon: {@code -PI -> PI} */
  public GeoDegenerateLongitudeSlice(final PlanetModel planetModel, final double longitude) {
    super(planetModel);
    // Argument checking
    if (longitude < -Math.PI || longitude > Math.PI)
      throw new IllegalArgumentException("Longitude out of range");
    this.longitude = longitude;

    final double sinLongitude = Math.sin(longitude);
    final double cosLongitude = Math.cos(longitude);

    this.plane = new Plane(cosLongitude, sinLongitude);
    // We need a bounding plane too, which is perpendicular to the longitude plane and sided so that
    // the point (0.0, longitude) is inside.
    this.interiorPoint = new GeoPoint(planetModel, 0.0, sinLongitude, 1.0, cosLongitude);
    this.boundingPlane = new SidedPlane(interiorPoint, -sinLongitude, cosLongitude);
    this.edgePoints = new GeoPoint[] {interiorPoint};
    this.planePoints = new GeoPoint[] {planetModel.NORTH_POLE, planetModel.SOUTH_POLE};
  }


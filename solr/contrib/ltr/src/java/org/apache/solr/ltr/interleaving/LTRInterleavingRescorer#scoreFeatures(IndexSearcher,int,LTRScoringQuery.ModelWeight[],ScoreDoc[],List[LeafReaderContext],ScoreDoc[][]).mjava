  public void scoreFeatures(IndexSearcher indexSearcher,
                            int topN, LTRScoringQuery.ModelWeight[] modelWeights, ScoreDoc[] hits, List<LeafReaderContext> leaves,
                            ScoreDoc[][] rerankedPerModel) throws IOException {

    int readerUpto = -1;
    int endDoc = 0;
    int docBase = 0;
    int hitUpto = 0;
    LTRScoringQuery.ModelWeight.ModelScorer[] scorers = new LTRScoringQuery.ModelWeight.ModelScorer[rerankingQueries.length];
    while (hitUpto < hits.length) {
      final ScoreDoc hit = hits[hitUpto];
      final int docID = hit.doc;
      LeafReaderContext readerContext = null;
      while (docID >= endDoc) {
        readerUpto++;
        readerContext = leaves.get(readerUpto);
        endDoc = readerContext.docBase + readerContext.reader().maxDoc();
      }

      // We advanced to another segment
      if (readerContext != null) {
        docBase = readerContext.docBase;
        for (int i = 0; i < modelWeights.length; i++) {
          if (modelWeights[i] != null) {
            scorers[i] = modelWeights[i].scorer(readerContext);
          }
        }
      }
      for (int i = 0; i < rerankingQueries.length; i++) {
        if (modelWeights[i] != null) {
          scoreSingleHit(indexSearcher, topN, modelWeights[i], docBase, hitUpto, new ScoreDoc(hit.doc, hit.score, hit.shardIndex), docID, rerankingQueries[i], scorers[i], rerankedPerModel[i]);
        }
      }
      hitUpto++;
    }

  }


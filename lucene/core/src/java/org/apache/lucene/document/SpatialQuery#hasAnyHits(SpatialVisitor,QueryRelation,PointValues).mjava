  /**
   * Return true if the query matches at least one document. It creates a visitor that terminates as
   * soon as one or more docs are matched.
   */
  private static boolean hasAnyHits(
      final SpatialVisitor spatialVisitor, QueryRelation queryRelation, final PointValues values)
      throws IOException {
    try {
      final BiFunction<byte[], byte[], Relation> innerFunction =
          spatialVisitor.getInnerFunction(queryRelation);
      final Predicate<byte[]> leafPredicate = spatialVisitor.getLeafPredicate(queryRelation);
      values.intersect(
          new IntersectVisitor() {

            @Override
            public void visit(int docID) {
              throw new CollectionTerminatedException();
            }

            @Override
            public void visit(int docID, byte[] t) {
              if (leafPredicate.test(t)) {
                throw new CollectionTerminatedException();
              }
            }

            @Override
            public void visit(DocIdSetIterator iterator, byte[] t) {
              if (leafPredicate.test(t)) {
                throw new CollectionTerminatedException();
              }
            }

            @Override
            public Relation compare(byte[] minPackedValue, byte[] maxPackedValue) {
              Relation rel = innerFunction.apply(minPackedValue, maxPackedValue);
              if (rel == Relation.CELL_INSIDE_QUERY) {
                throw new CollectionTerminatedException();
              }
              return rel;
            }
          });
    } catch (CollectionTerminatedException e) {
      return true;
    }
    return false;
  }


  // not ok to have one leaf w/ index sort and another with a different index sort
  public void testWithIndexSort1() throws Exception {
    Directory dir1 = newDirectory();
    IndexWriterConfig iwc1 = newIndexWriterConfig(new MockAnalyzer(random()));
    iwc1.setIndexSort(new Sort(new SortField("foo", SortField.Type.INT)));
    IndexWriter w1 = new IndexWriter(dir1, iwc1);
    w1.addDocument(new Document());
    w1.commit();
    w1.addDocument(new Document());
    w1.forceMerge(1);
    w1.close();
    IndexReader r1 = DirectoryReader.open(dir1);

    Directory dir2 = newDirectory();
    IndexWriterConfig iwc2 = newIndexWriterConfig(new MockAnalyzer(random()));
    iwc2.setIndexSort(new Sort(new SortField("bar", SortField.Type.INT)));
    IndexWriter w2 = new IndexWriter(dir2, iwc2);
    w2.addDocument(new Document());
    w2.commit();
    w2.addDocument(new Document());
    w2.forceMerge(1);
    w2.close();
    IndexReader r2 = DirectoryReader.open(dir2);

    String message =
        expectThrows(
                IllegalArgumentException.class,
                () -> {
                  new ParallelLeafReader(getOnlyLeafReader(r1), getOnlyLeafReader(r2));
                })
            .getMessage();
    assertEquals(
        "cannot combine LeafReaders that have different index sorts: saw both sort=<int: \"foo\"> and <int: \"bar\">",
        message);
    IOUtils.close(r1, dir1, r2, dir2);
  }


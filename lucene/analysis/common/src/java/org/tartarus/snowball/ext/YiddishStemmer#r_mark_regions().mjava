private boolean r_mark_regions() {
  I_p1 = limit;
  int v_1 = cursor;
  lab0: {
    bra = cursor;
    if (!(eq_s("\u05D2\u05E2")))
    {
      cursor = v_1;
      break lab0;
    }
    ket = cursor;
    slice_from("GE");
  }
  int v_2 = cursor;
  lab1: {
    if (find_among(a_0) == 0)
    {
      cursor = v_2;
      break lab1;
    }
    lab2: {
      int v_3 = cursor;
      lab3: {
        lab4: {
          int v_4 = cursor;
          lab5: {
            if (!(eq_s("\u05E6\u05D5\u05D2\u05E0")))
            {
              break lab5;
            }
            break lab4;
          }
          cursor = v_4;
          lab6: {
            if (!(eq_s("\u05E6\u05D5\u05E7\u05D8")))
            {
              break lab6;
            }
            break lab4;
          }
          cursor = v_4;
          if (!(eq_s("\u05E6\u05D5\u05E7\u05E0")))
          {
            break lab3;
          }
        }
        {
          int v_5 = cursor;
          lab7: {
            {
              int c = cursor + 1;
              if (0 > c || c > limit)
              {
                break lab7;
              }
              cursor = c;
            }
            break lab3;
          }
          cursor = v_5;
        }
        {
          int c = cursor + -4;
          if (0 > c || c > limit)
          {
            break lab3;
          }
          cursor = c;
        }
        break lab2;
      }
      cursor = v_3;
      lab8: {
        bra = cursor;
        if (!(eq_s("\u05D2\u05E2")))
        {
          break lab8;
        }
        ket = cursor;
        slice_from("GE");
        break lab2;
      }
      cursor = v_3;
      bra = cursor;
      if (!(eq_s("\u05E6\u05D5")))
      {
        cursor = v_2;
        break lab1;
      }
      ket = cursor;
      slice_from("TSU");
    }
  }
  int v_6 = cursor;
  {
    int c = cursor + 3;
    if (0 > c || c > limit)
    {
      return false;
    }
    cursor = c;
  }
  I_x = cursor;
  cursor = v_6;
  int v_7 = cursor;
  lab9: {
    if (find_among(a_1) == 0)
    {
      cursor = v_7;
      break lab9;
    }
  }
  {
    int v_8 = cursor;
    lab10: {
      if (!(in_grouping(g_consonant, 1489, 1520)))
      {
        break lab10;
      }
      if (!(in_grouping(g_consonant, 1489, 1520)))
      {
        break lab10;
      }
      if (!(in_grouping(g_consonant, 1489, 1520)))
      {
        break lab10;
      }
      I_p1 = cursor;
      return false;
    }
    cursor = v_8;
  }
  golab11: while(true)
  {
    int v_9 = cursor;
    lab12: {
      if (!(in_grouping(g_vowel, 1488, 1522)))
      {
        break lab12;
      }
      cursor = v_9;
      break golab11;
    }
    cursor = v_9;
    if (cursor >= limit)
    {
      return false;
    }
    cursor++;
  }
  while(true)
  {
    lab13: {
      if (!(in_grouping(g_vowel, 1488, 1522)))
      {
        break lab13;
      }
      continue;
    }
    break;
  }
  I_p1 = cursor;
  lab14: {
    if (!(I_p1 < I_x))
    {
      break lab14;
    }
    I_p1 = I_x;
  }
  return true;
}


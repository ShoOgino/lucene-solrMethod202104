  public void testMaximumGraphCacheSize() throws IOException {

    Token[] tokens = new Token[GraphTokenFilter.MAX_TOKEN_CACHE_SIZE + 5];
    for (int i = 0; i < GraphTokenFilter.MAX_TOKEN_CACHE_SIZE + 5; i++) {
      tokens[i] = new Token("a", 1, i * 2, i * 2 + 1);
    }

    GraphTokenFilter gts = new TestFilter(new CannedTokenStream(tokens));
    Exception e =
        expectThrows(
            IllegalStateException.class,
            () -> {
              gts.reset();
              gts.incrementBaseToken();
              while (true) {
                gts.incrementGraphToken();
              }
            });
    assertEquals("Too many cached tokens (> 100)", e.getMessage());

    gts.reset();
    // after reset, the cache should be cleared and so we can read ahead once more
    gts.incrementBaseToken();
    gts.incrementGraphToken();
  }


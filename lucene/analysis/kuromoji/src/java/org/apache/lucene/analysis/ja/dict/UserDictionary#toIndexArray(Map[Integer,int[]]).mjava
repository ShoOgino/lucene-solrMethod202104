  /**
   * Convert Map of index and wordIdAndLength to array of {wordId, index, length}
   *
   * @return array of {wordId, index, length}
   */
  private int[][] toIndexArray(Map<Integer, int[]> input) {
    ArrayList<int[]> result = new ArrayList<>();
    for (Map.Entry<Integer, int[]> entry : input.entrySet()) {
      int[] wordIdAndLength = entry.getValue();
      int wordId = wordIdAndLength[0];
      // convert length to index
      int current = entry.getKey();
      for (int j = 1; j < wordIdAndLength.length; j++) { // first entry is wordId offset
        int[] token = {wordId + j - 1, current, wordIdAndLength[j]};
        result.add(token);
        current += wordIdAndLength[j];
      }
    }
    return result.toArray(new int[result.size()][]);
  }


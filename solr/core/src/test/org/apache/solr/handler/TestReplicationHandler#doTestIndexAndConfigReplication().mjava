  @Test
  public void doTestIndexAndConfigReplication() throws Exception {

    TestInjection.delayBeforeFollowerCommitRefresh = random().nextInt(10);

    clearIndexWithReplication();

    nDocs--;
    for (int i = 0; i < nDocs; i++)
      index(leaderClient, "id", i, "name", "name = " + i);

    leaderClient.commit();

    @SuppressWarnings({"rawtypes"})
    NamedList leaderQueryRsp = rQuery(nDocs, "*:*", leaderClient);
    SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp.get("response");
    assertEquals(nDocs, numFound(leaderQueryRsp));

    //get docs from follower and check if number is equal to leader
    @SuppressWarnings({"rawtypes"})
    NamedList followerQueryRsp = rQuery(nDocs, "*:*", followerClient);
    SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp.get("response");
    assertEquals(nDocs, numFound(followerQueryRsp));

    //compare results
    String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult, followerQueryResult, 0, null);
    assertEquals(null, cmp);
    
    assertVersions(leaderClient, followerClient);

    //start config files replication test
    leaderClient.deleteByQuery("*:*");
    leaderClient.commit();

    //change the schema on leader
    leader.copyConfigFile(CONF_DIR + "schema-replication2.xml", "schema.xml");

    leaderJetty.stop();

    leaderJetty = createAndStartJetty(leader);
    leaderClient.close();
    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());

    follower.setTestPort(leaderJetty.getLocalPort());
    follower.copyConfigFile(follower.getSolrConfigFile(), "solrconfig.xml");

    followerJetty.stop();

    // setup an sub directory /foo/ in order to force subdir file replication
    File leaderFooDir = new File(leader.getConfDir() + File.separator + "foo");
    File leaderBarFile = new File(leaderFooDir, "bar.txt");
    assertTrue("could not make dir " + leaderFooDir, leaderFooDir.mkdirs());
    assertTrue(leaderBarFile.createNewFile());

    File followerFooDir = new File(follower.getConfDir() + File.separator + "foo");
    File followerBarFile = new File(followerFooDir, "bar.txt");
    assertFalse(followerFooDir.exists());

    followerJetty = createAndStartJetty(follower);
    followerClient.close();
    followerClient = createNewSolrClient(followerJetty.getLocalPort());
    //add a doc with new field and commit on leader to trigger index fetch from follower.
    index(leaderClient, "id", "2000", "name", "name = " + 2000, "newname", "newname = " + 2000);
    leaderClient.commit();

    assertEquals(1, numFound( rQuery(1, "*:*", leaderClient)));
    
    followerQueryRsp = rQuery(1, "*:*", followerClient);
    assertVersions(leaderClient, followerClient);
    SolrDocument d = ((SolrDocumentList) followerQueryRsp.get("response")).get(0);
    assertEquals("newname = 2000", (String) d.getFieldValue("newname"));

    assertTrue(followerFooDir.isDirectory());
    assertTrue(followerBarFile.exists());
    
    checkForSingleIndex(leaderJetty);
    checkForSingleIndex(followerJetty, true);
  }


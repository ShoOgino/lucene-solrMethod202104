  public void testCompareSorting() throws IOException {
    Directory dir = newDirectory();
    RandomIndexWriter w =
        new RandomIndexWriter(
            random(),
            dir,
            newIndexWriterConfig().setMergePolicy(newLogMergePolicy(random().nextBoolean())));

    Document doc = new Document();
    LatLonPoint point = new LatLonPoint("foo", 0., 0.);
    doc.add(point);
    LatLonDocValuesField docValue = new LatLonDocValuesField("foo", 0., 0.);
    doc.add(docValue);

    int numDocs = atLeast(10000);
    for (int i = 0; i < numDocs; ++i) {
      double lat = random().nextDouble() * 180 - 90;
      double lon = random().nextDouble() * 360 - 180;
      point.setLocationValue(lat, lon);
      docValue.setLocationValue(lat, lon);
      w.addDocument(doc);
    }

    DirectoryReader reader = w.getReader();
    IndexSearcher searcher = newSearcher(reader);

    double lat = random().nextDouble() * 180 - 90;
    double lon = random().nextDouble() * 360 - 180;
    double pivotDistance =
        random().nextDouble() * random().nextDouble() * GeoUtils.EARTH_MEAN_RADIUS_METERS * Math.PI;
    float boost = (1 + random().nextInt(10)) / 3f;

    Query query1 = LatLonPoint.newDistanceFeatureQuery("foo", boost, lat, lon, pivotDistance);
    Sort sort1 =
        new Sort(SortField.FIELD_SCORE, LatLonDocValuesField.newDistanceSort("foo", lat, lon));

    Query query2 = new MatchAllDocsQuery();
    Sort sort2 = new Sort(LatLonDocValuesField.newDistanceSort("foo", lat, lon));

    TopDocs topDocs1 = searcher.search(query1, 10, sort1);
    TopDocs topDocs2 = searcher.search(query2, 10, sort2);
    for (int i = 0; i < 10; i++) {
      assertTrue(topDocs1.scoreDocs[i].doc == topDocs2.scoreDocs[i].doc);
    }
    reader.close();
    w.close();
    dir.close();
  }


    public LeafCollector getLeafCollector(LeafReaderContext context) throws IOException {
      final int docBase = context.docBase;
      return new FilterLeafCollector(super.getLeafCollector(context)) {

        @Override
        public void setScorer(Scorable scorer) throws IOException {
          super.setScorer(scorer);
          tqsSet.clear();
          fillLeaves(scorer, tqsSet);
        }

        @Override
        public void collect(int doc) throws IOException {
          int freq = 0;
          for (Scorer scorer : tqsSet) {
            if (doc == scorer.docID()) {
              freq += scorer.score();
            }
          }
          docCounts.put(doc + docBase, freq);
          super.collect(doc);
        }
      };
    }


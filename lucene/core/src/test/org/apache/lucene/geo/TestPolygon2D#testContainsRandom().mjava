  /**
   * If polygon.contains(box) returns true, then any point in that box should return true as well
   */
  public void testContainsRandom() throws Exception {
    int iters = atLeast(50);
    for (int i = 0; i < iters; i++) {
      Polygon polygon = nextPolygon();
      Component2D impl = Polygon2D.create(polygon);

      for (int j = 0; j < 100; j++) {
        Rectangle rectangle = GeoTestUtil.nextBoxNear(polygon);
        // allowed to conservatively return false
        if (impl.relate(rectangle.minLat, rectangle.maxLat, rectangle.minLon, rectangle.maxLon)
            == Relation.CELL_INSIDE_QUERY) {
          for (int k = 0; k < 500; k++) {
            // this tests in our range but sometimes outside! so we have to double-check its really
            // in other box
            double point[] = GeoTestUtil.nextPointNear(rectangle);
            double latitude = point[0];
            double longitude = point[1];
            // check for sure its in our box
            if (latitude >= rectangle.minLat
                && latitude <= rectangle.maxLat
                && longitude >= rectangle.minLon
                && longitude <= rectangle.maxLon) {
              assertTrue(impl.contains(latitude, longitude));
            }
          }
          for (int k = 0; k < 100; k++) {
            // this tests in our range but sometimes outside! so we have to double-check its really
            // in other box
            double point[] = GeoTestUtil.nextPointNear(polygon);
            double latitude = point[0];
            double longitude = point[1];
            // check for sure its in our box
            if (latitude >= rectangle.minLat
                && latitude <= rectangle.maxLat
                && longitude >= rectangle.minLon
                && longitude <= rectangle.maxLon) {
              assertTrue(impl.contains(latitude, longitude));
            }
          }
        }
      }
    }
  }


    SlowMinShouldMatchScorer(BooleanWeight weight, LeafReader reader, IndexSearcher searcher)
        throws IOException {
      super(weight);
      this.dv = reader.getSortedSetDocValues("dv");
      this.maxDoc = reader.maxDoc();
      BooleanQuery bq = (BooleanQuery) weight.getQuery();
      this.minNrShouldMatch = bq.getMinimumNumberShouldMatch();
      this.sims = new LeafSimScorer[(int) dv.getValueCount()];
      for (BooleanClause clause : bq.clauses()) {
        assert !clause.isProhibited();
        assert !clause.isRequired();
        Term term = ((TermQuery) clause.getQuery()).getTerm();
        long ord = dv.lookupTerm(term.bytes());
        if (ord >= 0) {
          boolean success = ords.add(ord);
          assert success; // no dups
          TermStates ts = TermStates.build(reader.getContext(), term, true);
          SimScorer w =
              weight.similarity.scorer(
                  1f,
                  searcher.collectionStatistics("field"),
                  searcher.termStatistics(term, ts.docFreq(), ts.totalTermFreq()));
          sims[(int) ord] = new LeafSimScorer(w, reader, "field", true);
        }
      }
    }


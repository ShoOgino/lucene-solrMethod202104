  @Override
  public Field[] createIndexableFields(Shape shape) {
    int bufSize = Math.max(128, (int) (this.indexLastBufSize * 1.5)); // 50% headroom over last
    ByteArrayOutputStream byteStream = new ByteArrayOutputStream(bufSize);
    final BytesRef bytesRef = new BytesRef(); // receiver of byteStream's bytes
    try {
      ctx.getBinaryCodec().writeShape(new DataOutputStream(byteStream), shape);
      // this is a hack to avoid redundant byte array copying by byteStream.toByteArray()
      byteStream.writeTo(
          new FilterOutputStream(null /*not used*/) {
            @Override
            public void write(byte[] b, int off, int len) throws IOException {
              bytesRef.bytes = b;
              bytesRef.offset = off;
              bytesRef.length = len;
            }
          });
    } catch (IOException e) {
      throw new RuntimeException(e);
    }
    this.indexLastBufSize = bytesRef.length; // cache heuristic
    return new Field[] {new BinaryDocValuesField(getFieldName(), bytesRef)};
  }


    @Override
    public CodecReader wrapForMerge(CodecReader reader) throws IOException {

      // wrap it (e.g. prevent bulk merge etc)
      // TODO: cut this over to FilterCodecReader api, we can explicitly
      // enable/disable bulk merge for portions of the index we want.
      int thingToDo = r.nextInt(7);
      if (thingToDo == 0) {
        // simple no-op FilterReader
        if (LuceneTestCase.VERBOSE) {
          System.out.println(
              "NOTE: MockRandomMergePolicy now swaps in a SlowCodecReaderWrapper for merging reader="
                  + reader);
        }
        return SlowCodecReaderWrapper.wrap(
            new FilterLeafReader(new MergeReaderWrapper(reader)) {

              @Override
              public CacheHelper getCoreCacheHelper() {
                return in.getCoreCacheHelper();
              }

              @Override
              public CacheHelper getReaderCacheHelper() {
                return in.getReaderCacheHelper();
              }
            });
      } else if (thingToDo == 1) {
        // renumber fields
        // NOTE: currently this only "blocks" bulk merges just by
        // being a FilterReader. But it might find bugs elsewhere,
        // and maybe the situation can be improved in the future.
        if (LuceneTestCase.VERBOSE) {
          System.out.println(
              "NOTE: MockRandomMergePolicy now swaps in a MismatchedLeafReader for merging reader="
                  + reader);
        }
        return SlowCodecReaderWrapper.wrap(
            new MismatchedLeafReader(new MergeReaderWrapper(reader), r));
      } else {
        // otherwise, reader is unchanged
        return reader;
      }
    }


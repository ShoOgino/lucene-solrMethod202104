  public void testAddAndUpdateTerm() throws IOException {
    AtomicInteger newCalled = new AtomicInteger(0);
    AtomicInteger addCalled = new AtomicInteger(0);
    TermsHashPerField hash = createNewHash(newCalled, addCalled);
    hash.start(null, true);

    hash.add(new BytesRef("start"), 0); // tid = 0;
    hash.add(new BytesRef("foo"), 0); // tid = 1;
    hash.add(new BytesRef("bar"), 0); // tid = 2;
    hash.finish();
    hash.add(new BytesRef("bar"), 1);
    hash.add(new BytesRef("foobar"), 1); // tid = 3;
    hash.add(new BytesRef("bar"), 1);
    hash.add(new BytesRef("bar"), 1);
    hash.add(new BytesRef("foobar"), 1);
    hash.add(new BytesRef("verylongfoobarbaz"), 1); // tid = 4;
    hash.finish();
    hash.add(new BytesRef("verylongfoobarbaz"), 2);
    hash.add(new BytesRef("boom"), 2); // tid = 5;
    hash.finish();
    hash.add(new BytesRef("verylongfoobarbaz"), 3);
    hash.add(new BytesRef("end"), 3); // tid = 6;
    hash.finish();

    assertEquals(7, newCalled.get());
    assertEquals(6, addCalled.get());
    final ByteSliceReader reader = new ByteSliceReader();
    hash.initReader(reader, 0, 0);
    assertTrue(
        assertDocAndFreq(
            reader,
            (FreqProxTermsWriterPerField.FreqProxPostingsArray) hash.postingsArray,
            0,
            0,
            0,
            1));
    hash.initReader(reader, 1, 0);
    assertTrue(
        assertDocAndFreq(
            reader,
            (FreqProxTermsWriterPerField.FreqProxPostingsArray) hash.postingsArray,
            0,
            1,
            0,
            1));
    hash.initReader(reader, 2, 0);
    assertFalse(
        assertDocAndFreq(
            reader,
            (FreqProxTermsWriterPerField.FreqProxPostingsArray) hash.postingsArray,
            0,
            2,
            0,
            1));
    assertTrue(
        assertDocAndFreq(
            reader,
            (FreqProxTermsWriterPerField.FreqProxPostingsArray) hash.postingsArray,
            2,
            2,
            1,
            3));
    hash.initReader(reader, 3, 0);
    assertTrue(
        assertDocAndFreq(
            reader,
            (FreqProxTermsWriterPerField.FreqProxPostingsArray) hash.postingsArray,
            0,
            3,
            1,
            2));
    hash.initReader(reader, 4, 0);
    assertFalse(
        assertDocAndFreq(
            reader,
            (FreqProxTermsWriterPerField.FreqProxPostingsArray) hash.postingsArray,
            0,
            4,
            1,
            1));
    assertFalse(
        assertDocAndFreq(
            reader,
            (FreqProxTermsWriterPerField.FreqProxPostingsArray) hash.postingsArray,
            1,
            4,
            2,
            1));
    assertTrue(
        assertDocAndFreq(
            reader,
            (FreqProxTermsWriterPerField.FreqProxPostingsArray) hash.postingsArray,
            2,
            4,
            3,
            1));
    hash.initReader(reader, 5, 0);
    assertTrue(
        assertDocAndFreq(
            reader,
            (FreqProxTermsWriterPerField.FreqProxPostingsArray) hash.postingsArray,
            0,
            5,
            2,
            1));
    hash.initReader(reader, 6, 0);
    assertTrue(
        assertDocAndFreq(
            reader,
            (FreqProxTermsWriterPerField.FreqProxPostingsArray) hash.postingsArray,
            0,
            6,
            3,
            1));
  }


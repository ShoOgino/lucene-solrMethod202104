  /**
   * Returns a ValueSource with values ranging from 1 to 0, depending inversely on the distance from
   * {@link #makeDistanceValueSource(org.locationtech.spatial4j.shape.Point,double)}. The formula is
   * {@code zScaling/(d + zScaling)} where 'd' is the distance and 'zScaling' is one tenth the
   * distance to the farthest edge from the center. Thus the scores will be 1 for indexed points at
   * the center of the query shape and as low as ~0.1 at its furthest edges.
   */
  public final DoubleValuesSource makeRecipDistanceValueSource(Shape queryShape) {
    Rectangle bbox = queryShape.getBoundingBox();
    double diagonalDist =
        ctx.getDistCalc()
            .distance(
                ctx.getShapeFactory().pointXY(bbox.getMinX(), bbox.getMinY()),
                bbox.getMaxX(),
                bbox.getMaxY());
    double distToEdge = diagonalDist * 0.5;
    float c = (float) distToEdge * 0.1f; // one tenth
    DoubleValuesSource distance = makeDistanceValueSource(queryShape.getCenter(), 1.0);
    return new ReciprocalDoubleValuesSource(c, distance);
  }


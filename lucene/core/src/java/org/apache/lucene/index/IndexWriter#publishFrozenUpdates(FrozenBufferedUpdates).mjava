  private synchronized long publishFrozenUpdates(FrozenBufferedUpdates packet) {
    assert packet != null && packet.any();
    long nextGen = bufferedUpdatesStream.push(packet);
    // Do this as an event so it applies higher in the stack when we are not holding
    // DocumentsWriterFlushQueue.purgeLock:
    eventQueue.add(
        w -> {
          try {
            // we call tryApply here since we don't want to block if a refresh or a flush is already
            // applying the
            // packet. The flush will retry this packet anyway to ensure all of them are applied
            tryApply(packet);
          } catch (Throwable t) {
            try {
              w.onTragicEvent(t, "applyUpdatesPacket");
            } catch (Throwable t1) {
              t.addSuppressed(t1);
            }
            throw t;
          }
          w.flushDeletesCount.incrementAndGet();
        });
    return nextGen;
  }


  public void doTestBoosts(int totalHitsThreshold) throws IOException {
    Directory dir = newDirectory();
    RandomIndexWriter w = new RandomIndexWriter(random(), dir);

    Document doc = new Document();
    FieldType ft = new FieldType(TextField.TYPE_NOT_STORED);
    ft.setOmitNorms(true);
    doc.add(new Field("f", "c", ft));
    w.addDocument(doc);
    for (int i = 0; i < 10; ++i) {
      doc.clear();
      doc.add(new Field("f", "a a a a", ft));
      w.addDocument(doc);
      if (i % 2 == 0) {
        doc.clear();
        doc.add(new Field("f", "b b", ft));
        w.addDocument(doc);
      } else {
        doc.clear();
        doc.add(new Field("f", "a a b", ft));
        w.addDocument(doc);
      }
    }
    doc.clear();
    doc.add(new Field("f", "c", ft));
    w.addDocument(doc);
    IndexReader reader = w.getReader();
    IndexSearcher searcher = newSearcher(reader);
    SynonymQuery query =
        new SynonymQuery.Builder("f")
            .addTerm(new Term("f", "a"), 0.25f)
            .addTerm(new Term("f", "b"), 0.5f)
            .addTerm(new Term("f", "c"))
            .build();

    TopScoreDocCollector collector =
        TopScoreDocCollector.create(
            Math.min(reader.numDocs(), totalHitsThreshold), null, totalHitsThreshold);
    searcher.search(query, collector);
    TopDocs topDocs = collector.topDocs();
    if (topDocs.totalHits.value < totalHitsThreshold) {
      assertEquals(TotalHits.Relation.EQUAL_TO, topDocs.totalHits.relation);
      assertEquals(22, topDocs.totalHits.value);
    } else {
      assertEquals(TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO, topDocs.totalHits.relation);
    }
    // All docs must have the same score
    for (int i = 0; i < topDocs.scoreDocs.length; ++i) {
      assertEquals(topDocs.scoreDocs[0].score, topDocs.scoreDocs[i].score, 0.0f);
    }

    reader.close();
    w.close();
    dir.close();
  }


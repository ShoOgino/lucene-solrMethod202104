  /**
   * Extract the name of the input doc from the index.
   *
   * @param searcher access to the index.
   * @param docid ID of doc whose name is needed.
   * @return the name of the input doc as extracted from the index.
   * @throws IOException if cannot extract the doc name from the index.
   */
  public String docName(IndexSearcher searcher, int docid) throws IOException {
    final List<String> name = new ArrayList<>();
    searcher
        .getIndexReader()
        .document(
            docid,
            new StoredFieldVisitor() {
              @Override
              public void stringField(FieldInfo fieldInfo, String value) {
                name.add(Objects.requireNonNull(value, "String value should not be null"));
              }

              @Override
              public Status needsField(FieldInfo fieldInfo) {
                if (!name.isEmpty()) {
                  return Status.STOP;
                } else if (fieldInfo.name.equals(docNameField)) {
                  return Status.YES;
                } else {
                  return Status.NO;
                }
              }
            });
    if (name.size() != 0) {
      return name.get(0);
    } else {
      return null;
    }
  }


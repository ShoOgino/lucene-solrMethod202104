  /**
   * Public method to create HNSW field type with the given max-connections and beam-width
   * parameters that would be used by HnswGraphBuilder while constructing HNSW graph.
   *
   * @param dimension dimension of vectors
   * @param searchStrategy a function defining vector proximity.
   * @param maxConn max-connections at each HNSW graph node
   * @param beamWidth size of list to be used while constructing HNSW graph
   * @throws IllegalArgumentException if any parameter is null, or has dimension &gt; 1024.
   */
  public static FieldType createHnswType(
      int dimension, VectorValues.SearchStrategy searchStrategy, int maxConn, int beamWidth) {
    if (dimension == 0) {
      throw new IllegalArgumentException("cannot index an empty vector");
    }
    if (dimension > VectorValues.MAX_DIMENSIONS) {
      throw new IllegalArgumentException(
          "cannot index vectors with dimension greater than " + VectorValues.MAX_DIMENSIONS);
    }
    if (searchStrategy == null || !searchStrategy.isHnsw()) {
      throw new IllegalArgumentException(
          "search strategy must not be null or non HNSW type, received: " + searchStrategy);
    }
    FieldType type = new FieldType();
    type.setVectorDimensionsAndSearchStrategy(dimension, searchStrategy);
    type.putAttribute(HnswGraphBuilder.HNSW_MAX_CONN_ATTRIBUTE_KEY, String.valueOf(maxConn));
    type.putAttribute(HnswGraphBuilder.HNSW_BEAM_WIDTH_ATTRIBUTE_KEY, String.valueOf(beamWidth));
    type.freeze();
    return type;
  }


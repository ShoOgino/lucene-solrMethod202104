  @Test
  public void testGeoSimplePolygonWithBBox() {
    //POLYGON ((19.845091 -60.452631, 20.119948 -61.655652, 23.207901 -61.453298, 22.820804 -60.257713, 19.845091 -60.452631)) disjoint
    GeoPolygon originalConvexPol = buildConvexGeoPolygon(19.84509, -60.452631,
        20.119948, -61.655652,
        23.207901, -61.453298,
        22.820804, -60.257713);

    GeoPolygon originalConcavePol = buildConcaveGeoPolygon(19.84509, -60.452631,
        20.119948, -61.655652,
        23.207901, -61.453298,
        22.820804, -60.257713);

    GeoPolygon originalComplexPol = buildComplexGeoPolygon(19.84509, -60.452631,
        20.119948, -61.655652,
        23.207901, -61.453298,
        22.820804, -60.257713);

    GeoBBox outRectangle = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(-69),
        Geo3DUtil.fromDegrees(-70),
        Geo3DUtil.fromDegrees(22),
        Geo3DUtil.fromDegrees(23));
    int rel = originalConvexPol.getRelationship(outRectangle);
    assertEquals(GeoArea.DISJOINT, rel);
    rel = outRectangle.getRelationship(originalConvexPol);
    assertEquals(GeoArea.DISJOINT, rel);
    rel = originalConcavePol.getRelationship(outRectangle);
    assertEquals(GeoArea.WITHIN, rel);
    rel = originalComplexPol.getRelationship(outRectangle);
    assertEquals(GeoArea.DISJOINT, rel);

    GeoBBox overlapRectangle = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(-61),
        Geo3DUtil.fromDegrees(-62),
        Geo3DUtil.fromDegrees(22),
        Geo3DUtil.fromDegrees(23));
    rel = originalConvexPol.getRelationship(overlapRectangle);
    assertEquals(GeoArea.OVERLAPS, rel);
    rel = overlapRectangle.getRelationship(originalConvexPol);
    assertEquals(GeoArea.OVERLAPS, rel);
    rel = originalConcavePol.getRelationship(overlapRectangle);
    assertEquals(GeoArea.OVERLAPS, rel);
    rel = originalComplexPol.getRelationship(overlapRectangle);
    assertEquals(GeoArea.OVERLAPS, rel);

    GeoBBox inRectangle = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(-61),
        Geo3DUtil.fromDegrees(-61.1),
        Geo3DUtil.fromDegrees(22.5),
        Geo3DUtil.fromDegrees(23));
    rel = originalConvexPol.getRelationship(inRectangle);
    assertEquals(GeoArea.WITHIN, rel);
    rel = inRectangle.getRelationship(originalConvexPol);
    assertEquals(GeoArea.CONTAINS, rel);
    rel = originalConcavePol.getRelationship(inRectangle);
    assertEquals(GeoArea.DISJOINT, rel);
    rel = originalComplexPol.getRelationship(inRectangle);
    assertEquals(GeoArea.WITHIN, rel);

    GeoBBox onRectangle = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(-59),
        Geo3DUtil.fromDegrees(-64.1),
        Geo3DUtil.fromDegrees(18.5),
        Geo3DUtil.fromDegrees(27));
    rel = originalConvexPol.getRelationship(onRectangle);
    assertEquals(GeoArea.CONTAINS, rel);
    rel = onRectangle.getRelationship(originalConvexPol);
    assertEquals(GeoArea.WITHIN, rel);
    rel = originalConcavePol.getRelationship(onRectangle);
    assertEquals(GeoArea.OVERLAPS, rel);
    rel = originalComplexPol.getRelationship(onRectangle);
    assertEquals(GeoArea.CONTAINS, rel);

  }


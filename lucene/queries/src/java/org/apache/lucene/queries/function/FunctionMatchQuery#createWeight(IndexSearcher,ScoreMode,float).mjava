  @Override
  public Weight createWeight(IndexSearcher searcher, ScoreMode scoreMode, float boost)
      throws IOException {
    DoubleValuesSource vs = source.rewrite(searcher);
    return new ConstantScoreWeight(this, boost) {
      @Override
      public Scorer scorer(LeafReaderContext context) throws IOException {
        DoubleValues values = vs.getValues(context, null);
        DocIdSetIterator approximation = DocIdSetIterator.all(context.reader().maxDoc());
        TwoPhaseIterator twoPhase =
            new TwoPhaseIterator(approximation) {
              @Override
              public boolean matches() throws IOException {
                return values.advanceExact(approximation.docID())
                    && filter.test(values.doubleValue());
              }

              @Override
              public float matchCost() {
                return matchCost; // TODO maybe DoubleValuesSource should have a matchCost?
              }
            };
        return new ConstantScoreScorer(this, score(), scoreMode, twoPhase);
      }

      @Override
      public boolean isCacheable(LeafReaderContext ctx) {
        return source.isCacheable(ctx);
      }
    };
  }


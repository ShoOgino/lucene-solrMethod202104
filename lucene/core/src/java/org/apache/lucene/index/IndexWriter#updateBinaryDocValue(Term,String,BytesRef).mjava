  /**
   * Updates a document's {@link BinaryDocValues} for <code>field</code> to the given <code>value
   * </code>. You can only update fields that already exist in the index, not add new fields through
   * this method.
   *
   * <p><b>NOTE:</b> this method currently replaces the existing value of all affected documents
   * with the new value.
   *
   * @param term the term to identify the document(s) to be updated
   * @param field field name of the {@link BinaryDocValues} field
   * @param value new value for the field
   * @return The <a href="#sequence_number">sequence number</a> for this operation
   * @throws CorruptIndexException if the index is corrupt
   * @throws IOException if there is a low-level IO error
   */
  public long updateBinaryDocValue(Term term, String field, BytesRef value) throws IOException {
    ensureOpen();
    if (value == null) {
      throw new IllegalArgumentException("cannot update a field to a null value: " + field);
    }
    if (!globalFieldNumberMap.contains(field, DocValuesType.BINARY)) {
      throw new IllegalArgumentException("can only update existing binary-docvalues fields!");
    }
    try {
      return maybeProcessEvents(
          docWriter.updateDocValues(new BinaryDocValuesUpdate(term, field, value)));
    } catch (VirtualMachineError tragedy) {
      tragicEvent(tragedy, "updateBinaryDocValue");
      throw tragedy;
    }
  }


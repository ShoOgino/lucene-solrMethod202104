  public void testBasics() throws IOException {
    Directory dir = newDirectory();
    RandomIndexWriter w =
        new RandomIndexWriter(
            random(),
            dir,
            newIndexWriterConfig().setMergePolicy(newLogMergePolicy(random().nextBoolean())));
    Document doc = new Document();
    LongPoint point = new LongPoint("foo", 0L);
    doc.add(point);
    NumericDocValuesField docValue = new NumericDocValuesField("foo", 0L);
    doc.add(docValue);

    point.setLongValue(3);
    docValue.setLongValue(3);
    w.addDocument(doc);

    point.setLongValue(12);
    docValue.setLongValue(12);
    w.addDocument(doc);

    point.setLongValue(8);
    docValue.setLongValue(8);
    w.addDocument(doc);

    point.setLongValue(-1);
    docValue.setLongValue(-1);
    w.addDocument(doc);

    point.setLongValue(7);
    docValue.setLongValue(7);
    w.addDocument(doc);

    DirectoryReader reader = w.getReader();
    IndexSearcher searcher = newSearcher(reader);

    Query q = LongPoint.newDistanceFeatureQuery("foo", 3, 10, 5);
    TopScoreDocCollector collector = TopScoreDocCollector.create(2, null, 1);
    searcher.search(q, collector);
    TopDocs topHits = collector.topDocs();
    assertEquals(2, topHits.scoreDocs.length);

    CheckHits.checkEqual(
        q,
        new ScoreDoc[] {
          new ScoreDoc(1, (float) (3f * (5. / (5. + 2.)))),
          new ScoreDoc(2, (float) (3f * (5. / (5. + 2.))))
        },
        topHits.scoreDocs);

    q = LongPoint.newDistanceFeatureQuery("foo", 3, 7, 5);
    collector = TopScoreDocCollector.create(2, null, 1);
    searcher.search(q, collector);
    topHits = collector.topDocs();
    assertEquals(2, topHits.scoreDocs.length);
    CheckHits.checkExplanations(q, "", searcher);

    CheckHits.checkEqual(
        q,
        new ScoreDoc[] {
          new ScoreDoc(4, (float) (3f * (5. / (5. + 0.)))),
          new ScoreDoc(2, (float) (3f * (5. / (5. + 1.))))
        },
        topHits.scoreDocs);

    reader.close();
    w.close();
    dir.close();
  }


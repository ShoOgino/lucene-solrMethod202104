  public void testKeepFullyDeletedSegments() throws IOException {
    Directory dir = newDirectory();
    IndexWriterConfig indexWriterConfig =
        newIndexWriterConfig().setMergePolicy(NoMergePolicy.INSTANCE);
    IndexWriter writer = new IndexWriter(dir, indexWriterConfig);

    Document doc = new Document();
    doc.add(new StringField("id", "1", Field.Store.YES));
    doc.add(new NumericDocValuesField("soft_delete", 1));
    writer.addDocument(doc);
    DirectoryReader reader = writer.getReader();
    assertEquals(1, reader.leaves().size());
    MergePolicy policy =
        new SoftDeletesRetentionMergePolicy(
            "soft_delete",
            () -> new DocValuesFieldExistsQuery("keep_around"),
            NoMergePolicy.INSTANCE);
    assertFalse(
        policy.keepFullyDeletedSegment(() -> (SegmentReader) reader.leaves().get(0).reader()));
    reader.close();

    doc = new Document();
    doc.add(new StringField("id", "1", Field.Store.YES));
    doc.add(new NumericDocValuesField("keep_around", 1));
    doc.add(new NumericDocValuesField("soft_delete", 1));
    writer.addDocument(doc);

    DirectoryReader reader1 = writer.getReader();
    assertEquals(2, reader1.leaves().size());
    assertFalse(
        policy.keepFullyDeletedSegment(() -> (SegmentReader) reader1.leaves().get(0).reader()));

    assertTrue(
        policy.keepFullyDeletedSegment(() -> (SegmentReader) reader1.leaves().get(1).reader()));

    IOUtils.close(reader1, writer, dir);
  }


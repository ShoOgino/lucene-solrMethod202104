  public void testUnorderedDistinct() throws IOException {
    checkIntervals(
        Intervals.unorderedNoOverlaps(Intervals.term("pease"), Intervals.term("pease")),
        "field1",
        3,
        new int[][] {{}, {0, 3, 3, 6}, {0, 3, 3, 6}, {}, {0, 3, 3, 6}, {}});
    checkIntervals(
        Intervals.unorderedNoOverlaps(
            Intervals.unordered(
                Intervals.term("pease"), Intervals.term("porridge"), Intervals.term("hot")),
            Intervals.term("porridge")),
        "field1",
        3,
        new int[][] {{}, {1, 4, 2, 7, 4, 17}, {1, 5, 4, 7}, {}, {1, 4, 2, 7, 4, 17}, {}});
    checkIntervals(
        Intervals.unorderedNoOverlaps(
            Intervals.unordered(
                Intervals.term("pease"), Intervals.term("porridge"), Intervals.term("hot")),
            Intervals.term("porridge")),
        "field2",
        1,
        new int[][] {{}, {}, {}, {}, {0, 3}, {}});
    IntervalsSource source =
        Intervals.unorderedNoOverlaps(
            Intervals.term("porridge"),
            Intervals.unordered(Intervals.term("pease"), Intervals.term("porridge")));
    checkIntervals(
        source, "field1", 3, new int[][] {{}, {1, 4, 4, 7}, {1, 4, 4, 7}, {}, {1, 4, 4, 7}, {}});
    // automatic rewrites mean that we end up with 11 sources to visit
    checkVisits(source, 11, "porridge", "pease");
  }


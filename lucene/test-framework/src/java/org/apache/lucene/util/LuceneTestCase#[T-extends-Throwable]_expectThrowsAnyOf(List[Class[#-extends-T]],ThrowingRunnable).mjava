  /** Checks a specific exception class is thrown by the given runnable, and returns it. */
  public static <T extends Throwable> T expectThrowsAnyOf(
      List<Class<? extends T>> expectedTypes, ThrowingRunnable runnable) {
    if (expectedTypes.isEmpty()) {
      throw new AssertionError("At least one expected exception type is required?");
    }

    final Throwable thrown = _expectThrows(expectedTypes, runnable);
    if (null != thrown) {
      for (Class<? extends T> expectedType : expectedTypes) {
        if (expectedType.isInstance(thrown)) {
          return expectedType.cast(thrown);
        }
      }
    }

    List<String> exceptionTypes =
        expectedTypes.stream().map(c -> c.getSimpleName()).collect(Collectors.toList());

    if (thrown != null) {
      AssertionFailedError assertion =
          new AssertionFailedError(
              "Unexpected exception type, expected any of "
                  + exceptionTypes
                  + " but got: "
                  + thrown);
      assertion.initCause(thrown);
      throw assertion;
    } else {
      throw new AssertionFailedError(
          "Expected any of the following exception types: "
              + exceptionTypes
              + " but no exception was thrown.");
    }
  }


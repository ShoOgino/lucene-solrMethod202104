  /**
   * Replaces the index created by our superclass with a new one that includes a lot of docs filler
   * docs. {@link #qtest} will account for these extra filler docs.
   *
   * @see #qtest
   */
  @BeforeClass
  public static void replaceIndex() throws Exception {
    EXTRA = random().nextBoolean() ? null : "extra";
    PRE_FILLER_DOCS = TestUtil.nextInt(random(), 0, (NUM_FILLER_DOCS / 2));

    // free up what our super class created that we won't be using
    reader.close();
    directory.close();

    directory = newDirectory();
    try (RandomIndexWriter writer =
        new RandomIndexWriter(
            random(),
            directory,
            newIndexWriterConfig(analyzer).setMergePolicy(newLogMergePolicy()))) {

      for (int filler = 0; filler < PRE_FILLER_DOCS; filler++) {
        writer.addDocument(makeFillerDoc());
      }
      for (int i = 0; i < docFields.length; i++) {
        writer.addDocument(createDoc(i));

        for (int filler = 0; filler < NUM_FILLER_DOCS; filler++) {
          writer.addDocument(makeFillerDoc());
        }
      }
      reader = writer.getReader();
      searcher = newSearcher(reader);
    }
  }


  /**
   * Method that returns a random generated degenerate GeoPath under given constraints. Returns NULL
   * if it cannot build the degenerate GeoPath under the given constraints.
   *
   * @param planetModel The planet model.
   * @param constraints The given constraints.
   * @return The random generated degenerated GeoPath.
   */
  private GeoPath line(PlanetModel planetModel, Constraints constraints) {
    int iterations = 0;
    while (iterations < MAX_SHAPE_ITERATIONS) {
      iterations++;
      int vertexCount = random().nextInt(2) + 2;
      List<GeoPoint> geoPoints = points(vertexCount, planetModel, constraints);
      if (geoPoints.size() < 2) {
        continue;
      }
      try {
        GeoPath path =
            GeoPathFactory.makeGeoPath(
                planetModel, 0, geoPoints.toArray(new GeoPoint[geoPoints.size()]));
        if (!constraints.valid(path)) {
          continue;
        }
        return path;
      } catch (IllegalArgumentException e) {
        continue;
      }
    }
    return null;
  }


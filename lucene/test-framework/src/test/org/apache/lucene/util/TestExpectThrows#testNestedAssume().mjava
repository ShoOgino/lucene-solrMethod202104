  /**
   * Tests that {@link #expectThrows} behaves correctly when the Runnable contains an assumption
   * that does not pass: by allowing that assumption to propogate and cause the test to <code>SKIP
   * </code>.
   */
  public void testNestedAssume() {
    final AtomicBoolean ran = new AtomicBoolean(false);
    AssumptionViolatedException caught = null;
    try {
      final IOException returned =
          expectThrows(
              IOException.class,
              () -> {
                ran.getAndSet(true);
                assumeTrue("this assumption should propogate", false);
              });
      fail("must not complete"); // NOTE: we don't use expectThrows to test expectThrows
    } catch (AssumptionViolatedException ave) {
      caught = ave;
    }
    assertTrue(ran.get());
    assertNotNull(caught);
    assertEquals("this assumption should propogate", caught.getMessage());
  }


  public void testHashCodeAndEquals() {
    FeatureDoubleValuesSource valuesSource =
        new FeatureDoubleValuesSource("test_field", "test_feature");
    FeatureDoubleValuesSource equal = new FeatureDoubleValuesSource("test_field", "test_feature");

    FeatureDoubleValuesSource differentField =
        new FeatureDoubleValuesSource("other field", "test_feature");
    FeatureDoubleValuesSource differentFeature =
        new FeatureDoubleValuesSource("test_field", "other_feature");
    DoubleValuesSource otherImpl =
        new DoubleValuesSource() {

          @Override
          public boolean isCacheable(LeafReaderContext ctx) {
            return false;
          }

          @Override
          public String toString() {
            return null;
          }

          @Override
          public DoubleValuesSource rewrite(IndexSearcher reader) throws IOException {
            return null;
          }

          @Override
          public boolean needsScores() {
            return false;
          }

          @Override
          public int hashCode() {
            return 0;
          }

          @Override
          public DoubleValues getValues(LeafReaderContext ctx, DoubleValues scores)
              throws IOException {
            return null;
          }

          @Override
          public boolean equals(Object obj) {
            return false;
          }
        };

    assertTrue(valuesSource.equals(equal));
    assertEquals(valuesSource.hashCode(), equal.hashCode());
    assertFalse(valuesSource.equals(null));
    assertFalse(valuesSource.equals(otherImpl));
    assertNotEquals(valuesSource.hashCode(), otherImpl.hashCode());
    assertFalse(valuesSource.equals(differentField));
    assertNotEquals(valuesSource.hashCode(), differentField.hashCode());
    assertFalse(valuesSource.equals(differentFeature));
    assertNotEquals(valuesSource.hashCode(), differentFeature.hashCode());
  }


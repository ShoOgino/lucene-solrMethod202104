  @Test
  public void testQueryCircle() throws IOException {
    //overwrite setUp; non-geo bounds is more straight-forward; otherwise 88,88 would actually be practically north,
    final SpatialContextFactory spatialContextFactory = new SpatialContextFactory();
    spatialContextFactory.geo = false;
    spatialContextFactory.worldBounds = new RectangleImpl(-90, 90, -90, 90, null);
    ctx = spatialContextFactory.newSpatialContext();
    shapeFactory = ctx.getShapeFactory();
    final int LEVEL = 4;
    grid = new QuadPrefixTree(ctx, LEVEL);
    strategy = new RecursivePrefixTreeStrategy(grid, getTestClass().getSimpleName());
    Circle circle = shapeFactory.circle(0, 0, 89);
    adoc("0", shapeFactory.pointXY(88, 88));//top-right, inside bbox of circle but not the circle
    adoc("1", shapeFactory.pointXY(0, 0));//clearly inside; dead center in fact
    commit();
    final HeatmapFacetCounter.Heatmap heatmap = HeatmapFacetCounter.calcFacets(
        (PrefixTreeStrategy) strategy, indexSearcher.getTopReaderContext(), null,
        circle, LEVEL, 1000);
    //assert that only one point is found, not 2
    boolean foundOne = false;
    for (int count : heatmap.counts) {
      switch (count) {
        case 0: break;
        case 1:
          assertFalse(foundOne);//this is the first
          foundOne = true;
          break;
        default:
          fail("counts should be 0 or 1: " + count);
      }
    }
    assertTrue(foundOne);
  }


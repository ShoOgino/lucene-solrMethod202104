  /** returns a common prefix length equal or lower than the current one */
  private int getRandomCommonPrefix(
      BKDConfig config, BKDRadixSelector.PathSlice inputSlice, int splitDim) throws IOException {
    byte[] pointsMax = getMax(config, inputSlice, splitDim);
    byte[] pointsMin = getMin(config, inputSlice, splitDim);
    int commonPrefixLength =
        Arrays.mismatch(pointsMin, 0, config.bytesPerDim, pointsMax, 0, config.bytesPerDim);
    if (commonPrefixLength == -1) {
      commonPrefixLength = config.bytesPerDim;
    }
    return (random().nextBoolean())
        ? commonPrefixLength
        : commonPrefixLength == 0 ? 0 : random().nextInt(commonPrefixLength);
  }


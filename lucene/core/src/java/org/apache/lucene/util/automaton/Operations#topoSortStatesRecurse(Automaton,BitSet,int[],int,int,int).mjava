  // TODO: not great that this is recursive... in theory a
  // large automata could exceed java's stack so the maximum level of recursion is bounded to 1000
  private static int topoSortStatesRecurse(
      Automaton a, BitSet visited, int[] states, int upto, int state, int level) {
    if (level > MAX_RECURSION_LEVEL) {
      throw new IllegalArgumentException("input automaton is too large: " + level);
    }
    Transition t = new Transition();
    int count = a.initTransition(state, t);
    for (int i = 0; i < count; i++) {
      a.getNextTransition(t);
      if (!visited.get(t.dest)) {
        visited.set(t.dest);
        upto = topoSortStatesRecurse(a, visited, states, upto, t.dest, level + 1);
      }
    }
    states[upto] = state;
    upto++;
    return upto;
  }


  @Test
  public void test() throws Exception {
    ModifiableSolrParams params = new ModifiableSolrParams();

    params.set(CollectionParams.ACTION, CollectionParams.CollectionAction.CREATE.toString());
    params.set("name", "collection2");
    int numShards = 2;
    params.set("numShards", numShards);
    int replicationFactor = 1;
    params.set("replicationFactor", replicationFactor);
    params.set("collection.configName", "conf1");
    params.set(CommonAdminParams.ASYNC, "1000");
    try {
      sendRequest(params);
    } catch (SolrServerException | IOException e) {
      e.printStackTrace();
    }

    // Check for the request to be completed.

    @SuppressWarnings({"rawtypes"})
    NamedList r = null;
    @SuppressWarnings({"rawtypes"})
    NamedList status = null;
    String message = null;

    params = new ModifiableSolrParams();

    params.set("action", CollectionParams.CollectionAction.REQUESTSTATUS.toString());
    params.set(CollectionHandlingUtils.REQUESTID, "1000");

    NamedList<Object> createResponse =null;
    try {
      createResponse = sendStatusRequestWithRetry(params, MAX_WAIT_TIMEOUT_SECONDS);
      message = (String) createResponse.findRecursive("status","msg");
    } catch (SolrServerException | IOException e) {
      e.printStackTrace();
    }

    assertEquals("found [1000] in completed tasks", message); 
    assertEquals("expecting "+numShards+" shard responses at "+createResponse,
        numShards, numResponsesCompleted(createResponse));
    
    // Check for a random (hopefully non-existent request id
    params = new ModifiableSolrParams();
    params.set(CollectionParams.ACTION, CollectionParams.CollectionAction.REQUESTSTATUS.toString());
    params.set(CollectionHandlingUtils.REQUESTID, "9999999");
    try {
      r = sendRequest(params);
      status = (NamedList) r.get("status");
      message = (String) status.get("msg");
    } catch (SolrServerException | IOException e) {
      e.printStackTrace();
    }

    assertEquals("Did not find [9999999] in any tasks queue", message);

    params = new ModifiableSolrParams();
    params.set(CollectionParams.ACTION, CollectionParams.CollectionAction.SPLITSHARD.toString());
    params.set("collection", "collection2");
    params.set("shard", "shard1");
    params.set(CommonAdminParams.ASYNC, "1001");
    try {
      sendRequest(params);
    } catch (SolrServerException | IOException e) {
      e.printStackTrace();
    }

    // Check for the request to be completed.
    params = new ModifiableSolrParams();
    params.set("action", CollectionParams.CollectionAction.REQUESTSTATUS.toString());
    params.set(CollectionHandlingUtils.REQUESTID, "1001");
    NamedList<Object> splitResponse=null;
    try {
      splitResponse = sendStatusRequestWithRetry(params, MAX_WAIT_TIMEOUT_SECONDS);
      message = (String) splitResponse.findRecursive("status","msg");
    } catch (SolrServerException | IOException e) {
      e.printStackTrace();
    }

    assertEquals("found [1001] in completed tasks", message);
    // create * 2 + preprecovery *2 + split + req_apply_upd * 2 =7 
    assertEquals("expecting "+(2+2+1+2)+" shard responses at "+splitResponse,
        (2+2+1+2), numResponsesCompleted(splitResponse));

    params = new ModifiableSolrParams();
    params.set(CollectionParams.ACTION, CollectionParams.CollectionAction.CREATE.toString());
    params.set("name", "collection2");
    params.set("numShards", 2);
    params.set("replicationFactor", 1);
    params.set("collection.configName", "conf1");
    params.set(CommonAdminParams.ASYNC, "1002");
    try {
      sendRequest(params);
    } catch (SolrServerException | IOException e) {
      e.printStackTrace();
    }

    params = new ModifiableSolrParams();

    params.set("action", CollectionParams.CollectionAction.REQUESTSTATUS.toString());
    params.set(CollectionHandlingUtils.REQUESTID, "1002");

    try {
      NamedList<Object> response = sendStatusRequestWithRetry(params, MAX_WAIT_TIMEOUT_SECONDS);
      message = (String) response.findRecursive("status","msg");
    } catch (SolrServerException | IOException e) {
      e.printStackTrace();
    }

    assertEquals("found [1002] in failed tasks", message);

    params = new ModifiableSolrParams();
    params.set(CollectionParams.ACTION, CollectionParams.CollectionAction.CREATE.toString());
    params.set("name", "collection3");
    params.set("numShards", 1);
    params.set("replicationFactor", 1);
    params.set("collection.configName", "conf1");
    params.set(CommonAdminParams.ASYNC, "1002");
    try {
      r = sendRequest(params);
    } catch (SolrServerException | IOException e) {
      e.printStackTrace();
    }

    assertEquals("Task with the same requestid already exists.", r.get("error"));
  }


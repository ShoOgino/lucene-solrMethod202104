    private Set<Node> filterNodesWithCollection(Cluster cluster, PlacementRequest request, AttributeValues attributeValues, Set<Node> initialNodes) throws PlacementException {
      // if there's a `withCollection` constraint for this collection then remove nodes
      // that are not eligible
      String withCollectionName = withCollections.get(request.getCollection().getName());
      if (withCollectionName == null) {
        return initialNodes;
      }
      SolrCollection withCollection;
      try {
        withCollection = cluster.getCollection(withCollectionName);
      } catch (Exception e) {
        throw new PlacementException("Error getting info of withCollection=" + withCollectionName, e);
      }
      Set<Node> withCollectionNodes = new HashSet<>();
      withCollection.shards().forEach(s -> s.replicas().forEach(r -> withCollectionNodes.add(r.getNode())));
      if (withCollectionNodes.isEmpty()) {
        throw new PlacementException("Collection " + withCollection + " defined in `withCollection` has no replicas on eligible nodes.");
      }
      HashSet<Node> filteredNodes = new HashSet<>(initialNodes);
      filteredNodes.retainAll(withCollectionNodes);
      if (filteredNodes.isEmpty()) {
        throw new PlacementException("Collection " + withCollection + " defined in `withCollection` has no replicas on eligible nodes.");
      }
      return filteredNodes;
    }


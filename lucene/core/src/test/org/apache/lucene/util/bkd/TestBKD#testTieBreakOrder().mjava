  public void testTieBreakOrder() throws Exception {
    try (Directory dir = newDirectory()) {
      int numDocs = 10000;
      BKDWriter w =
          new BKDWriter(
              numDocs + 1, dir, "tmp", new BKDConfig(1, 1, Integer.BYTES, 2), 0.01f, numDocs);
      for (int i = 0; i < numDocs; i++) {
        w.add(new byte[Integer.BYTES], i);
      }

      IndexOutput out = dir.createOutput("bkd", IOContext.DEFAULT);
      Runnable finalizer = w.finish(out, out, out);
      long fp = out.getFilePointer();
      finalizer.run();
      out.close();

      IndexInput in = dir.openInput("bkd", IOContext.DEFAULT);
      in.seek(fp);
      BKDReader r = new BKDReader(in, in, in);
      r.intersect(
          new IntersectVisitor() {
            int lastDocID = -1;

            @Override
            public void visit(int docID) {
              assertTrue("lastDocID=" + lastDocID + " docID=" + docID, docID > lastDocID);
              lastDocID = docID;
            }

            @Override
            public void visit(int docID, byte[] packedValue) {
              visit(docID);
            }

            @Override
            public Relation compare(byte[] minPacked, byte[] maxPacked) {
              return Relation.CELL_CROSSES_QUERY;
            }
          });
      in.close();
    }
  }


  /**
   * This method returns the current attribute values as a string in the following format by calling
   * the {@link #reflectWith(AttributeReflector)} method:
   *
   * <ul>
   *   <li><em>iff {@code prependAttClass=true}:</em> {@code
   *       "AttributeClass#key=value,AttributeClass#key=value"}
   *   <li><em>iff {@code prependAttClass=false}:</em> {@code "key=value,key=value"}
   * </ul>
   *
   * @see #reflectWith(AttributeReflector)
   */
  public final String reflectAsString(final boolean prependAttClass) {
    final StringBuilder buffer = new StringBuilder();
    reflectWith(
        new AttributeReflector() {
          @Override
          public void reflect(Class<? extends Attribute> attClass, String key, Object value) {
            if (buffer.length() > 0) {
              buffer.append(',');
            }
            if (prependAttClass) {
              buffer.append(attClass.getName()).append('#');
            }
            buffer.append(key).append('=').append((value == null) ? "null" : value);
          }
        });
    return buffer.toString();
  }


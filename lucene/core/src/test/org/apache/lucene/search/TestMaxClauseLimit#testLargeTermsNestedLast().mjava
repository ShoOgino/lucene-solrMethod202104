  public void testLargeTermsNestedLast() throws IOException {
    IndexSearcher searcher = newSearcher(new MultiReader());
    BooleanQuery.Builder nestedBuilder = new BooleanQuery.Builder();

    nestedBuilder.setMinimumNumberShouldMatch(5);

    for (int i = 0; i < 600; i++) {
      nestedBuilder.add(new TermQuery(new Term("foo", "bar-" + i)), BooleanClause.Occur.SHOULD);
    }
    Query inner = nestedBuilder.build();
    BooleanQuery.Builder builderMixed = new BooleanQuery.Builder();

    builderMixed.setMinimumNumberShouldMatch(5);

    for (int i = 0; i < 600; i++) {
      builderMixed.add(new TermQuery(new Term("foo", "bar")), BooleanClause.Occur.SHOULD);
    }

    builderMixed.add(inner, BooleanClause.Occur.SHOULD);

    Query query = builderMixed.build();

    expectThrows(
        IndexSearcher.TooManyClauses.class,
        () -> {
          searcher.rewrite(query);
        });
  }


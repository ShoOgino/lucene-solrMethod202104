  private static List<IntervalsSource> deduplicate(List<IntervalsSource> sources) {
    Map<IntervalsSource, Integer> counts = new LinkedHashMap<>(); // preserve order for testing
    for (IntervalsSource source : sources) {
      counts.compute(source, (k, v) -> v == null ? 1 : v + 1);
    }
    List<IntervalsSource> deduplicated = new ArrayList<>();
    for (IntervalsSource source : counts.keySet()) {
      deduplicated.add(RepeatingIntervalsSource.build(source, counts.get(source)));
    }
    if (deduplicated.size() == 1 && deduplicated.get(0) instanceof RepeatingIntervalsSource) {
      ((RepeatingIntervalsSource) deduplicated.get(0)).setName("UNORDERED");
    }
    return deduplicated;
  }


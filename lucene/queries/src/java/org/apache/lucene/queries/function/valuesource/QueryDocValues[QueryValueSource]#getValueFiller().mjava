  @Override
  public ValueFiller getValueFiller() {
    //
    // TODO: if we want to support more than one value-filler or a value-filler in conjunction with
    // the FunctionValues, then members like "scorer" should be per ValueFiller instance.
    // Or we can say that the user should just instantiate multiple FunctionValues.
    //
    return new ValueFiller() {
      private final MutableValueFloat mval = new MutableValueFloat();

      @Override
      public MutableValue getValue() {
        return mval;
      }

      @Override
      public void fillValue(int doc) {
        try {
          if (exists(doc)) {
            mval.value = scorer.score();
            mval.exists = true;
          } else {
            mval.value = defVal;
            mval.exists = false;
          }
        } catch (IOException e) {
          throw new RuntimeException("caught exception in QueryDocVals(" + q + ") doc=" + doc, e);
        }
      }
    };
  }


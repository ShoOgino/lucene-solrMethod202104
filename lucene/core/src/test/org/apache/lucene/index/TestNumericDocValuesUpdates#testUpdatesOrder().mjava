  public void testUpdatesOrder() throws Exception {
    Directory dir = newDirectory();
    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));
    IndexWriter writer = new IndexWriter(dir, conf);

    Document doc = new Document();
    doc.add(new StringField("upd", "t1", Store.NO));
    doc.add(new StringField("upd", "t2", Store.NO));
    doc.add(new NumericDocValuesField("f1", 1L));
    doc.add(new NumericDocValuesField("f2", 1L));
    writer.addDocument(doc);
    writer.updateNumericDocValue(new Term("upd", "t1"), "f1", 2L); // update f1 to 2
    writer.updateNumericDocValue(new Term("upd", "t1"), "f2", 2L); // update f2 to 2
    writer.updateNumericDocValue(new Term("upd", "t2"), "f1", 3L); // update f1 to 3
    writer.updateNumericDocValue(new Term("upd", "t2"), "f2", 3L); // update f2 to 3
    writer.updateNumericDocValue(new Term("upd", "t1"), "f1", 4L); // update f1 to 4 (but not f2)
    if (VERBOSE) {
      System.out.println("TEST: now close");
    }
    writer.close();

    DirectoryReader reader = DirectoryReader.open(dir);
    NumericDocValues dvs = reader.leaves().get(0).reader().getNumericDocValues("f1");
    assertEquals(0, dvs.nextDoc());
    assertEquals(4, dvs.longValue());
    dvs = reader.leaves().get(0).reader().getNumericDocValues("f2");
    assertEquals(0, dvs.nextDoc());
    assertEquals(3, dvs.longValue());
    reader.close();

    dir.close();
  }


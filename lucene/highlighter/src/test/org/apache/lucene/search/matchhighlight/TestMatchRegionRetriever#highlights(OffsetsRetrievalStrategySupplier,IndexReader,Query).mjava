  private List<String> highlights(
      OffsetsRetrievalStrategySupplier offsetsStrategySupplier, IndexReader reader, Query query)
      throws IOException {
    IndexSearcher searcher = new IndexSearcher(reader);
    int maxDocs = 1000;

    Query rewrittenQuery = searcher.rewrite(query);
    TopDocs topDocs = searcher.search(rewrittenQuery, maxDocs);

    ArrayList<String> highlights = new ArrayList<>();

    AsciiMatchRangeHighlighter formatter = new AsciiMatchRangeHighlighter(analyzer);

    MatchRegionRetriever.MatchOffsetsConsumer highlightCollector =
        (docId, leafReader, leafDocId, fieldHighlights) -> {
          StringBuilder sb = new StringBuilder();

          Document document = leafReader.document(leafDocId);
          formatter
              .apply(document, new TreeMap<>(fieldHighlights))
              .forEach(
                  (field, snippets) -> {
                    sb.append(
                        String.format(
                            Locale.ROOT, "(%s: '%s')", field, String.join(" | ", snippets)));
                  });

          if (sb.length() > 0) {
            sb.insert(0, document.get(FLD_ID) + ": ");
            highlights.add(sb.toString());
          }
        };

    MatchRegionRetriever highlighter =
        new MatchRegionRetriever(searcher, rewrittenQuery, offsetsStrategySupplier);
    highlighter.highlightDocuments(topDocs, highlightCollector);

    return highlights;
  }


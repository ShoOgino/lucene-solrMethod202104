  private void readInputToBuffer() throws IOException {
    while (true) {
      // CharacterUtils.fill is supplementary char aware
      final boolean hasRemainingChars = CharacterUtils.fill(tmpBuffer, input);

      assert tmpBuffer.getOffset() == 0;
      inputBuffer.append(tmpBuffer.getBuffer(), 0, tmpBuffer.getLength());

      if (hasRemainingChars == false) {
        inputFinished = true;
        break;
      }

      final int lastCodePoint =
          Character.codePointBefore(tmpBuffer.getBuffer(), tmpBuffer.getLength(), 0);
      if (normalizer.isInert(lastCodePoint)) {
        // we require an inert char so that we can normalize content before and
        // after this character independently
        break;
      }
    }

    // if checkedInputBoundary was at the end of a buffer, we need to check that char again
    checkedInputBoundary = Math.max(checkedInputBoundary - 1, 0);
  }


    /**
     * Adds a term to the end of the query phrase. The relative position of the term within the
     * phrase is specified explicitly, but must be greater than or equal to that of the previously
     * added term. A greater position allows phrases with gaps (e.g. in connection with stopwords).
     * If the position is equal, you most likely should be using {@link MultiPhraseQuery} instead
     * which only requires one term at each position to match; this class requires all of them.
     */
    public Builder add(Term term, int position) {
      Objects.requireNonNull(term, "Cannot add a null term to PhraseQuery");
      if (position < 0) {
        throw new IllegalArgumentException("Positions must be >= 0, got " + position);
      }
      if (positions.isEmpty() == false) {
        final int lastPosition = positions.get(positions.size() - 1);
        if (position < lastPosition) {
          throw new IllegalArgumentException(
              "Positions must be added in order, got " + position + " after " + lastPosition);
        }
      }
      if (terms.isEmpty() == false && term.field().equals(terms.get(0).field()) == false) {
        throw new IllegalArgumentException(
            "All terms must be on the same field, got "
                + term.field()
                + " and "
                + terms.get(0).field());
      }
      terms.add(term);
      positions.add(position);
      return this;
    }


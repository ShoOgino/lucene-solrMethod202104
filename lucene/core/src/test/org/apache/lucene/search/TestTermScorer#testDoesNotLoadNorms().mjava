  public void testDoesNotLoadNorms() throws IOException {
    Term allTerm = new Term(FIELD, "all");
    TermQuery termQuery = new TermQuery(allTerm);

    LeafReader forbiddenNorms =
        new FilterLeafReader(indexReader) {
          @Override
          public NumericDocValues getNormValues(String field) throws IOException {
            fail("Norms should not be loaded");
            // unreachable
            return null;
          }

          @Override
          public CacheHelper getCoreCacheHelper() {
            return in.getCoreCacheHelper();
          }

          @Override
          public CacheHelper getReaderCacheHelper() {
            return in.getReaderCacheHelper();
          }
        };
    // We don't use newSearcher because it sometimes runs checkIndex which loads norms
    IndexSearcher indexSearcher = new IndexSearcher(forbiddenNorms);

    Weight weight = indexSearcher.createWeight(termQuery, ScoreMode.COMPLETE, 1);
    expectThrows(
        AssertionError.class,
        () -> {
          weight.scorer(forbiddenNorms.getContext()).iterator().nextDoc();
        });

    Weight weight2 = indexSearcher.createWeight(termQuery, ScoreMode.COMPLETE_NO_SCORES, 1);
    // should not fail this time since norms are not necessary
    weight2.scorer(forbiddenNorms.getContext()).iterator().nextDoc();
  }


  /**
   * Returns an automaton that accepts the union of the languages of the given automata.
   *
   * <p>Complexity: linear in number of states.
   */
  public static Automaton union(Collection<Automaton> l) {
    Automaton result = new Automaton();

    // Create initial state:
    result.createState();

    // Copy over all automata
    for (Automaton a : l) {
      result.copy(a);
    }

    // Add epsilon transition from new initial state
    int stateOffset = 1;
    for (Automaton a : l) {
      if (a.getNumStates() == 0) {
        continue;
      }
      result.addEpsilon(0, stateOffset);
      stateOffset += a.getNumStates();
    }

    result.finishState();

    return removeDeadStates(result);
  }


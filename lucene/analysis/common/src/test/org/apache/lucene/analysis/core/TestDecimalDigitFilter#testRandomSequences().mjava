  /** test sequences of digits mixed with other random simple string data */
  public void testRandomSequences() throws Exception {

    // test numIters random strings containing a sequence of numDigits codepoints
    final int numIters = atLeast(5);
    for (int iter = 0; iter < numIters; iter++) {
      final int numDigits = atLeast(20);
      final StringBuilder expected = new StringBuilder();
      final StringBuilder actual = new StringBuilder();
      for (int digitCounter = 0; digitCounter < numDigits; digitCounter++) {

        // increased odds of 0 length random string prefix
        final String prefix = random().nextBoolean() ? "" : TestUtil.randomSimpleString(random());
        expected.append(prefix);
        actual.append(prefix);

        int codepoint = getRandomDecimalDigit(random());

        int value = Character.getNumericValue(codepoint);
        assert value >= 0 && value <= 9;
        expected.append(Integer.toString(value));
        actual.appendCodePoint(codepoint);
      }
      // occasional suffix, increased odds of 0 length random string
      final String suffix = random().nextBoolean() ? "" : TestUtil.randomSimpleString(random());
      expected.append(suffix);
      actual.append(suffix);

      checkOneTerm(keyword, actual.toString(), expected.toString());
    }
  }


  public void testMaxPosition3WithSynomyms() throws IOException {
    for (final boolean consumeAll : new boolean[] {true, false}) {
      MockTokenizer tokenizer = whitespaceMockTokenizer("one two three four five");
      // if we are consuming all tokens, we can use the checks, otherwise we can't
      tokenizer.setEnableChecks(consumeAll);

      SynonymMap.Builder builder = new SynonymMap.Builder(true);
      builder.add(new CharsRef("one"), new CharsRef("first"), true);
      builder.add(new CharsRef("one"), new CharsRef("alpha"), true);
      builder.add(new CharsRef("one"), new CharsRef("beguine"), true);
      CharsRefBuilder multiWordCharsRef = new CharsRefBuilder();
      SynonymMap.Builder.join(
          new String[] {"and", "indubitably", "single", "only"}, multiWordCharsRef);
      builder.add(new CharsRef("one"), multiWordCharsRef.get(), true);
      SynonymMap.Builder.join(new String[] {"dopple", "ganger"}, multiWordCharsRef);
      builder.add(new CharsRef("two"), multiWordCharsRef.get(), true);
      SynonymMap synonymMap = builder.build();
      @SuppressWarnings("deprecation")
      TokenStream stream = new SynonymFilter(tokenizer, synonymMap, true);
      stream = new LimitTokenPositionFilter(stream, 3, consumeAll);

      // "only", the 4th word of multi-word synonym "and indubitably single only" is not emitted,
      // since its position is greater than 3.
      assertTokenStreamContents(
          stream,
          new String[] {
            "one",
            "first",
            "alpha",
            "beguine",
            "and",
            "two",
            "indubitably",
            "dopple",
            "three",
            "single",
            "ganger"
          },
          new int[] {1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0});
    }
  }


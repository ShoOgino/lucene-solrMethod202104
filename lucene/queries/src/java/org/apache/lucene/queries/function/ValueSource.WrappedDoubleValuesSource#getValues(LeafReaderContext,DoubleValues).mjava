    @Override
    public DoubleValues getValues(LeafReaderContext ctx, DoubleValues scores) throws IOException {
      Map<Object, Object> context = new HashMap<>();
      ScoreAndDoc scorer = new ScoreAndDoc();
      context.put("scorer", scorer);
      context.put("searcher", searcher);
      FunctionValues fv = in.getValues(context, ctx);
      return new DoubleValues() {

        @Override
        public double doubleValue() throws IOException {
          return fv.doubleVal(scorer.current);
        }

        @Override
        public boolean advanceExact(int doc) throws IOException {
          scorer.current = doc;
          if (scores != null && scores.advanceExact(doc)) {
            scorer.score = (float) scores.doubleValue();
          } else {
            scorer.score = 0;
          }
          // ValueSource will return values even if exists() is false, generally a default
          // of some kind.  To preserve this behaviour with the iterator, we need to always
          // return 'true' here.
          return true;
        }
      };
    }


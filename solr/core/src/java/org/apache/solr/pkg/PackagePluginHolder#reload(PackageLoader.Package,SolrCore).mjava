  private synchronized void reload(PackageLoader.Package pkg, SolrCore core) {
    String lessThan = core.getSolrConfig().maxPackageVersion(info.pkgName);
    PackageLoader.Package.Version newest = pkg.getLatest(lessThan);
    if (newest == null) {
      log.error("No latest version available for package : {}", pkg.name());
      return;
    }
    if (lessThan != null) {
      PackageLoader.Package.Version pkgLatest = pkg.getLatest();
      if (pkgLatest != newest) {
        if (log.isInfoEnabled()) {
          log.info("Using version :{}. latest is {},  params.json has config {} : {}", newest.getVersion(), pkgLatest.getVersion(), pkg.name(), lessThan);
        }
      }
    }

    if (pkgVersion != null) {
      if (newest == pkgVersion) {
        //I'm already using the latest classloader in the package. nothing to do
        return;
      }
    }

    if (log.isInfoEnabled()) {
      log.info("loading plugin: {} -> {} using  package {}:{}",
              pluginInfo.type, pluginInfo.name, pkg.name(), newest.getVersion());
    }

    initNewInstance(newest, core);
    pkgVersion = newest;

  }


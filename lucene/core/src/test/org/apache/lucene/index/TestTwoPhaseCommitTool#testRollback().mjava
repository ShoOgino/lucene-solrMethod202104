  public void testRollback() throws Exception {
    // tests that rollback is called if failure occurs at any stage
    int numObjects = random().nextInt(8) + 3; // between [3, 10]
    TwoPhaseCommitImpl[] objects = new TwoPhaseCommitImpl[numObjects];
    for (int i = 0; i < objects.length; i++) {
      boolean failOnPrepare = random().nextBoolean();
      // we should not hit failures on commit usually
      boolean failOnCommit = random().nextDouble() < 0.05;
      boolean railOnRollback = random().nextBoolean();
      objects[i] = new TwoPhaseCommitImpl(failOnPrepare, failOnCommit, railOnRollback);
    }

    boolean anyFailure = false;
    try {
      TwoPhaseCommitTool.execute(objects);
    } catch (Throwable t) {
      anyFailure = true;
    }

    if (anyFailure) {
      // if any failure happened, ensure that rollback was called on all.
      for (TwoPhaseCommitImpl tpc : objects) {
        assertTrue(
            "rollback was not called while a failure occurred during the 2-phase commit",
            tpc.rollbackCalled);
      }
    }
  }


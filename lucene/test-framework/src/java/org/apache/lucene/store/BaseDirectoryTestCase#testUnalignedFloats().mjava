  public void testUnalignedFloats() throws Exception {
    int padding = random().nextInt(3) + 1;
    try (Directory dir = getDirectory(createTempDir("testUnalignedFloats"))) {
      try (IndexOutput out = dir.createOutput("Floats", newIOContext(random()))) {
        for (int i = 0; i < padding; i++) {
          out.writeByte((byte) 2);
        }
        out.writeInt(Integer.reverseBytes(Float.floatToIntBits(3f)));
        out.writeInt(Integer.reverseBytes(Float.floatToIntBits(Float.MAX_VALUE)));
        out.writeInt(Integer.reverseBytes(Float.floatToIntBits(-3f)));
      }
      try (IndexInput input = dir.openInput("Floats", newIOContext(random()))) {
        assertEquals(12 + padding, input.length());
        for (int i = 0; i < padding; i++) {
          assertEquals(2, input.readByte());
        }
        float[] ff = new float[4];
        input.readLEFloats(ff, 1, 3);
        assertArrayEquals(new float[] {0, 3f, Float.MAX_VALUE, -3f}, ff, 0);
        assertEquals(12 + padding, input.getFilePointer());
      }
    }
  }


  /** Truncate or split highlight markers that cross permitted value boundaries. */
  private List<? extends OffsetRange> splitOrTruncateToWindows(
      List<? extends OffsetRange> markers,
      int maxPassageWindow,
      List<OffsetRange> permittedPassageRanges) {
    // Process markers overlapping with each permitted window.
    ArrayList<OffsetRange> processedMarkers = new ArrayList<>(markers.size());
    for (OffsetRange marker : markers) {
      for (OffsetRange permitted : permittedPassageRanges) {
        boolean needsNew = false;
        int from = marker.from;
        if (from < permitted.from) {
          from = permitted.from;
          needsNew = true;
        }

        int to = marker.to;
        if (to > permitted.to) {
          to = permitted.to;
          needsNew = true;
        }

        if (from >= to || (to - from) > maxPassageWindow) {
          continue;
        }

        processedMarkers.add(needsNew ? marker.slice(from, to) : marker);
      }
    }
    markers = processedMarkers;
    return markers;
  }


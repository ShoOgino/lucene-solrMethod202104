    /**
     * Returns a new position entry representing the specified posting, and optionally, start and
     * end offsets.
     *
     * @param pos - term position
     * @param pe - positioned postings iterator
     * @return position entry
     * @throws IOException - if there is a low level IO error.
     */
    static TermVectorPosition of(int pos, PostingsEnum pe) throws IOException {
      Objects.requireNonNull(pe);

      int sOffset = pe.startOffset();
      int eOffset = pe.endOffset();
      if (sOffset >= 0 && eOffset >= 0) {
        return new TermVectorPosition(pos, sOffset, eOffset);
      }
      return new TermVectorPosition(pos);
    }


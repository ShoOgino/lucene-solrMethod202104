  private DocHighlights computeDocFieldValues(DocHit docHit) {
    Document doc;
    try {
      doc = docHit.document(fieldsAlwaysReturned::contains);
    } catch (IOException e) {
      throw new UncheckedIOException(e);
    }

    DocHighlights docHighlights = new DocHighlights(docHit.docId);

    HashSet<String> unique = new HashSet<>();
    for (IndexableField indexableField : doc) {
      String field = indexableField.name();
      if (!unique.add(field)) {
        continue;
      }

      String[] values = doc.getValues(field);
      String contiguousValue = contiguousFieldValue(field, values);
      List<OffsetRange> valueRanges = computeValueRanges(field, values);
      List<QueryOffsetRange> offsets = docHit.matchRanges.get(field);

      List<String> formattedValues =
          fieldValueHighlighter(field, offsets != null)
              .format(field, values, contiguousValue, valueRanges, offsets);

      if (formattedValues != null) {
        docHighlights.fields.put(field, formattedValues);
      }
    }

    return docHighlights;
  }


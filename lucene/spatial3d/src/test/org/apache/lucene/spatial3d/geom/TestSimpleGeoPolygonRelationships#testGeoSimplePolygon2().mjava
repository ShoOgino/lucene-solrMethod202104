  /**
   * Test with two shapes with crossing edges and some points inside in convex case.
   */
  @Test
  public void testGeoSimplePolygon2() {

    //POLYGON ((19.845091 -60.452631, 20.119948 -61.655652, 23.207901 -61.453298, 22.820804 -60.257713, 19.845091 -60.452631)) disjoint
    GeoPolygon originalConvexPol = buildConvexGeoPolygon(19.84509, -60.452631,
        20.119948, -61.655652,
        23.207901, -61.453298,
        22.820804, -60.257713);

    GeoPolygon originalConcavePol = buildConcaveGeoPolygon(19.84509, -60.452631,
        20.119948, -61.655652,
        23.207901, -61.453298,
        22.820804, -60.257713);

    GeoPolygon originalComplexPol = buildComplexGeoPolygon(19.84509, -60.452631,
        20.119948, -61.655652,
        23.207901, -61.453298,
        22.820804, -60.257713);

    //POLYGON ((20.0 -60.4, 23.1 -60.4, 23.1 -60.3, 20.0  -60.3,20.0 -60.4))
    GeoPolygon polConvex = buildConvexGeoPolygon(20.0, -60.4,
        23.1, -60.4,
        23.1, -60.3,
        20.0, -60.3);

    GeoPolygon polConcave = buildConcaveGeoPolygon(20.0, -60.4,
        23.1, -60.4,
        23.1, -60.3,
        20.0, -60.3);

    //Convex
    int rel = originalConvexPol.getRelationship(polConvex);
    assertEquals(GeoArea.OVERLAPS,  rel);
    rel = polConvex.getRelationship(originalConvexPol);
    assertEquals(GeoArea.OVERLAPS,  rel);

    rel = originalConvexPol.getRelationship(polConcave);
    assertEquals(GeoArea.OVERLAPS,  rel);
    rel = polConcave.getRelationship(originalConvexPol);
    assertEquals(GeoArea.OVERLAPS,  rel);

    //Concave
    rel = originalConcavePol.getRelationship(polConcave);
    assertEquals(GeoArea.OVERLAPS,  rel);
    rel = polConcave.getRelationship(originalConcavePol);
    assertEquals(GeoArea.OVERLAPS,  rel);


    rel = originalConcavePol.getRelationship(polConvex);
    assertEquals(GeoArea.OVERLAPS,  rel);
    rel = polConvex.getRelationship(originalConcavePol);
    assertEquals(GeoArea.OVERLAPS,  rel);

    //Complex
    rel = originalComplexPol.getRelationship(polConcave);
    assertEquals(GeoArea.OVERLAPS,  rel);
    rel = polConcave.getRelationship(originalComplexPol);
    assertEquals(GeoArea.OVERLAPS,  rel);


    rel = originalComplexPol.getRelationship(polConvex);
    assertEquals(GeoArea.OVERLAPS,  rel);
    rel = polConvex.getRelationship(originalComplexPol);
    assertEquals(GeoArea.OVERLAPS,  rel);
  }


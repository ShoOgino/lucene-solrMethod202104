  /**
   * Reads all the vectors from a VectorValues, builds a graph connecting them by their dense ordinals, using the given
   * hyperparameter settings, and returns the resulting graph.
   * @param vectorValues the vectors whose relations are represented by the graph
   * @param maxConn the number of connections to make when adding a new graph node; roughly speaking the graph fanout.
   * @param beamWidth the size of the beam search to use when finding nearest neighbors.
   * @param seed the seed for a random number generator used during graph construction. Provide this to ensure repeatable construction.
   */
  public static HnswGraph build(RandomAccessVectorValuesProducer vectorValues, int maxConn, int beamWidth, long seed) throws IOException {
    HnswGraphBuilder builder = new HnswGraphBuilder(vectorValues, maxConn, beamWidth, seed);
    return builder.build(vectorValues.randomAccess());
  }


  private void testClassifier(
      final IndexReader ar,
      IndexReader testReader,
      ExecutorService service,
      List<Future<String>> futures,
      Classifier<BytesRef> classifier) {
    futures.add(
        service.submit(
            () -> {
              final long startTime = System.currentTimeMillis();
              ConfusionMatrixGenerator.ConfusionMatrix confusionMatrix;
              if (split) {
                confusionMatrix =
                    ConfusionMatrixGenerator.getConfusionMatrix(
                        testReader, classifier, CATEGORY_FIELD, BODY_FIELD, 60000 * 30);
              } else {
                confusionMatrix =
                    ConfusionMatrixGenerator.getConfusionMatrix(
                        ar, classifier, CATEGORY_FIELD, BODY_FIELD, 60000 * 30);
              }
              final long endTime = System.currentTimeMillis();
              final int elapse = (int) (endTime - startTime) / 1000;

              return " * "
                  + classifier
                  + " \n    * accuracy = "
                  + confusionMatrix.getAccuracy()
                  + "\n    * precision = "
                  + confusionMatrix.getPrecision()
                  + "\n    * recall = "
                  + confusionMatrix.getRecall()
                  + "\n    * f1-measure = "
                  + confusionMatrix.getF1Measure()
                  + "\n    * avgClassificationTime = "
                  + confusionMatrix.getAvgClassificationTime()
                  + "\n    * time = "
                  + elapse
                  + " (sec)\n ";
            }));
  }


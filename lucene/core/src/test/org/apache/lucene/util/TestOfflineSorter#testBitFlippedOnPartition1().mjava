  /**
   * Make sure corruption on a temp file (partition) is caught, even if the corruption didn't
   * confuse OfflineSorter!
   */
  public void testBitFlippedOnPartition1() throws Exception {

    try (Directory dir0 = newMockDirectory()) {

      Directory dir =
          new FilterDirectory(dir0) {

            boolean corrupted;

            @Override
            public IndexOutput createTempOutput(String prefix, String suffix, IOContext context)
                throws IOException {
              IndexOutput out = in.createTempOutput(prefix, suffix, context);
              if (corrupted == false && suffix.equals("sort")) {
                corrupted = true;
                return new CorruptingIndexOutput(dir0, 544677, out);
              } else {
                return out;
              }
            }
          };

      IndexOutput unsorted = dir.createTempOutput("unsorted", "tmp", IOContext.DEFAULT);
      writeAll(unsorted, generateFixed((int) (OfflineSorter.MB * 3)));

      CorruptIndexException e =
          expectThrows(
              CorruptIndexException.class,
              () -> {
                new OfflineSorter(
                        dir,
                        "foo",
                        OfflineSorter.DEFAULT_COMPARATOR,
                        BufferSize.megabytes(1),
                        10,
                        -1,
                        null,
                        0)
                    .sort(unsorted.getName());
              });
      assertTrue(e.getMessage().contains("checksum failed (hardware problem?)"));
    }
  }


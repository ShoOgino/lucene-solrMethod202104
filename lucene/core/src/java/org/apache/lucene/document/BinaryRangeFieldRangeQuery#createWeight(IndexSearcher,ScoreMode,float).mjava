  @Override
  public Weight createWeight(IndexSearcher searcher, ScoreMode scoreMode, float boost)
      throws IOException {
    return new ConstantScoreWeight(this, boost) {

      @Override
      public Scorer scorer(LeafReaderContext context) throws IOException {
        BinaryRangeDocValues values = getValues(context.reader(), field);
        if (values == null) {
          return null;
        }

        final TwoPhaseIterator iterator;
        iterator =
            new TwoPhaseIterator(values) {
              @Override
              public boolean matches() {
                return queryType.matches(
                    queryPackedValue, values.getPackedValue(), numDims, numBytesPerDimension);
              }

              @Override
              public float matchCost() {
                return queryPackedValue.length;
              }
            };

        return new ConstantScoreScorer(this, score(), scoreMode, iterator);
      }

      @Override
      public boolean isCacheable(LeafReaderContext ctx) {
        return DocValues.isCacheable(ctx, field);
      }
    };
  }


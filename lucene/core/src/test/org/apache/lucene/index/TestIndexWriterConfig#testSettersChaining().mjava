  @Test
  public void testSettersChaining() throws Exception {
    // Ensures that every setter returns IndexWriterConfig to allow chaining.
    HashSet<String> liveSetters = new HashSet<>();
    HashSet<String> allSetters = new HashSet<>();
    for (Method m : IndexWriterConfig.class.getDeclaredMethods()) {
      if (m.getName().startsWith("set") && !Modifier.isStatic(m.getModifiers())) {
        allSetters.add(m.getName());
        // setters overridden from LiveIndexWriterConfig are returned twice, once with
        // IndexWriterConfig return type and second with LiveIndexWriterConfig. The ones
        // from LiveIndexWriterConfig are marked 'synthetic', so just collect them and
        // assert in the end that we also received them from IWC.
        if (m.isSynthetic()) {
          liveSetters.add(m.getName());
        } else {
          assertEquals(
              "method " + m.getName() + " does not return IndexWriterConfig",
              IndexWriterConfig.class,
              m.getReturnType());
        }
      }
    }
    for (String setter : liveSetters) {
      assertTrue(
          "setter method not overridden by IndexWriterConfig: " + setter,
          allSetters.contains(setter));
    }
  }


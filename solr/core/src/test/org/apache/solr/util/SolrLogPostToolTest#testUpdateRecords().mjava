  @Test
  public void testUpdateRecords() throws Exception{
    String record = "2019-12-25 20:38:23.498 INFO  (qtp2103763750-126) [c:logs3 s:shard1 r:core_node2 x:logs3_shard1_replica_n1] o.a.s.u.p.LogUpdateProcessorFactory [logs3_shard1_replica_n1]  webapp=/solr path=/update params={commitWithin=1000&overwrite=true&wt=json&_=1577306114481}{deleteByQuery=*:* (-1653925534487281664)} 0 11\n" +
                    "2019-12-25 20:42:13.411 INFO  (qtp2103763750-303) [c:logs5 s:shard1 r:core_node2 x:logs5_shard1_replica_n1] o.a.s.u.p.LogUpdateProcessorFactory [logs5_shard1_replica_n1]  webapp=/solr path=/update params={commitWithin=1000&overwrite=true&wt=json&_=1577306114481}{delete=[03bbe975-728a-4df8-aa25-fe25049dc0ef (-1653925775577972736)]} 0 1\n";
    List<SolrInputDocument> docs = readDocs(record);
    assertEquals(docs.size(), 2);
    SolrInputDocument doc = docs.get(0);
    SolrInputField date = doc.getField("date_dt");
    SolrInputField type = doc.getField("type_s");
    SolrInputField core = doc.getField("core_s");
    SolrInputField collection = doc.getField("collection_s");
    assertEquals(date.getValue(), "2019-12-25T20:38:23.498Z");
    assertEquals(type.getValue(), "deleteByQuery");
    assertEquals(collection.getValue(), "logs3");
    assertEquals(core.getValue(), "logs3_shard1_replica_n1");

    SolrInputDocument doc1 = docs.get(1);
    SolrInputField date1 = doc1.getField("date_dt");
    SolrInputField type1 = doc1.getField("type_s");
    SolrInputField core1 = doc1.getField("core_s");
    SolrInputField collection1= doc1.getField("collection_s");
    assertEquals(date1.getValue(), "2019-12-25T20:42:13.411Z");
    assertEquals(type1.getValue(), "delete");
    assertEquals(collection1.getValue(), "logs5");
    assertEquals(core1.getValue(), "logs5_shard1_replica_n1");
  }


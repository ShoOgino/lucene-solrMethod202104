  @BeforeClass
  public static void setupTestCases() {
    initialRootLogLevel = StartupLoggingUtils.getLogLevelString();
    initClassLogLevels();
    resetExceptionIgnores();
    
    testExecutor = new ExecutorUtil.MDCAwareThreadPoolExecutor(0, Integer.MAX_VALUE,
        15L, TimeUnit.SECONDS,
        new SynchronousQueue<>(),
        new SolrNamedThreadFactory("testExecutor"),
        true);

    // set solr.install.dir needed by some test configs outside of the test sandbox (!)
    System.setProperty("solr.install.dir", ExternalPaths.SOURCE_HOME);
    // not strictly needed by this class at this point in the control lifecycle, but for
    // backcompat create it now in case any third party tests expect initCoreDataDir to be
    // non-null after calling setupTestCases()
    initAndGetDataDir();

    System.setProperty("solr.zkclienttimeout", "90000"); 
    
    System.setProperty("solr.httpclient.retries", "1");
    System.setProperty("solr.retries.on.forward", "1");
    System.setProperty("solr.retries.to.followers", "1");

    System.setProperty("solr.v2RealPath", "true");
    System.setProperty("zookeeper.forceSync", "no");
    System.setProperty("jetty.testMode", "true");
    System.setProperty("enable.update.log", usually() ? "true" : "false");
    System.setProperty("tests.shardhandler.randomSeed", Long.toString(random().nextLong()));
    System.setProperty("solr.clustering.enabled", "false");
    System.setProperty("solr.cloud.wait-for-updates-with-stale-state-pause", "500");

    System.setProperty("pkiHandlerPrivateKeyPath", SolrTestCaseJ4.class.getClassLoader().getResource("cryptokeys/priv_key512_pkcs8.pem").toExternalForm());
    System.setProperty("pkiHandlerPublicKeyPath", SolrTestCaseJ4.class.getClassLoader().getResource("cryptokeys/pub_key512.der").toExternalForm());

    System.setProperty(ZK_WHITELIST_PROPERTY, "*");
    startTrackingSearchers();
    ignoreException("ignore_exception");
    newRandomConfig();

    sslConfig = buildSSLConfig();
    // based on randomized SSL config, set SocketFactoryRegistryProvider appropriately
    HttpClientUtil.setSocketFactoryRegistryProvider(sslConfig.buildClientSocketFactoryRegistryProvider());
    Http2SolrClient.setDefaultSSLConfig(sslConfig.buildClientSSLConfig());
    if(isSSLMode()) {
      // SolrCloud tests should usually clear this
      System.setProperty(URL_SCHEME, UrlScheme.HTTPS);
      UrlScheme.INSTANCE.setUrlScheme(UrlScheme.HTTPS);
    } else {
      UrlScheme.INSTANCE.setUrlScheme(UrlScheme.HTTP);
    }
  }


  private void doTestChangeIndexOptionsAddIndexesCodecReader(IndexOptions from, IndexOptions to)
      throws IOException {
    Directory dir1 = newDirectory();
    IndexWriter w1 = new IndexWriter(dir1, newIndexWriterConfig());
    FieldType ft1 = new FieldType(TextField.TYPE_STORED);
    ft1.setIndexOptions(from);
    w1.addDocument(Collections.singleton(new Field("foo", "bar", ft1)));

    Directory dir2 = newDirectory();
    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig());
    FieldType ft2 = new FieldType(TextField.TYPE_STORED);
    ft2.setIndexOptions(to);
    w2.addDocument(Collections.singleton(new Field("foo", "bar", ft2)));

    try (CodecReader cr = (CodecReader) getOnlyLeafReader(DirectoryReader.open(w2))) {
      if (from == IndexOptions.NONE || to == IndexOptions.NONE || from == to) {
        w1.addIndexes(cr); // no exception
        w1.forceMerge(1);
        try (LeafReader r = getOnlyLeafReader(DirectoryReader.open(w1))) {
          IndexOptions expected = from == IndexOptions.NONE ? to : from;
          assertEquals(expected, r.getFieldInfos().fieldInfo("foo").getIndexOptions());
        }
      } else {
        IllegalArgumentException e =
            expectThrows(IllegalArgumentException.class, () -> w1.addIndexes(cr));
        assertEquals(
            "cannot change field \"foo\" from index options="
                + from
                + " to inconsistent index options="
                + to,
            e.getMessage());
      }
    }

    IOUtils.close(w1, w2, dir1, dir2);
  }


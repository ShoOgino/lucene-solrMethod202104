  @Test
  public void testGeoCompositePolygon5() {

    //POLYGON ((19.845091 -60.452631, 20.119948 -61.655652, 23.207901 -61.453298, 22.820804 -60.257713, 21 -61,19.845091 -60.452631))
    GeoPolygon originaConvexlPol = buildGeoPolygon(19.84509, -60.452631,
        20.119948, -61.655652,
        23.207901, -61.453298,
        22.820804, -60.257713,
        21, -61);

    //POLYGON ((19.845091 -60.452631, 21 -61,22.820804 -60.257713,23.207901 -61.453298, 20.119948 -61.655652, 19.845091 -60.452631))
    GeoPolygon originalConcavePol = buildGeoPolygon(19.84509, -60.452631,
        21, -61,
        22.820804, -60.257713,
        23.207901, -61.453298,
        20.119948, -61.655652);

    //POLYGON ((19 -62, 23 -62, 23 -60, 19 -60,19 -62))
    GeoPolygon polConvex = buildGeoPolygon(19, -62,
        23, -62,
        23, -60,
        19, -60,
        19, -60);

    GeoPolygon polConcave = buildConcaveGeoPolygon(19, -62,
        23, -62,
        23, -60,
        19, -60);

    //convex
    int rel = originaConvexlPol.getRelationship(polConvex);
    assertEquals(GeoArea.OVERLAPS, rel);
    rel = polConvex.getRelationship(originaConvexlPol);
    assertEquals(GeoArea.OVERLAPS, rel);

    rel = originaConvexlPol.getRelationship(polConcave);
    assertEquals(GeoArea.OVERLAPS, rel);
    rel = polConcave.getRelationship(originaConvexlPol);
    assertEquals(GeoArea.OVERLAPS, rel);

    //concave
    rel = originalConcavePol.getRelationship(polConvex);
    assertEquals(GeoArea.OVERLAPS, rel);
    rel = polConvex.getRelationship(originalConcavePol);
    assertEquals(GeoArea.OVERLAPS, rel);

    rel = originalConcavePol.getRelationship(polConcave);
    assertEquals(GeoArea.OVERLAPS, rel);
    rel = polConcave.getRelationship(originalConcavePol);
    assertEquals(GeoArea.OVERLAPS, rel);
  }


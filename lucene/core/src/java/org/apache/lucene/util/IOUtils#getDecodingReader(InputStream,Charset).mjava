  /**
   * Wrapping the given {@link InputStream} in a reader using a {@link CharsetDecoder}. Unlike
   * Java's defaults this reader will throw an exception if your it detects the read charset doesn't
   * match the expected {@link Charset}.
   *
   * <p>Decoding readers are useful to load configuration files, stopword lists or synonym files to
   * detect character set problems. However, it's not recommended to use as a common purpose reader.
   *
   * @param stream the stream to wrap in a reader
   * @param charSet the expected charset
   * @return a wrapping reader
   */
  public static Reader getDecodingReader(InputStream stream, Charset charSet) {
    final CharsetDecoder charSetDecoder =
        charSet
            .newDecoder()
            .onMalformedInput(CodingErrorAction.REPORT)
            .onUnmappableCharacter(CodingErrorAction.REPORT);
    return new BufferedReader(new InputStreamReader(stream, charSetDecoder));
  }


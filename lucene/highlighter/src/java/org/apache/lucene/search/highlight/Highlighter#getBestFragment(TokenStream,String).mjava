  /**
   * Highlights chosen terms in a text, extracting the most relevant section. The document text is
   * analysed in chunks to record hit statistics across the document. After accumulating stats, the
   * fragment with the highest score is returned
   *
   * @param tokenStream a stream of tokens identified in the text parameter, including offset
   *     information. This is typically produced by an analyzer re-parsing a document's text. Some
   *     work may be done on retrieving TokenStreams more efficiently by adding support for storing
   *     original text position data in the Lucene index but this support is not currently available
   *     (as of Lucene 1.4 rc2).
   * @param text text to highlight terms in
   * @return highlighted text fragment or null if no terms found
   * @throws InvalidTokenOffsetsException thrown if any token's endOffset exceeds the provided
   *     text's length
   */
  public final String getBestFragment(TokenStream tokenStream, String text)
      throws IOException, InvalidTokenOffsetsException {
    String[] results = getBestFragments(tokenStream, text, 1);
    if (results.length > 0) {
      return results[0];
    }
    return null;
  }


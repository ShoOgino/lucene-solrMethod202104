  public synchronized void decRef(Collection<String> fileNames) throws IOException {
    Set<String> toDelete = new HashSet<>();
    for (String fileName : fileNames) {
      Integer curCount = refCounts.get(fileName);
      assert curCount != null : "fileName=" + fileName;
      assert curCount.intValue() > 0;
      if (curCount.intValue() == 1) {
        refCounts.remove(fileName);
        toDelete.add(fileName);
      } else {
        refCounts.put(fileName, curCount.intValue() - 1);
      }
    }

    delete(toDelete);

    // TODO: this local IR could incRef files here, like we do now with IW's NRT readers ... then we
    // can assert this again:

    // we can't assert this, e.g a search can be running when we switch to a new NRT point, holding
    // a previous IndexReader still open for
    // a bit:
    /*
    // We should never attempt deletion of a still-open file:
    Set<String> delOpen = ((MockDirectoryWrapper) dir).getOpenDeletedFiles();
    if (delOpen.isEmpty() == false) {
      node.message("fail: we tried to delete these still-open files: " + delOpen);
      throw new AssertionError("we tried to delete these still-open files: " + delOpen);
    }
    */
  }


  public void testBogusParams() {
    expectThrows(
        IllegalArgumentException.class,
        () -> {
          new SynonymQuery.Builder("field1")
              .addTerm(new Term("field1", "a"))
              .addTerm(new Term("field2", "b"));
        });

    expectThrows(
        IllegalArgumentException.class,
        () -> {
          new SynonymQuery.Builder("field1").addTerm(new Term("field1", "a"), 1.3f);
        });

    expectThrows(
        IllegalArgumentException.class,
        () -> {
          new SynonymQuery.Builder("field1").addTerm(new Term("field1", "a"), Float.NaN);
        });

    expectThrows(
        IllegalArgumentException.class,
        () -> {
          new SynonymQuery.Builder("field1")
              .addTerm(new Term("field1", "a"), Float.POSITIVE_INFINITY);
        });

    expectThrows(
        IllegalArgumentException.class,
        () -> {
          new SynonymQuery.Builder("field1")
              .addTerm(new Term("field1", "a"), Float.NEGATIVE_INFINITY);
        });

    expectThrows(
        IllegalArgumentException.class,
        () -> {
          new SynonymQuery.Builder("field1").addTerm(new Term("field1", "a"), -0.3f);
        });

    expectThrows(
        IllegalArgumentException.class,
        () -> {
          new SynonymQuery.Builder("field1").addTerm(new Term("field1", "a"), 0f);
        });

    expectThrows(
        IllegalArgumentException.class,
        () -> {
          new SynonymQuery.Builder("field1").addTerm(new Term("field1", "a"), -0f);
        });
  }


  /** Test if writing doc stores to disk and everything else to ram works. */
  public void testBasic() throws IOException {
    Set<String> fileExtensions = new HashSet<>();
    fileExtensions.add(Lucene90CompressingStoredFieldsWriter.FIELDS_EXTENSION);
    fileExtensions.add("fdx");
    fileExtensions.add("fdm");

    MockDirectoryWrapper primaryDir =
        new MockDirectoryWrapper(random(), new ByteBuffersDirectory());
    primaryDir.setCheckIndexOnClose(false); // only part of an index
    MockDirectoryWrapper secondaryDir =
        new MockDirectoryWrapper(random(), new ByteBuffersDirectory());
    secondaryDir.setCheckIndexOnClose(false); // only part of an index

    FileSwitchDirectory fsd =
        new FileSwitchDirectory(fileExtensions, primaryDir, secondaryDir, true);
    // for now we wire the default codec because we rely upon its specific impl
    IndexWriter writer =
        new IndexWriter(
            fsd,
            new IndexWriterConfig(new MockAnalyzer(random()))
                .setMergePolicy(newLogMergePolicy(false))
                .setCodec(TestUtil.getDefaultCodec())
                .setUseCompoundFile(false));
    TestIndexWriterReader.createIndexNoClose(true, "ram", writer);
    IndexReader reader = DirectoryReader.open(writer);
    assertEquals(100, reader.maxDoc());
    writer.commit();
    // we should see only fdx,fdt files here
    String[] files = primaryDir.listAll();
    assertTrue(files.length > 0);
    for (int x = 0; x < files.length; x++) {
      String ext = FileSwitchDirectory.getExtension(files[x]);
      assertTrue(fileExtensions.contains(ext));
    }
    files = secondaryDir.listAll();
    assertTrue(files.length > 0);
    // we should not see fdx,fdt files here
    for (int x = 0; x < files.length; x++) {
      String ext = FileSwitchDirectory.getExtension(files[x]);
      assertFalse(fileExtensions.contains(ext));
    }
    reader.close();
    writer.close();

    files = fsd.listAll();
    for (int i = 0; i < files.length; i++) {
      assertNotNull(files[i]);
    }
    fsd.close();
  }


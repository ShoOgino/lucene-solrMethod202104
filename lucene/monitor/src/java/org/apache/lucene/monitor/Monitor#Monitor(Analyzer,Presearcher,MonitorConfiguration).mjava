  /**
   * Create a new Monitor instance
   *
   * @param analyzer to analyze {@link Document}s at match time
   * @param presearcher the presearcher to use
   * @param configuration the configuration
   */
  public Monitor(Analyzer analyzer, Presearcher presearcher, MonitorConfiguration configuration)
      throws IOException {

    this.analyzer = analyzer;
    this.presearcher = presearcher;
    this.queryIndex = new QueryIndex(configuration, presearcher);

    long purgeFrequency = configuration.getPurgeFrequency();
    this.purgeExecutor =
        Executors.newSingleThreadScheduledExecutor(new NamedThreadFactory("cache-purge"));
    this.purgeExecutor.scheduleAtFixedRate(
        () -> {
          try {
            purgeCache();
          } catch (Throwable e) {
            listeners.forEach(l -> l.onPurgeError(e));
          }
        },
        purgeFrequency,
        purgeFrequency,
        configuration.getPurgeFrequencyUnits());

    this.commitBatchSize = configuration.getQueryUpdateBufferSize();
  }


  @Override
  public IntervalMatchesIterator matches(String field, LeafReaderContext ctx, int doc)
      throws IOException {
    List<IntervalMatchesIterator> subMatches = new ArrayList<>();
    for (IntervalsSource subSource : subSources) {
      IntervalMatchesIterator mi = subSource.matches(field, ctx, doc);
      if (mi != null) {
        subMatches.add(mi);
      }
    }
    if (subMatches.size() == 0) {
      return null;
    }
    DisjunctionIntervalIterator it =
        new DisjunctionIntervalIterator(
            subMatches.stream()
                .map(m -> IntervalMatches.wrapMatches(m, doc))
                .collect(Collectors.toList()));
    if (it.advance(doc) != doc) {
      return null;
    }
    return new DisjunctionMatchesIterator(it, subMatches);
  }


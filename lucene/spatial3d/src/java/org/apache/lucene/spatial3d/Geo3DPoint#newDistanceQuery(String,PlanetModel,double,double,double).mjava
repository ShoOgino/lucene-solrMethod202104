  /**
   * Create a query for matching points within the specified distance of the supplied location.
   *
   * @param field field name. must not be null. Note that if {@link PlanetModel#WGS84} is used, the
   *     query is approximate and may have up to 0.5% error.
   * @param latitude latitude at the center: must be within standard +/-90 coordinate bounds.
   * @param longitude longitude at the center: must be within standard +/-180 coordinate bounds.
   * @param radiusMeters maximum distance from the center in meters: must be non-negative and
   *     finite.
   * @return query matching points within this distance
   * @throws IllegalArgumentException if {@code field} is null, location has invalid coordinates, or
   *     radius is invalid.
   */
  public static Query newDistanceQuery(
      final String field,
      final PlanetModel planetModel,
      final double latitude,
      final double longitude,
      final double radiusMeters) {
    final GeoShape shape = Geo3DUtil.fromDistance(planetModel, latitude, longitude, radiusMeters);
    return newShapeQuery(field, shape);
  }


    /**
     * Sorts hashed terms into ascending order, reusing memory along the way. Note that sorting is
     * lazily delayed until required (often it's not required at all). If a sorted view is required
     * then hashing + sort + binary search is still faster and smaller than TreeMap usage (which
     * would be an alternative and somewhat more elegant approach, apart from more sophisticated
     * Tries / prefix trees).
     */
    void sortTerms() {
      if (sortedTerms == null) {
        sortedTerms = terms.sort();
      }
    }


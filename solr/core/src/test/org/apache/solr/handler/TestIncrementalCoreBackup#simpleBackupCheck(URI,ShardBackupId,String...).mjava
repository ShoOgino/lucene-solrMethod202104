    /**
     * Check that the backup metadata file exists, and the corresponding index files can be found.
     */
    private static void simpleBackupCheck(URI locationURI, ShardBackupId shardBackupId, String... expectedIndexFiles) throws IOException {
        try(BackupRepository backupRepository = h.getCoreContainer().newBackupRepository(null)) {
            final BackupFilePaths backupFilePaths = new BackupFilePaths(backupRepository, locationURI);

            // Ensure that the overall file structure looks correct.
            assertTrue(backupRepository.exists(locationURI));
            assertTrue(backupRepository.exists(backupFilePaths.getIndexDir()));
            assertTrue(backupRepository.exists(backupFilePaths.getShardBackupMetadataDir()));
            final String metadataFilename = shardBackupId.getBackupMetadataFilename();
            final URI shardBackupMetadataURI = backupRepository.resolve(backupFilePaths.getShardBackupMetadataDir(), metadataFilename);
            assertTrue(backupRepository.exists(shardBackupMetadataURI));

            // Ensure that all files listed in the shard-meta file are stored in the index dir
            final ShardBackupMetadata backupMetadata = ShardBackupMetadata.from(backupRepository,
                    backupFilePaths.getShardBackupMetadataDir(), shardBackupId);
            for (String indexFileName : backupMetadata.listUniqueFileNames()) {
                final URI indexFileURI = backupRepository.resolve(backupFilePaths.getIndexDir(), indexFileName);
                assertTrue("Expected " + indexFileName + " to exist in " + backupFilePaths.getIndexDir(), backupRepository.exists(indexFileURI));
            }


            // Ensure that the expected filenames (if any are provided) exist
            for (String expectedIndexFile : expectedIndexFiles) {
                assertTrue("Expected backup to hold a renamed copy of " + expectedIndexFile,
                        backupMetadata.listOriginalFileNames().contains(expectedIndexFile));
            }
        }
    }


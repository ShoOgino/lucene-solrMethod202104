  public void testTopPhrases() throws IOException {
    Directory dir = newDirectory();
    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());
    String[] docs = ArrayUtil.copyOfSubArray(DOCS, 0, DOCS.length);
    Collections.shuffle(Arrays.asList(docs), random());
    for (String value : DOCS) {
      Document doc = new Document();
      doc.add(new TextField("f", value, Store.NO));
      w.addDocument(doc);
    }
    IndexReader r = DirectoryReader.open(w);
    w.close();
    IndexSearcher searcher = newSearcher(r);
    for (Query query :
        Arrays.asList(
            new PhraseQuery("f", "b", "c"), // common phrase
            new PhraseQuery("f", "e", "f"), // always appear next to each other
            new PhraseQuery("f", "d", "d") // repeated term
            )) {
      for (int topN = 1; topN <= 2; ++topN) {
        TopScoreDocCollector collector1 =
            TopScoreDocCollector.create(topN, null, Integer.MAX_VALUE);
        searcher.search(query, collector1);
        ScoreDoc[] hits1 = collector1.topDocs().scoreDocs;
        TopScoreDocCollector collector2 = TopScoreDocCollector.create(topN, null, 1);
        searcher.search(query, collector2);
        ScoreDoc[] hits2 = collector2.topDocs().scoreDocs;
        assertTrue("" + query, hits1.length > 0);
        CheckHits.checkEqual(query, hits1, hits2);
      }
    }
    r.close();
    dir.close();
  }


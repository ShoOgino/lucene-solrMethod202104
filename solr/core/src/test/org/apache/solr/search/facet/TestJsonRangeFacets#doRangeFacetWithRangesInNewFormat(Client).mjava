  private void doRangeFacetWithRangesInNewFormat(Client client) throws Exception {
    client.queryDefaults().set("cache", cache);
    client.deleteByQuery("*:*", null);
    indexSimple(client);
    SolrParams p = params("q", "*:*", "rows", "0");

    //case without inclusive params
    client.testJQ(params(p, "json.facet"
        , "{price:{type : range,field : num_i,ranges:[{from:-5, to:7}]}}"),
        "facets=={count:6, price:{buckets:[{val:\"[-5,7)\",count:4}]}}");

    //case without key param and to included
    client.testJQ(params(p, "json.facet"
        , "{price:{type : range,field : num_i,ranges:[{from:-5, to:7,inclusive_from:true ,inclusive_to:true}]}}"),
        "facets=={count:6, price:{buckets:[{val:\"[-5,7]\",count:5}]}}");

    //case with all params
    client.testJQ(params(p, "json.facet"
        , "{price:{type : range,field : num_i,ranges:[{from:-5, to:7,inclusive_from:true ,inclusive_to:true}]}}"),
        "facets=={count:6, price:{buckets:[{val:\"[-5,7]\",count:5}]}}");

    // from and to excluded
    client.testJQ(params(p, "json.facet"
        , "{price:{type : range,field : num_i,ranges:[{from:-5, to:7,inclusive_from:false ,inclusive_to:false}]}}"),
        "facets=={count:6, price:{buckets:[{val:\"(-5,7)\",count:2}]}}");

    // from excluded and to included
    client.testJQ(params(p, "json.facet"
        , "{price:{type : range,field : num_i,ranges:[{from:-5, to:7,inclusive_from:false ,inclusive_to:true}]}}"),
        "facets=={count:6, price:{buckets:[{val:\"(-5,7]\",count:3}]}}");

    // multiple ranges
    client.testJQ(params(p, "json.facet"
        , "{price:{type : range,field : num_i,include:[\"lower\"], outer:\"before\"," +
            "ranges:[{from:-5, to:7,inclusive_from:false ,inclusive_to:true},{from:-5, to:7,inclusive_from:false ,inclusive_to:false}]}}"),
        "facets=={count:6, price:{buckets:[{val:\"(-5,7]\",count:3},{val:\"(-5,7)\",count:2}]}}");

    // with mincount>0
    client.testJQ(params(p, "json.facet"
        , "{price:{type : range,field : num_i,mincount:3" +
            "ranges:[{from:-5, to:7,inclusive_from:false ,inclusive_to:true},{from:-5, to:7,inclusive_from:false ,inclusive_to:false}]}}"),
        "facets=={count:6, price:{buckets:[{val:\"(-5,7]\",count:3}]}}");

    // mix of old and new formats
    client.testJQ(params(p, "json.facet"
        , "{price:{type : range,field : num_i," +
            "ranges:[{from:-5, to:7,inclusive_from:false ,inclusive_to:true},{range:\"(-5,7)\"}]}}"),
        "facets=={count:6, price:{buckets:[{val:\"(-5,7]\",count:3},{val:\"(-5,7)\",count:2}]}}");

    // from==to
    client.testJQ(params(p, "json.facet"
        , "{price:{type : range,field : num_i,ranges:[{from:-5, to:-5,inclusive_from:false ,inclusive_to:true}]}}"),
        "facets=={count:6, price:{buckets:[{val:\"(-5,-5]\",count:0}]}}");
    client.testJQ(params(p, "json.facet"
        , "{price:{type : range,field : num_i,ranges:[{from:-5, to:-5,inclusive_from:false ,inclusive_to:false}]}}"),
        "facets=={count:6, price:{buckets:[{val:\"(-5,-5)\",count:0}]}}");
    client.testJQ(params(p, "json.facet"
        , "{price:{type : range,field : num_i,ranges:[{from:-5, to:-5,inclusive_from:true ,inclusive_to:false}]}}"),
        "facets=={count:6, price:{buckets:[{val:\"[-5,-5)\",count:0}]}}");
    client.testJQ(params(p, "json.facet"
        , "{price:{type : range,field : num_i,ranges:[{from:-5, to:-5,inclusive_from:true ,inclusive_to:true}]}}"),
        "facets=={count:6, price:{buckets:[{val:\"[-5,-5]\",count:2}]}}");

    // with * as one of the values
    client.testJQ(params(p, "json.facet"
        , "{price:{type : range,field : num_i,ranges:[{from:\"*\", to:10,inclusive_from:false ,inclusive_to:true}]}}"),
        "facets=={count:6, price:{buckets:[{val:\"(*,10]\",count:5}]}}");
    client.testJQ(params(p, "json.facet"
        , "{price:{type : range,field : num_i,ranges:[{from:-5, to:\"*\",inclusive_from:true ,inclusive_to:false}]}}"),
        "facets=={count:6, price:{buckets:[{val:\"[-5,*)\",count:5}]}}");
    client.testJQ(params(p, "json.facet"
        , "{price:{type : range,field : num_i,ranges:[{from:-5,inclusive_from:true ,inclusive_to:false}]}}"),
        "facets=={count:6, price:{buckets:[{val:\"[-5,*)\",count:5}]}}");
    client.testJQ(params(p, "json.facet"
        , "{price:{type : range,field : num_i,ranges:[{from:\"*\", to:\"*\",inclusive_from:true ,inclusive_to:false}]}}"),
        "facets=={count:6, price:{buckets:[{val:\"[*,*)\",count:5}]}}");
    client.testJQ(params(p, "json.facet"
        , "{price:{type : range,field : num_i,ranges:[{inclusive_from:true ,inclusive_to:false}]}}"),
        "facets=={count:6, price:{buckets:[{val:\"[*,*)\",count:5}]}}");
  }


  /** Test leaks via AsynchronousFileChannel.open */
  public void testLeakAsyncFileChannel() throws IOException, InterruptedException {
    Path dir = wrap(createTempDir());

    OutputStream file = Files.newOutputStream(dir.resolve("stillopen"));
    file.write(5);
    file.close();

    ExecutorService executorService =
        Executors.newFixedThreadPool(1, new NamedThreadFactory("async-io"));
    try {
      AsynchronousFileChannel leak =
          AsynchronousFileChannel.open(
              dir.resolve("stillopen"), Collections.emptySet(), executorService);
      Exception e = expectThrows(Exception.class, () -> dir.getFileSystem().close());
      assertTrue(e.getMessage().contains("file handle leaks"));
      leak.close();
    } finally {
      executorService.shutdown();
      executorService.awaitTermination(5, TimeUnit.SECONDS);
    }
  }


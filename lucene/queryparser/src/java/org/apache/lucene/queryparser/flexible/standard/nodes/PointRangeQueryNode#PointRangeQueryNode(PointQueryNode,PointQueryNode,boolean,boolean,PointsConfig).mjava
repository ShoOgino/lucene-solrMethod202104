  /**
   * Constructs a {@link PointRangeQueryNode} object using the given {@link PointQueryNode} as its
   * bounds and {@link PointsConfig}.
   *
   * @param lower the lower bound
   * @param upper the upper bound
   * @param lowerInclusive <code>true</code> if the lower bound is inclusive, otherwise, <code>false
   *     </code>
   * @param upperInclusive <code>true</code> if the upper bound is inclusive, otherwise, <code>false
   *     </code>
   * @param numericConfig the {@link PointsConfig} that represents associated with the upper and
   *     lower bounds
   * @see #setBounds(PointQueryNode, PointQueryNode, boolean, boolean, PointsConfig)
   */
  public PointRangeQueryNode(
      PointQueryNode lower,
      PointQueryNode upper,
      boolean lowerInclusive,
      boolean upperInclusive,
      PointsConfig numericConfig)
      throws QueryNodeException {
    setBounds(lower, upper, lowerInclusive, upperInclusive, numericConfig);
  }


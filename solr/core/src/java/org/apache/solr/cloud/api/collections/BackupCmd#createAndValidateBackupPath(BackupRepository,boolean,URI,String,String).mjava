  private URI createAndValidateBackupPath(BackupRepository repository, boolean incremental, URI location, String backupName, String collection) throws IOException{
    final URI backupNamePath = repository.resolve(location, backupName);

    if ( (!incremental) && repository.exists(backupNamePath)) {
        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, "The backup directory already exists: " + backupNamePath);
    }

    if (! repository.exists(backupNamePath)) {
      repository.createDirectory(backupNamePath);
    } else if (incremental){
      final String[] directoryContents = repository.listAll(backupNamePath);
      if (directoryContents.length == 1 && !directoryContents[0].equals(collection)) {
        throw new SolrException(ErrorCode.BAD_REQUEST, "The backup [" + backupName + "] at location [" + location +
                "] cannot be used to back up [" + collection + "], as it already holds a different collection [" +
                directoryContents[0] + "]");
      }
    }

    if (! incremental) {
      return backupNamePath;
    }

    // Incremental backups have an additional directory named after the collection that needs created
    final URI backupPathWithCollection = repository.resolve(backupNamePath, collection);
    if (! repository.exists(backupPathWithCollection)) {
      repository.createDirectory(backupPathWithCollection);
    }
    BackupFilePaths incBackupFiles = new BackupFilePaths(repository, backupPathWithCollection);
    incBackupFiles.createIncrementalBackupFolders();
    return backupPathWithCollection;
  }


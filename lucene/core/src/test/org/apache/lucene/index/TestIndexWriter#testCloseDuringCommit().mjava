  /** Make sure that close waits for any still-running commits. */
  public void testCloseDuringCommit() throws Exception {

    final CountDownLatch startCommit = new CountDownLatch(1);
    final CountDownLatch finishCommit = new CountDownLatch(1);

    Directory dir = newDirectory();
    IndexWriterConfig iwc = new IndexWriterConfig(null);
    // use an infostream that "takes a long time" to commit
    final IndexWriter iw =
        RandomIndexWriter.mockIndexWriter(
            random(),
            dir,
            iwc,
            new RandomIndexWriter.TestPoint() {
              @Override
              public void apply(String message) {
                if (message.equals("finishStartCommit")) {
                  startCommit.countDown();
                  try {
                    Thread.sleep(10);
                  } catch (InterruptedException ie) {
                    throw new ThreadInterruptedException(ie);
                  }
                }
              }
            });
    new Thread() {
      @Override
      public void run() {
        try {
          iw.commit();
          finishCommit.countDown();
        } catch (IOException ioe) {
          throw new RuntimeException(ioe);
        }
      }
    }.start();
    startCommit.await();
    try {
      iw.close();
    } catch (IllegalStateException ise) {
      // OK, but not required (depends on thread scheduling)
    }
    finishCommit.await();
    iw.close();
    dir.close();
  }


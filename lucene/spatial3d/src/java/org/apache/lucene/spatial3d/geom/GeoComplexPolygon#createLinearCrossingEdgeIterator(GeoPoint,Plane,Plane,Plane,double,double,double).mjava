  /**
   * Create a linear crossing edge iterator with the appropriate cutoff planes given the geometry.
   */
  private CountingEdgeIterator createLinearCrossingEdgeIterator(
      final GeoPoint testPoint,
      final Plane plane,
      final Plane abovePlane,
      final Plane belowPlane,
      final double thePointX,
      final double thePointY,
      final double thePointZ) {
    // If thePoint and testPoint are parallel, we won't be able to determine sidedness of the
    // bounding planes.  So detect that case, and build the iterator differently if we find it.
    // This didn't work; not sure why not:
    // if (testPoint.isParallel(thePointX, thePointY, thePointZ)) {
    //  return new FullLinearCrossingEdgeIterator(plane, abovePlane, belowPlane, thePointX,
    // thePointY, thePointZ);
    // }
    // return new SectorLinearCrossingEdgeIterator(plane, abovePlane, belowPlane, thePointX,
    // thePointY, thePointZ);
    //
    try {
      // System.out.println(" creating sector linear crossing edge iterator");
      return new SectorLinearCrossingEdgeIterator(
          testPoint, plane, abovePlane, belowPlane, thePointX, thePointY, thePointZ);
    } catch (IllegalArgumentException e) {
      // Assume we failed because we could not construct bounding planes, so do it another way.
      // System.out.println(" create full linear crossing edge iterator");
      return new FullLinearCrossingEdgeIterator(
          testPoint, plane, abovePlane, belowPlane, thePointX, thePointY, thePointZ);
    }
  }


  private FST.Arc<T> doSeekCeilList(final FST.Arc<T> arc, final int targetLabel)
      throws IOException {
    // Arcs are not array'd -- must do linear scan:
    if (arc.label() == targetLabel) {
      // recurse
      output[upto] = fst.outputs.add(output[upto - 1], arc.output());
      if (targetLabel == FST.END_LABEL) {
        return null;
      }
      setCurrentLabel(arc.label());
      incr();
      return fst.readFirstTargetArc(arc, getArc(upto), fstReader);
    } else if (arc.label() > targetLabel) {
      pushFirst();
      return null;
    } else if (arc.isLast()) {
      // Dead end (target is after the last arc);
      // rollback to last fork then push
      upto--;
      while (true) {
        if (upto == 0) {
          return null;
        }
        final FST.Arc<T> prevArc = getArc(upto);
        // System.out.println("  rollback upto=" + upto + " arc.label=" + prevArc.label + "
        // isLast?=" + prevArc.isLast());
        if (!prevArc.isLast()) {
          fst.readNextArc(prevArc, fstReader);
          pushFirst();
          return null;
        }
        upto--;
      }
    } else {
      // keep scanning
      // System.out.println("    next scan");
      fst.readNextArc(arc, fstReader);
    }
    return arc;
  }


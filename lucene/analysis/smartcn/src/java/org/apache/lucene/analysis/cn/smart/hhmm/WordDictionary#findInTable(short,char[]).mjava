  /**
   * Look up the text string corresponding with the word char array, and return the position of the
   * word list.
   *
   * @param knownHashIndex already figure out position of the first word symbol charArray[0] in hash
   *     table. If not calculated yet, can be replaced with function int findInTable(char[]
   *     charArray).
   * @param charArray look up the char array corresponding with the word.
   * @return word location in word array. If not found, then return -1.
   */
  private int findInTable(short knownHashIndex, char[] charArray) {
    if (charArray == null || charArray.length == 0) return -1;

    char[][] items = wordItem_charArrayTable[wordIndexTable[knownHashIndex]];
    int start = 0, end = items.length - 1;
    int mid = (start + end) / 2, cmpResult;

    // Binary search for the index of idArray
    while (start <= end) {
      cmpResult = Utility.compareArray(items[mid], 0, charArray, 1);

      if (cmpResult == 0) return mid; // find it
      else if (cmpResult < 0) start = mid + 1;
      else if (cmpResult > 0) end = mid - 1;

      mid = (start + end) / 2;
    }
    return -1;
  }


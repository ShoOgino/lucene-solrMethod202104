  /**
   * Accumulate bounds information for this plane, intersected with another plane and the world.
   * Updates both latitude and longitude information, using max/min points found within the
   * specified bounds. Also takes into account the error envelope for all planes being intersected.
   *
   * @param planetModel is the planet model to use in determining bounds.
   * @param boundsInfo is the lat/lon info to update with additional bounding information.
   * @param p is the other plane.
   * @param bounds are the surfaces delineating what's inside the shape.
   */
  public void recordBounds(
      final PlanetModel planetModel,
      final LatLonBounds boundsInfo,
      final Plane p,
      final Membership... bounds) {
    findIntersectionBounds(planetModel, boundsInfo, p, bounds);
  }


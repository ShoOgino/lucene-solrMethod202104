  Map<String, Replica> waitToSeeReplicasInState(String collectionName, Collection<String> coreNames) throws InterruptedException {
    assert coreNames.size() > 0;
    Map<String, Replica> results = new HashMap<>();
    AtomicReference<DocCollection> lastState = new AtomicReference<>();

    long maxWait = Long.getLong("solr.waitToSeeReplicasInStateTimeoutSeconds", 120); // could be a big cluster
    try {
      zkStateReader.waitForState(collectionName, maxWait, TimeUnit.SECONDS, c -> {
        if (c == null) return false;

        c.getSlices().stream().flatMap(slice -> slice.getReplicas().stream())
            .filter(r -> coreNames.contains(r.getCoreName()))   // Only the elements that were asked for...
            .filter(r -> !results.containsKey(r.getCoreName())) // ...but not the ones we've seen already...
            .forEach(r -> results.put(r.getCoreName(), r));     // ...get added to the map

        lastState.set(c);
        log.debug("Expecting {} cores, found {}", coreNames, results);
        return results.size() == coreNames.size();
      });
    } catch (TimeoutException e) {
      String error = "Timed out waiting to see all replicas: " + coreNames + " in cluster state. Last state: " + lastState.get();
      throw new SolrException(ErrorCode.SERVER_ERROR, error);
    }

    return results;
  }


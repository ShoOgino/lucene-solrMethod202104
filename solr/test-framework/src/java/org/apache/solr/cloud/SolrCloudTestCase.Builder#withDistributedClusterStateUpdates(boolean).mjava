    /**
     * Force the cluster state update strategy to be either Overseer based or distributed. <b>This method can be useful when
     * debugging tests</b> failing in only one of the two modes to have all local runs exhibit the issue, as well obviously for
     * tests that are not compatible with one of the two modes.
     * <p>
     * If this method is not called, the strategy being used will be random if the configuration passed to the cluster
     * ({@code solr.xml} equivalent) contains a placeholder similar to:
     * <pre>
     * {@code
     * <solrcloud>
     *   ....
     *   <str name="distributedClusterStateUpdates">${solr.distributedClusterStateUpdates:false}</str>
     *   ....
     * </solrcloud>
     * }</pre>
     * For an example of a configuration supporting this setting, see {@link MiniSolrCloudCluster#DEFAULT_CLOUD_SOLR_XML}.
     * When a test sets a different {@code solr.xml} config (using {@link #withSolrXml}), if the config does not contain
     * the placeholder, the strategy will be defined by the value assigned to {@code useDistributedClusterStateUpdates}
     * in {@link org.apache.solr.core.CloudConfig.CloudConfigBuilder}.
     *
     * @param distributed When {@code true}, cluster state updates are handled in a distributed way by nodes. When
     *                    {@code false}, cluster state updates are handled by Overseer.
     */
    public Builder withDistributedClusterStateUpdates(boolean distributed) {
      useDistributedClusterStateUpdate = distributed;
      return this;
    }


  /**
   * Specialized to pick out a child doc from a nested doc from the TLog.
   * @see #getInputDocumentFromTlog(SolrCore, BytesRef, AtomicLong, Set, Resolution)
   */
  private static SolrInputDocument getInputDocumentFromTlog(
      SolrCore core,
      BytesRef idBytes,
      BytesRef rootIdBytes,
      AtomicLong versionReturned,
      Set<String> onlyTheseFields,
      Resolution resolution) {
    if (idBytes.equals(rootIdBytes)) { // simple case; not looking for a child
      return getInputDocumentFromTlog(
          core, rootIdBytes, versionReturned, onlyTheseFields, resolution);
    }

    // Ensure we request the ID to pick out the child doc in the nest
    final String uniqueKeyField = core.getLatestSchema().getUniqueKeyField().getName();
    if (onlyTheseFields != null && !onlyTheseFields.contains(uniqueKeyField)) {
      onlyTheseFields = new HashSet<>(onlyTheseFields); // clone
      onlyTheseFields.add(uniqueKeyField);
    }

    SolrInputDocument iDoc =
        getInputDocumentFromTlog(
            core, rootIdBytes, versionReturned, onlyTheseFields, Resolution.ROOT_WITH_CHILDREN);
    if (iDoc == DELETED || iDoc == null) {
      return iDoc;
    }

    iDoc = findNestedDocById(iDoc, idBytes, core.getLatestSchema());
    if (iDoc == null) {
      return DELETED; // new nest overwrote the old nest without the ID we are looking for?
    }
    return iDoc;
  }


  public void testInputPathRequired() throws Exception {

    //  SynonymMap.Builder b = new SynonymMap.Builder(false);
    //  b.add(new CharsRef("ab"), new CharsRef("ba"), true);
    //  final SynonymMap map = b.build();

    //  The Analyzer below mimics the functionality of the SynonymAnalyzer
    //  using the above map, so that the suggest module does not need a dependency on the
    //  synonym module

    final Analyzer analyzer =
        new TestAnalyzingSuggester.MultiCannedAnalyzer(
            new CannedTokenStream(token("ab", 1, 1), token("ba", 0, 1), token("xc", 1, 1)),
            new CannedTokenStream(token("ba", 1, 1), token("xd", 1, 1)),
            new CannedTokenStream(token("ab", 1, 1), token("ba", 0, 1), token("x", 1, 1)));

    Input keys[] =
        new Input[] {
          new Input("ab xc", 50), new Input("ba xd", 50),
        };
    Directory tempDir = getDirectory();
    FuzzySuggester suggester = new FuzzySuggester(tempDir, "fuzzy", analyzer);
    suggester.build(new InputArrayIterator(keys));
    List<LookupResult> results = suggester.lookup("ab x", false, 1);
    assertTrue(results.size() == 1);
    IOUtils.close(analyzer, tempDir);
  }


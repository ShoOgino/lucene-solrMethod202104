  /**
   * Create a query for matching points within the specified distance of the supplied location. This
   * query is usually slow as it does not use an index structure and needs to verify documents
   * one-by-one in order to know whether they match. It is best used wrapped in an {@link
   * IndexOrDocValuesQuery} alongside a {@link XYPointField#newDistanceQuery}.
   *
   * @param field field name. must not be null.
   * @param x x at the center.
   * @param y y at the center: must be within standard +/-180 coordinate bounds.
   * @param radius maximum distance from the center in cartesian distance: must be non-negative and
   *     finite.
   * @return query matching points within this distance
   * @throws IllegalArgumentException if {@code field} is null, location has invalid coordinates, or
   *     radius is invalid.
   */
  public static Query newSlowDistanceQuery(String field, float x, float y, float radius) {
    XYCircle circle = new XYCircle(x, y, radius);
    return new XYDocValuesPointInGeometryQuery(field, circle);
  }


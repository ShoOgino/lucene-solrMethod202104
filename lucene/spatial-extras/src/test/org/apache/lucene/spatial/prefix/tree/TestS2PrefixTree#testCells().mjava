  @Test
  @Repeat(iterations = 10)
  public void testCells() {
    int face = random().nextInt(6);
    S2CellId id = S2CellId.fromFacePosLevel(face, 0, 0);
    int arity = random().nextInt(3) + 1;
    int level = random().nextInt(S2PrefixTree.getMaxLevels(arity));
    level = level * arity;
    for (int i = 0; i < level; i++) {
      int pos = random().nextInt(4);
      id = id.childBegin();
      if (pos == 0) continue;
      id = id.next();
      if (pos == 1) continue;
      id = id.next();
      if (pos == 2) continue;
      id = id.next();
    }
    S2PrefixTree tree = new S2PrefixTree(new Geo3dSpatialContextFactory().newSpatialContext(), S2PrefixTree.getMaxLevels(arity), arity);
    S2PrefixTreeCell cell = new S2PrefixTreeCell(tree, id);
    BytesRef ref = cell.getTokenBytesWithLeaf(null);
    if (random().nextBoolean()) {
      int newOffset = random().nextInt(10) + 1;
      byte[] newBytes = new byte[ref.bytes.length +  newOffset];
      for (int i = 0; i < ref.bytes.length; i++) {
        newBytes[i + newOffset] = ref.bytes[i];
      }
      ref.bytes = newBytes;
      ref.offset = ref.offset + newOffset;
    }
    S2PrefixTreeCell cell2 = new S2PrefixTreeCell(tree, null);
    cell2.readCell(tree, ref);
    assertEquals(cell, cell2);
  }


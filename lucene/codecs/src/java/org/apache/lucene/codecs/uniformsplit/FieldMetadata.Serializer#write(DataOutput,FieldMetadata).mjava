    public void write(DataOutput output, FieldMetadata fieldMetadata) throws IOException {
      assert fieldMetadata.dictionaryStartFP >= 0;
      assert fieldMetadata.firstBlockStartFP >= 0;
      assert fieldMetadata.lastBlockStartFP >= 0;
      assert fieldMetadata.numTerms > 0
          : "There should be at least one term for field "
              + fieldMetadata.fieldInfo.name
              + ": "
              + fieldMetadata.numTerms;
      assert fieldMetadata.firstBlockStartFP <= fieldMetadata.lastBlockStartFP
          : "start: " + fieldMetadata.firstBlockStartFP + " end: " + fieldMetadata.lastBlockStartFP;
      assert fieldMetadata.lastTerm != null : "you must set the last term";

      output.writeVInt(fieldMetadata.fieldInfo.number);

      output.writeVLong(fieldMetadata.numTerms);
      output.writeVLong(fieldMetadata.sumDocFreq);

      if (fieldMetadata.fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0) {
        assert fieldMetadata.sumTotalTermFreq >= fieldMetadata.sumDocFreq
            : "sumTotalFQ: "
                + fieldMetadata.sumTotalTermFreq
                + " sumDocFQ: "
                + fieldMetadata.sumDocFreq;
        output.writeVLong(fieldMetadata.sumTotalTermFreq - fieldMetadata.sumDocFreq);
      }

      output.writeVInt(fieldMetadata.getDocCount());

      output.writeVLong(fieldMetadata.dictionaryStartFP);
      output.writeVLong(fieldMetadata.firstBlockStartFP);
      output.writeVLong(fieldMetadata.lastBlockStartFP);

      if (fieldMetadata.lastTerm.length > 0) {
        output.writeVInt(fieldMetadata.lastTerm.length);
        output.writeBytes(
            fieldMetadata.lastTerm.bytes,
            fieldMetadata.lastTerm.offset,
            fieldMetadata.lastTerm.length);
      } else {
        output.writeVInt(0);
      }
    }


  private static MetricsConfig getMetricsConfig(XmlConfigFile config) {
    MetricsConfig.MetricsConfigBuilder builder = new MetricsConfig.MetricsConfigBuilder();
    Node node = config.getNode("solr/metrics", false);
    // enabled by default
    boolean enabled = true;
    if (node != null) {
      enabled = Boolean.parseBoolean(DOMUtil.getAttrOrDefault(node, "enabled", "true"));
    }
    builder.setEnabled(enabled);
    if (!enabled) {
      log.info("Metrics collection is disabled.");
      return builder.build();
    }
    node = config.getNode("solr/metrics/suppliers/counter", false);
    if (node != null) {
      builder = builder.setCounterSupplier(new PluginInfo(node, "counterSupplier", false, false));
    }
    node = config.getNode("solr/metrics/suppliers/meter", false);
    if (node != null) {
      builder = builder.setMeterSupplier(new PluginInfo(node, "meterSupplier", false, false));
    }
    node = config.getNode("solr/metrics/suppliers/timer", false);
    if (node != null) {
      builder = builder.setTimerSupplier(new PluginInfo(node, "timerSupplier", false, false));
    }
    node = config.getNode("solr/metrics/suppliers/histogram", false);
    if (node != null) {
      builder = builder.setHistogramSupplier(new PluginInfo(node, "histogramSupplier", false, false));
    }
    node = config.getNode("solr/metrics/history", false);
    if (node != null) {
      builder = builder.setHistoryHandler(new PluginInfo(node, "history", false, false));
    }
    node = config.getNode("solr/metrics/missingValues", false);;
    if (node != null) {
      NamedList<Object> missingValues = DOMUtil.childNodesToNamedList(node);
      builder.setNullNumber(decodeNullValue(missingValues.get("nullNumber")));
      builder.setNotANumber(decodeNullValue(missingValues.get("notANumber")));
      builder.setNullString(decodeNullValue(missingValues.get("nullString")));
      builder.setNullObject(decodeNullValue(missingValues.get("nullObject")));
    }

    PluginInfo[] reporterPlugins = getMetricReporterPluginInfos(config);
    Set<String> hiddenSysProps = getHiddenSysProps(config);
    return builder
        .setMetricReporterPlugins(reporterPlugins)
        .setHiddenSysProps(hiddenSysProps)
        .build();
  }


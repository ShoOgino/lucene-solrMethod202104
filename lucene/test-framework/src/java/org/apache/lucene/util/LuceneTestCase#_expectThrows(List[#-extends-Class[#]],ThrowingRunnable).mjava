  /**
   * Helper method for {@link #expectThrows} and {@link #expectThrowsAnyOf} that takes care of
   * propagating any {@link AssertionError} or {@link AssumptionViolatedException} instances thrown
   * if and only if they are super classes of the <code>expectedTypes</code>. Otherwise simply
   * returns any {@link Throwable} thrown, regardless of type, or null if the <code>runnable</code>
   * completed w/o error.
   */
  private static Throwable _expectThrows(
      List<? extends Class<?>> expectedTypes, ThrowingRunnable runnable) {

    try {
      runnable.run();
    } catch (AssertionError | AssumptionViolatedException ae) {
      for (Class<?> expectedType : expectedTypes) {
        if (expectedType.isInstance(ae)) { // user is expecting this type explicitly
          return ae;
        }
      }
      throw ae;
    } catch (Throwable e) {
      return e;
    }
    return null;
  }


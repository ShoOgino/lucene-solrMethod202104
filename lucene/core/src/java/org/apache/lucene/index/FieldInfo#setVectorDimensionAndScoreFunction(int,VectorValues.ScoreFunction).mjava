  /** Record that this field is indexed with vectors, with the specified num of dimensions and distance function */
  public void setVectorDimensionAndScoreFunction(int dimension, VectorValues.ScoreFunction scoreFunction) {
    if (dimension < 0) {
      throw new IllegalArgumentException("vector dimension must be >= 0; got " + dimension);
    }
    if (dimension > VectorValues.MAX_DIMENSIONS) {
      throw new IllegalArgumentException("vector dimension must be <= VectorValues.MAX_DIMENSIONS (=" + VectorValues.MAX_DIMENSIONS + "); got " + dimension);
    }
    if (dimension == 0 && scoreFunction != VectorValues.ScoreFunction.NONE) {
      throw new IllegalArgumentException("vector score function must be NONE when the vector dimension = 0; got " + scoreFunction);
    }
    if (vectorDimension != 0 && vectorDimension != dimension) {
      throw new IllegalArgumentException("cannot change vector dimension from " + vectorDimension + " to " + dimension + " for field=\"" + name + "\"");
    }
    if (vectorScoreFunction != VectorValues.ScoreFunction.NONE && vectorScoreFunction != scoreFunction) {
      throw new IllegalArgumentException("cannot change vector score function from " + vectorScoreFunction + " to " + scoreFunction + " for field=\"" + name + "\"");
    }

    this.vectorDimension = dimension;
    this.vectorScoreFunction = scoreFunction;

    assert checkConsistency();
  }


  public void testAnalyzerNoPreservePosInc() throws Exception {
    Analyzer analyzer =
        new MockAnalyzer(random(), MockTokenizer.WHITESPACE, true, MockTokenFilter.ENGLISH_STOPSET);
    CompletionAnalyzer completionAnalyzer = new CompletionAnalyzer(analyzer, true, false);
    final String field = getTestName();
    RandomIndexWriter iw =
        new RandomIndexWriter(random(), dir, iwcWithSuggestField(completionAnalyzer, field));
    Document document = new Document();
    document.add(new SuggestField(field, "foobar", 7));
    document.add(new SuggestField(field, "foo bar", 8));
    document.add(new SuggestField(field, "the fo", 9));
    document.add(new SuggestField(field, "the foo bar", 10));
    document.add(new SuggestField(field, "foo the bar", 11)); // middle stopword
    document.add(new SuggestField(field, "baz the", 12)); // trailing stopword

    iw.addDocument(document);

    // note we use the completionAnalyzer with the queries (instead of input analyzer) because of
    // non-default settings
    DirectoryReader reader = iw.getReader();
    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);
    CompletionQuery query = new PrefixCompletionQuery(completionAnalyzer, new Term(field, "fo"));
    TopSuggestDocs suggest = indexSearcher.suggest(query, 9, false); // matches all with fo
    assertSuggestions(
        suggest,
        new Entry("foo the bar", 11),
        new Entry("the foo bar", 10),
        new Entry("the fo", 9),
        new Entry("foo bar", 8),
        new Entry("foobar", 7));
    // with leading stopword
    query =
        new PrefixCompletionQuery(completionAnalyzer, new Term(field, "the fo")); // becomes "fo*"
    suggest = indexSearcher.suggest(query, 9, false);
    assertSuggestions(
        suggest,
        new Entry("foo the bar", 11),
        new Entry("the foo bar", 10),
        new Entry("the fo", 9),
        new Entry("foo bar", 8),
        new Entry("foobar", 7));
    // with middle stopword
    query =
        new PrefixCompletionQuery(
            completionAnalyzer, new Term(field, "foo the bar")); // becomes "foo bar*"
    suggest = indexSearcher.suggest(query, 9, false);
    assertSuggestions(
        suggest,
        new Entry("foo the bar", 11),
        new Entry("the foo bar", 10),
        new Entry("foo bar", 8)); // no foobar
    // no space
    query = new PrefixCompletionQuery(completionAnalyzer, new Term(field, "foob"));
    suggest = indexSearcher.suggest(query, 4, false); // separators, thus only match "foobar"
    assertSuggestions(suggest, new Entry("foobar", 7));
    // surrounding stopwords
    query =
        new PrefixCompletionQuery(
            completionAnalyzer, new Term(field, "the baz the")); // becomes "baz*"
    suggest = indexSearcher.suggest(query, 4, false); // stopwords in query get removed so we match
    assertSuggestions(suggest, new Entry("baz the", 12));
    reader.close();
    iw.close();
  }


  private void testOne(PostingsEnum docs, List<Integer> expected) throws Exception {
    if (VERBOSE) {
      System.out.println("test");
    }
    int upto = -1;
    while (upto < expected.size()) {
      if (VERBOSE) {
        System.out.println("  cycle upto=" + upto + " of " + expected.size());
      }
      final int docID;
      if (random().nextInt(4) == 1 || upto == expected.size() - 1) {
        // test nextDoc()
        if (VERBOSE) {
          System.out.println("    do nextDoc");
        }
        upto++;
        docID = docs.nextDoc();
      } else {
        // test advance()
        final int inc = TestUtil.nextInt(random(), 1, expected.size() - 1 - upto);
        if (VERBOSE) {
          System.out.println("    do advance inc=" + inc);
        }
        upto += inc;
        docID = docs.advance(expected.get(upto));
      }
      if (upto == expected.size()) {
        if (VERBOSE) {
          System.out.println(
              "  expect docID=" + DocIdSetIterator.NO_MORE_DOCS + " actual=" + docID);
        }
        assertEquals(DocIdSetIterator.NO_MORE_DOCS, docID);
      } else {
        if (VERBOSE) {
          System.out.println("  expect docID=" + expected.get(upto) + " actual=" + docID);
        }
        assertTrue(docID != DocIdSetIterator.NO_MORE_DOCS);
        assertEquals(expected.get(upto).intValue(), docID);
      }
    }
  }


  @Test
  public void testCloudStreamClientCache() throws Exception {

    StreamContext streamContext = new StreamContext();
    SolrClientCache solrClientCache = new SolrClientCache();
    solrClientCache.getCloudSolrClient(zkHost);
    streamContext.setSolrClientCache(solrClientCache);

    String expr = "search(" + MULTI_REPLICA_COLLECTIONORALIAS + ",q=*:*,fl=\"a_i\", qt=\"/export\", sort=\"a_i asc\")";
    try (CloudSolrStream stream = new CloudSolrStream(StreamExpressionParser.parse(expr), streamFactory)) {
      stream.setStreamContext(streamContext);
      stream.open();
      Tuple t = stream.read();
      while (!t.EOF) {
        // no-op ... just want to iterate over the tuples
        t = stream.read();
      }

      List<String> baseUrls = new LinkedList<>();
      ZkStateReader zkStateReader = cluster.getSolrClient().getZkStateReader();
      List<String> resolved = zkStateReader.aliasesManager.getAliases().resolveAliases(MULTI_REPLICA_COLLECTIONORALIAS);
      Set<String> liveNodes = zkStateReader.getClusterState().getLiveNodes();
      int expectedNumStreams = 0;
      for (String coll : resolved) {
        DocCollection dcoll = zkStateReader.getCollection(coll);
        for (Slice slice : dcoll.getSlices()) {
          ++expectedNumStreams; // one Stream per slice
          for (Replica r : slice.getReplicas()) {
            if (r.isActive(liveNodes)) {
              baseUrls.add(r.getBaseUrl());
            }
          }
        }
      }
      List<TupleStream> solrStreams = stream.children();
      assertEquals(expectedNumStreams, solrStreams.size());
      for (TupleStream next : solrStreams) {
        SolrStream ss = (SolrStream)next;
        assertTrue(baseUrls.contains(ss.getBaseUrl())); // SolrStream uses the baseUrl of the replica and not the coreUrl
      }

      // verify core filtering
      streamContext.setLocal(true);

      for (String coll : resolved) {
        Replica rr = zkStateReader.getCollection(coll).getReplicas().get(0);
        streamContext.put("core", rr.core);
        List<Replica> replicas = TupleStream.getReplicas(zkHost, coll, streamContext, new ModifiableSolrParams());
        assertEquals("core filter for " + rr.core + " not applied for " + coll + "; replicas: " + replicas, 1, replicas.size());
        assertEquals("core filter for " + rr.core + " not applied for " + coll, rr, replicas.get(0));
      }

    } finally {
      solrClientCache.close();
    }
  }


  @Test
  public void testGetDocumentFields() {
    DocumentsImpl documents = new DocumentsImpl(reader);
    List<DocumentField> fields = documents.getDocumentFields(0);
    assertEquals(5, fields.size());

    DocumentField f1 = fields.get(0);
    assertEquals("title", f1.getName());
    assertEquals(IndexOptions.DOCS_AND_FREQS, f1.getIdxOptions());
    assertFalse(f1.hasTermVectors());
    assertFalse(f1.hasPayloads());
    assertFalse(f1.hasNorms());
    assertEquals(0, f1.getNorm());
    assertTrue(f1.isStored());
    assertEquals("Pride and Prejudice", f1.getStringValue());
    assertNull(f1.getBinaryValue());
    assertNull(f1.getNumericValue());
    assertEquals(DocValuesType.NONE, f1.getDvType());
    assertEquals(0, f1.getPointDimensionCount());
    assertEquals(0, f1.getPointNumBytes());

    DocumentField f2 = fields.get(1);
    assertEquals("author", f2.getName());
    assertEquals(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS, f2.getIdxOptions());
    assertFalse(f2.hasTermVectors());
    assertFalse(f2.hasPayloads());
    assertTrue(f2.hasNorms());
    assertTrue(f2.getNorm() > 0);
    assertTrue(f2.isStored());
    assertEquals("Jane Austen", f2.getStringValue());
    assertNull(f2.getBinaryValue());
    assertNull(f2.getNumericValue());
    assertEquals(DocValuesType.NONE, f2.getDvType());
    assertEquals(0, f2.getPointDimensionCount());
    assertEquals(0, f2.getPointNumBytes());

    DocumentField f3 = fields.get(2);
    assertEquals("text", f3.getName());
    assertEquals(IndexOptions.DOCS_AND_FREQS, f3.getIdxOptions());
    assertTrue(f3.hasTermVectors());
    assertFalse(f3.hasPayloads());
    assertTrue(f3.hasNorms());
    assertTrue(f3.getNorm() > 0);
    assertFalse(f3.isStored());
    assertNull(f3.getStringValue());
    assertNull(f3.getBinaryValue());
    assertNull(f3.getNumericValue());
    assertEquals(DocValuesType.NONE, f3.getDvType());
    assertEquals(0, f3.getPointDimensionCount());
    assertEquals(0, f3.getPointNumBytes());

    DocumentField f4 = fields.get(3);
    assertEquals("subject", f4.getName());
    assertEquals(IndexOptions.NONE, f4.getIdxOptions());
    assertFalse(f4.hasTermVectors());
    assertFalse(f4.hasPayloads());
    assertFalse(f4.hasNorms());
    assertEquals(0, f4.getNorm());
    assertFalse(f4.isStored());
    assertNull(f4.getStringValue());
    assertNull(f4.getBinaryValue());
    assertNull(f4.getNumericValue());
    assertEquals(DocValuesType.SORTED_SET, f4.getDvType());
    assertEquals(0, f4.getPointDimensionCount());
    assertEquals(0, f4.getPointNumBytes());

    DocumentField f5 = fields.get(4);
    assertEquals("downloads", f5.getName());
    assertEquals(IndexOptions.NONE, f5.getIdxOptions());
    assertFalse(f5.hasTermVectors());
    assertFalse(f5.hasPayloads());
    assertFalse(f5.hasNorms());
    assertEquals(0, f5.getNorm());
    assertTrue(f5.isStored());
    assertNull(f5.getStringValue());
    assertEquals(28533, NumericUtils.sortableBytesToInt(f5.getBinaryValue().bytes, 0));
    assertNull(f5.getNumericValue());
  }


  public void testCloneSliceSafety() throws Exception {
    MMapDirectory mmapDir = new MMapDirectory(createTempDir("testCloneSliceSafety"));
    IndexOutput io = mmapDir.createOutput("bytes", newIOContext(random()));
    io.writeInt(1);
    io.writeInt(2);
    io.close();
    IndexInput slicer = mmapDir.openInput("bytes", newIOContext(random()));
    IndexInput one = slicer.slice("first int", 0, 4);
    IndexInput two = slicer.slice("second int", 4, 4);
    IndexInput three = one.clone(); // clone of clone
    IndexInput four = two.clone(); // clone of clone
    slicer.close();
    expectThrows(
        AlreadyClosedException.class,
        () -> {
          one.readInt();
        });
    expectThrows(
        AlreadyClosedException.class,
        () -> {
          two.readInt();
        });
    expectThrows(
        AlreadyClosedException.class,
        () -> {
          three.readInt();
        });
    expectThrows(
        AlreadyClosedException.class,
        () -> {
          four.readInt();
        });

    one.close();
    two.close();
    three.close();
    four.close();
    // test double-close of slicer:
    slicer.close();
    mmapDir.close();
  }


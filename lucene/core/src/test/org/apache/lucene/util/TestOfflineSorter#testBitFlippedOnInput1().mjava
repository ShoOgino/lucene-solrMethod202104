  /**
   * Make sure corruption on the incoming (unsorted) file is caught, even if the corruption didn't
   * confuse OfflineSorter!
   */
  public void testBitFlippedOnInput1() throws Exception {

    try (Directory dir0 = newMockDirectory()) {

      Directory dir =
          new FilterDirectory(dir0) {
            @Override
            public IndexOutput createTempOutput(String prefix, String suffix, IOContext context)
                throws IOException {
              IndexOutput out = in.createTempOutput(prefix, suffix, context);
              if (prefix.equals("unsorted")) {
                return new CorruptingIndexOutput(dir0, 22, out);
              } else {
                return out;
              }
            }
          };

      IndexOutput unsorted = dir.createTempOutput("unsorted", "tmp", IOContext.DEFAULT);
      writeAll(unsorted, generateFixed(10 * 1024));

      CorruptIndexException e =
          expectThrows(
              CorruptIndexException.class,
              () -> {
                new OfflineSorter(dir, "foo").sort(unsorted.getName());
              });
      assertTrue(e.getMessage().contains("checksum failed (hardware problem?)"));
    }
  }


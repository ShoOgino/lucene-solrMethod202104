  /** Basic test */
  public void testBasics() throws Exception {
    Directory dir = newDirectory();
    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);

    // intersects (within)
    Document document = new Document();
    document.add(
        new DoubleRange(FIELD_NAME, new double[] {-10.0, -10.0}, new double[] {9.1, 10.1}));
    writer.addDocument(document);

    // intersects (crosses)
    document = new Document();
    document.add(
        new DoubleRange(FIELD_NAME, new double[] {10.0, -10.0}, new double[] {20.0, 10.0}));
    writer.addDocument(document);

    // intersects (contains, crosses)
    document = new Document();
    document.add(
        new DoubleRange(FIELD_NAME, new double[] {-20.0, -20.0}, new double[] {30.0, 30.1}));
    writer.addDocument(document);

    // intersects (crosses)
    document = new Document();
    document.add(
        new DoubleRange(FIELD_NAME, new double[] {-11.1, -11.2}, new double[] {1.23, 11.5}));
    writer.addDocument(document);

    // intersects (crosses)
    document = new Document();
    document.add(new DoubleRange(FIELD_NAME, new double[] {12.33, 1.2}, new double[] {15.1, 29.9}));
    writer.addDocument(document);

    // disjoint
    document = new Document();
    document.add(
        new DoubleRange(FIELD_NAME, new double[] {-122.33, 1.2}, new double[] {-115.1, 29.9}));
    writer.addDocument(document);

    // intersects (crosses)
    document = new Document();
    document.add(
        new DoubleRange(
            FIELD_NAME, new double[] {Double.NEGATIVE_INFINITY, 1.2}, new double[] {-11.0, 29.9}));
    writer.addDocument(document);

    // equal (within, contains, intersects)
    document = new Document();
    document.add(new DoubleRange(FIELD_NAME, new double[] {-11, -15}, new double[] {15, 20}));
    writer.addDocument(document);

    // search
    IndexReader reader = writer.getReader();
    IndexSearcher searcher = newSearcher(reader);
    assertEquals(
        7,
        searcher.count(
            DoubleRange.newIntersectsQuery(
                FIELD_NAME, new double[] {-11.0, -15.0}, new double[] {15.0, 20.0})));
    assertEquals(
        2,
        searcher.count(
            DoubleRange.newWithinQuery(
                FIELD_NAME, new double[] {-11.0, -15.0}, new double[] {15.0, 20.0})));
    assertEquals(
        2,
        searcher.count(
            DoubleRange.newContainsQuery(
                FIELD_NAME, new double[] {-11.0, -15.0}, new double[] {15.0, 20.0})));
    assertEquals(
        5,
        searcher.count(
            DoubleRange.newCrossesQuery(
                FIELD_NAME, new double[] {-11.0, -15.0}, new double[] {15.0, 20.0})));

    reader.close();
    writer.close();
    dir.close();
  }


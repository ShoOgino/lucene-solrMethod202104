  @Test
  public void testMultiFieldHighlights() throws IOException {
    for (String[] fieldPairs :
        new String[][] {
          {FLD_TEXT_POS_OFFS1, FLD_TEXT_POS_OFFS2},
          {FLD_TEXT_POS, FLD_TEXT_POS_OFFS2},
          {FLD_TEXT_POS_OFFS1, FLD_TEXT_POS}
        }) {
      String field1 = fieldPairs[0];
      String field2 = fieldPairs[1];

      new IndexBuilder(this::toField)
          .doc(
              fields -> {
                fields.add(field1, "foo bar", "baz abc");
                fields.add(field2, "foo baz", "loo bar");
              })
          .build(
              analyzer,
              reader -> {
                String ordered =
                    Stream.of(fmt("(%s: '>baz< abc')", field1), fmt("(%s: 'loo >bar<')", field2))
                        .sorted()
                        .collect(Collectors.joining(""));

                assertThat(
                    highlights(
                        reader,
                        stdQueryParser.apply(field1 + ":baz" + " OR " + field2 + ":bar", field1)),
                    containsInAnyOrder(fmt("0: %s", ordered)));
              });
    }
  }


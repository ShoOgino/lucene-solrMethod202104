  public ReplicaNode(
      int id, Directory dir, SearcherFactory searcherFactory, PrintStream printStream)
      throws IOException {
    super(id, dir, searcherFactory, printStream);

    if (dir.getPendingDeletions().isEmpty() == false) {
      throw new IllegalArgumentException(
          "Directory " + dir + " still has pending deleted files; cannot initialize IndexWriter");
    }

    boolean success = false;

    try {
      message("top: init replica dir=" + dir);

      // Obtain a write lock on this index since we "act like" an IndexWriter, to prevent any other
      // IndexWriter or ReplicaNode from using it:
      writeFileLock = dir.obtainLock(IndexWriter.WRITE_LOCK_NAME);

      state = "init";
      deleter = new ReplicaFileDeleter(this, dir);
      success = true;
    } catch (Throwable t) {
      message("exc on init:");
      t.printStackTrace(printStream);
      throw t;
    } finally {
      if (success == false) {
        IOUtils.closeWhileHandlingException(this);
      }
    }
  }


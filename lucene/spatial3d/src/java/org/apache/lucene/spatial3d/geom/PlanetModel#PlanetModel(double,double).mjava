  /**
   * * Construct a Planet Model from the semi major axis, semi minor axis=.
   *
   * @param semiMajorAxis is the semi major axis (in meters) defined as 'a' in projection formulae.
   * @param semiMinorAxis is the semi minor axis (in meters) defined as 'b' in projection formulae.
   */
  public PlanetModel(final double semiMajorAxis, final double semiMinorAxis) {
    this.a = semiMajorAxis;
    this.b = semiMinorAxis;
    this.meanRadius = (2.0 * semiMajorAxis + semiMinorAxis) / 3.0;
    this.xyScaling = semiMajorAxis / meanRadius;
    this.zScaling = semiMinorAxis / meanRadius;
    this.scale = (2.0 * xyScaling + zScaling) / 3.0;
    this.inverseXYScaling = 1.0 / xyScaling;
    this.inverseZScaling = 1.0 / zScaling;
    this.scaledFlattening = (xyScaling - zScaling) * inverseXYScaling;
    this.squareRatio = (xyScaling * xyScaling - zScaling * zScaling) / (zScaling * zScaling);
    this.inverseXYScalingSquared = inverseXYScaling * inverseXYScaling;
    this.inverseZScalingSquared = inverseZScaling * inverseZScaling;
    this.NORTH_POLE = new GeoPoint(zScaling, 0.0, 0.0, 1.0, Math.PI * 0.5, 0.0);
    this.SOUTH_POLE = new GeoPoint(zScaling, 0.0, 0.0, -1.0, -Math.PI * 0.5, 0.0);
    this.MIN_X_POLE = new GeoPoint(xyScaling, -1.0, 0.0, 0.0, 0.0, -Math.PI);
    this.MAX_X_POLE = new GeoPoint(xyScaling, 1.0, 0.0, 0.0, 0.0, 0.0);
    this.MIN_Y_POLE = new GeoPoint(xyScaling, 0.0, -1.0, 0.0, 0.0, -Math.PI * 0.5);
    this.MAX_Y_POLE = new GeoPoint(xyScaling, 0.0, 1.0, 0.0, 0.0, Math.PI * 0.5);

    this.inverseScale = 1.0 / scale;
    this.minimumPoleDistance =
        Math.min(surfaceDistance(NORTH_POLE, SOUTH_POLE), surfaceDistance(MIN_X_POLE, MAX_X_POLE));

    this.MAX_VALUE = getMaximumMagnitude();
    this.MUL = (0x1L << BITS) / (2 * this.MAX_VALUE);
    this.DECODE = getNextSafeDouble(1 / MUL);
    this.MIN_ENCODED_VALUE = encodeValue(-MAX_VALUE);
    this.MAX_ENCODED_VALUE = encodeValue(MAX_VALUE);

    this.docValueEncoder = new DocValueEncoder(this);
  }


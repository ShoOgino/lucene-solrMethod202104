  private int waitForVersionChange(int currentVersion, int timeoutSec) throws Exception {
    TimeOut timeout = new TimeOut(timeoutSec, TimeUnit.SECONDS, TimeSource.NANO_TIME);
    Overseer overseer = cluster.getOpenOverseer();
    if (overseer == null) {
      throw new Exception("no overseer");
    }
    ClusterEventProducer clusterEventProducer = overseer.getCoreContainer().getClusterEventProducer();
    assertTrue("not a delegating producer? " + clusterEventProducer.getClass(),
        clusterEventProducer instanceof DelegatingClusterEventProducer);
    DelegatingClusterEventProducer wrapper = (DelegatingClusterEventProducer) clusterEventProducer;
    while (!timeout.hasTimedOut()) {
      int newVersion = wrapper.getVersion();
      if (newVersion < currentVersion) {
        throw new Exception("Invalid version - went back! currentVersion=" + currentVersion +
            " newVersion=" + newVersion);
      } else if (currentVersion < newVersion) {
        log.debug("--current version was {}, new version is {}", currentVersion, newVersion);
        return newVersion;
      }
      timeout.sleep(200);
    }
    throw new TimeoutException("version didn't change in time, currentVersion=" + currentVersion);

  }


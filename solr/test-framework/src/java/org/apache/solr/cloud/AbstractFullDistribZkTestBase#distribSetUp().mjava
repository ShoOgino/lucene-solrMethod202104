  @Override
  public void distribSetUp() throws Exception {
    super.distribSetUp();
    // ignoreException(".*");
    
    cloudInit = false;
    
    if (sliceCount > 0) {
      System.setProperty("numShards", Integer.toString(sliceCount));
    } else {
      System.clearProperty("numShards");
    }

    if (isSSLMode()) {
      System.clearProperty(URL_SCHEME);
      try (ZkStateReader zkStateReader = new ZkStateReader(zkServer.getZkAddress(),
          AbstractZkTestCase.TIMEOUT, AbstractZkTestCase.TIMEOUT)) {
        try {
          zkStateReader.getZkClient().create(ZkStateReader.CLUSTER_PROPS,
              Utils.toJSON(Collections.singletonMap(URL_SCHEME, "https")),
              CreateMode.PERSISTENT, true);
        } catch (KeeperException.NodeExistsException e) {
          ZkNodeProps props = ZkNodeProps.load(zkStateReader.getZkClient().getData(ZkStateReader.CLUSTER_PROPS,
              null, null, true));
          zkStateReader.getZkClient().setData(ZkStateReader.CLUSTER_PROPS, Utils.toJSON(props.plus(URL_SCHEME, "https")), true);
        }
      }
    }
    if (useTlogReplicas()) {
      log.info("Will use {} replicas unless explicitly asked otherwise", Replica.Type.TLOG);
    } else {
      log.info("Will use {} replicas unless explicitly asked otherwise", Replica.Type.NRT);
    }
  }


  /** Returns a conjunction of a set of child nodes */
  public static QueryTree conjunction(
      List<Function<TermWeightor, QueryTree>> children, TermWeightor weightor) {
    if (children.size() == 0) {
      throw new IllegalArgumentException("Cannot build a conjunction with no children");
    }
    if (children.size() == 1) {
      return children.get(0).apply(weightor);
    }
    List<QueryTree> qt = children.stream().map(f -> f.apply(weightor)).collect(Collectors.toList());
    List<QueryTree> restricted =
        qt.stream().filter(t -> t.weight() > 0).collect(Collectors.toList());
    if (restricted.size() == 0) {
      // all children are ANY, so just return the first one
      return qt.get(0);
    }
    return new ConjunctionQueryTree(qt);
  }


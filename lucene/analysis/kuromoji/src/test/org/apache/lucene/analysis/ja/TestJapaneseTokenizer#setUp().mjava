  @Override
  public void setUp() throws Exception {
    super.setUp();
    analyzer =
        new Analyzer() {
          @Override
          protected TokenStreamComponents createComponents(String fieldName) {
            Tokenizer tokenizer =
                new JapaneseTokenizer(newAttributeFactory(), readDict(), false, false, Mode.SEARCH);
            return new TokenStreamComponents(tokenizer, tokenizer);
          }
        };
    analyzerNormal =
        new Analyzer() {
          @Override
          protected TokenStreamComponents createComponents(String fieldName) {
            Tokenizer tokenizer =
                new JapaneseTokenizer(newAttributeFactory(), readDict(), false, false, Mode.NORMAL);
            return new TokenStreamComponents(tokenizer, tokenizer);
          }
        };
    analyzerNormalNBest =
        new Analyzer() {
          @Override
          protected TokenStreamComponents createComponents(String fieldName) {
            JapaneseTokenizer tokenizer =
                new JapaneseTokenizer(newAttributeFactory(), readDict(), false, false, Mode.NORMAL);
            tokenizer.setNBestCost(2000);
            return new TokenStreamComponents(tokenizer, tokenizer);
          }
        };
    analyzerNoPunct =
        new Analyzer() {
          @Override
          protected TokenStreamComponents createComponents(String fieldName) {
            Tokenizer tokenizer =
                new JapaneseTokenizer(newAttributeFactory(), readDict(), true, false, Mode.SEARCH);
            return new TokenStreamComponents(tokenizer, tokenizer);
          }
        };
    extendedModeAnalyzerNoPunct =
        new Analyzer() {
          @Override
          protected TokenStreamComponents createComponents(String fieldName) {
            Tokenizer tokenizer =
                new JapaneseTokenizer(
                    newAttributeFactory(), readDict(), true, false, Mode.EXTENDED);
            return new TokenStreamComponents(tokenizer, tokenizer);
          }
        };
    analyzerNoCompound =
        new Analyzer() {
          @Override
          protected TokenStreamComponents createComponents(String fieldName) {
            Tokenizer tokenizer =
                new JapaneseTokenizer(newAttributeFactory(), readDict(), false, true, Mode.SEARCH);
            return new TokenStreamComponents(tokenizer, tokenizer);
          }
        };
    extendedModeAnalyzerNoCompound =
        new Analyzer() {
          @Override
          protected TokenStreamComponents createComponents(String fieldName) {
            Tokenizer tokenizer =
                new JapaneseTokenizer(
                    newAttributeFactory(), readDict(), false, true, Mode.EXTENDED);
            return new TokenStreamComponents(tokenizer, tokenizer);
          }
        };
  }


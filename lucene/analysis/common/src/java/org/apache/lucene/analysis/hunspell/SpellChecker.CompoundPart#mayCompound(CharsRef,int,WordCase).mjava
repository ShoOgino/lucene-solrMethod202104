    boolean mayCompound(CharsRef nextStem, int nextPartLength, WordCase originalCase) {
      boolean patternsOk =
          enablingPattern != null
              ? enablingPattern.prohibitsCompounding(tail, length, stem, nextStem)
              : dictionary.checkCompoundPatterns.stream()
                  .noneMatch(p -> p.prohibitsCompounding(tail, length, stem, nextStem));
      if (!patternsOk) {
        return false;
      }

      //noinspection RedundantIfStatement
      if (dictionary.checkCompoundRep
          && isMisspelledSimpleWord(length + nextPartLength, originalCase)) {
        return false;
      }
      return true;
    }


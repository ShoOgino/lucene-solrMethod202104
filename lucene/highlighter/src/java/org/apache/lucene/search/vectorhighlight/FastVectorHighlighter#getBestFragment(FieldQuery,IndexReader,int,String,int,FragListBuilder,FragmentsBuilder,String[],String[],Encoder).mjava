  /**
   * return the best fragment.
   *
   * @param fieldQuery {@link FieldQuery} object
   * @param reader {@link IndexReader} of the index
   * @param docId document id to be highlighted
   * @param fieldName field of the document to be highlighted
   * @param fragCharSize the length (number of chars) of a fragment
   * @param fragListBuilder {@link FragListBuilder} object
   * @param fragmentsBuilder {@link FragmentsBuilder} object
   * @param preTags pre-tags to be used to highlight terms
   * @param postTags post-tags to be used to highlight terms
   * @param encoder an encoder that generates encoded text
   * @return the best fragment (snippet) string
   * @throws IOException If there is a low-level I/O error
   */
  public final String getBestFragment(
      final FieldQuery fieldQuery,
      IndexReader reader,
      int docId,
      String fieldName,
      int fragCharSize,
      FragListBuilder fragListBuilder,
      FragmentsBuilder fragmentsBuilder,
      String[] preTags,
      String[] postTags,
      Encoder encoder)
      throws IOException {
    FieldFragList fieldFragList =
        getFieldFragList(fragListBuilder, fieldQuery, reader, docId, fieldName, fragCharSize);
    return fragmentsBuilder.createFragment(
        reader, docId, fieldName, fieldFragList, preTags, postTags, encoder);
  }


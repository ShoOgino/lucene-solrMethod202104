  private float scoreDoc(List<Scorer> subScorers, int docId) throws IOException {
    double score = 0;
    double boostSum = 0.0;
    for (Scorer scorer : subScorers) {
      if (scorer instanceof IndriScorer) {
        IndriScorer indriScorer = (IndriScorer) scorer;
        int scorerDocId = indriScorer.docID();
        // If the query exists in the document, score the document
        // Otherwise, compute a smoothing score, which acts like an idf
        // for subqueries/terms
        double tempScore = 0;
        if (docId == scorerDocId) {
          tempScore = indriScorer.score();
        } else {
          tempScore = indriScorer.smoothingScore(docId);
        }
        tempScore *= indriScorer.getBoost();
        score += tempScore;
        boostSum += indriScorer.getBoost();
      }
    }
    if (boostSum == 0) {
      return 0;
    } else {
      return (float) (score / boostSum);
    }
  }


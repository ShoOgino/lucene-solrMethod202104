  /** Eliminate colinear/duplicate points from the doubly linked list */
  private static final Node filterPoints(final Node start, Node end) {
    if (start == null) {
      return start;
    }

    if (end == null) {
      end = start;
    }

    Node node = start;
    Node nextNode;
    Node prevNode;
    boolean continueIteration;

    do {
      continueIteration = false;
      nextNode = node.next;
      prevNode = node.previous;
      // we can filter points when:
      // 1. they are the same
      // 2.- each one starts and ends in each other
      // 3.- they are co-linear and both edges have the same value in .isNextEdgeFromPolygon
      if (isVertexEquals(node, nextNode)
          || isVertexEquals(prevNode, nextNode)
          || (prevNode.isNextEdgeFromPolygon == node.isNextEdgeFromPolygon
              && area(
                      prevNode.getX(),
                      prevNode.getY(),
                      node.getX(),
                      node.getY(),
                      nextNode.getX(),
                      nextNode.getY())
                  == 0)) {
        // Remove the node
        removeNode(node, prevNode.isNextEdgeFromPolygon);
        node = end = prevNode;

        if (node == nextNode) {
          break;
        }
        continueIteration = true;
      } else {
        node = nextNode;
      }
    } while (continueIteration || node != end);
    return end;
  }


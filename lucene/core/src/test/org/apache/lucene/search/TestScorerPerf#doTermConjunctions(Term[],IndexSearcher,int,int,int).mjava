  public int doTermConjunctions(
      Term[] terms, IndexSearcher s, int termsInIndex, int maxClauses, int iter)
      throws IOException {
    int ret = 0;

    long nMatches = 0;
    for (int i = 0; i < iter; i++) {
      int nClauses = random().nextInt(maxClauses - 1) + 2; // min 2 clauses
      BooleanQuery.Builder bq = new BooleanQuery.Builder();
      BitSet termflag = new BitSet(termsInIndex);
      for (int j = 0; j < nClauses; j++) {
        int tnum;
        // don't pick same clause twice
        tnum = random().nextInt(termsInIndex);
        if (termflag.get(tnum)) tnum = termflag.nextClearBit(tnum);
        if (tnum < 0 || tnum >= termsInIndex) tnum = termflag.nextClearBit(0);
        termflag.set(tnum);
        Query tq = new TermQuery(terms[tnum]);
        bq.add(tq, BooleanClause.Occur.MUST);
      }

      CountingHitCollector hc = new CountingHitCollector();
      s.search(bq.build(), hc);
      nMatches += hc.getCount();
      ret += hc.getSum();
    }
    if (VERBOSE) System.out.println("Average number of matches=" + (nMatches / iter));

    return ret;
  }


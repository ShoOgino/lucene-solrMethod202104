  public void testDiversity() throws IOException {
    // Some carefully checked test cases with simple 2d vectors on the unit circle:
    MockVectorValues vectors = new MockVectorValues(VectorValues.SearchStrategy.DOT_PRODUCT_HNSW, new float[][]{
      unitVector2d(0.5),
        unitVector2d(0.75),
        unitVector2d(0.2),
        unitVector2d(0.9),
        unitVector2d(0.8),
        unitVector2d(0.77),
    });
    // First add nodes until everybody gets a full neighbor list
    HnswGraphBuilder builder = new HnswGraphBuilder(vectors, 2, 10, random().nextInt());
    // node 0 is added by the builder constructor
    // builder.addGraphNode(vectors.vectorValue(0));
    builder.addGraphNode(vectors.vectorValue(1));
    builder.addGraphNode(vectors.vectorValue(2));
    // now every node has tried to attach every other node as a neighbor, but
    // some were excluded based on diversity check.
    assertNeighbors(builder.hnsw, 0, 1, 2);
    assertNeighbors(builder.hnsw, 1, 0);
    assertNeighbors(builder.hnsw, 2, 0);

    builder.addGraphNode(vectors.vectorValue(3));
    assertNeighbors(builder.hnsw, 0, 1, 2);
    // we added 3 here
    assertNeighbors(builder.hnsw, 1, 0, 3);
    assertNeighbors(builder.hnsw, 2, 0);
    assertNeighbors(builder.hnsw, 3, 1);

    // supplant an existing neighbor
    builder.addGraphNode(vectors.vectorValue(4));
    // 4 is the same distance from 0 that 2 is; we leave the existing node in place
    assertNeighbors(builder.hnsw, 0, 1, 2);
    // 4 is closer to 1 than either existing neighbor (0, 3). 3 fails diversity check with 4, so replace it
    assertNeighbors(builder.hnsw, 1, 0, 4);
    assertNeighbors(builder.hnsw, 2, 0);
    // 1 survives the diversity check
    assertNeighbors(builder.hnsw, 3, 1, 4);
    assertNeighbors(builder.hnsw, 4, 1, 3);

    builder.addGraphNode(vectors.vectorValue(5));
    assertNeighbors(builder.hnsw, 0, 1, 2);
    assertNeighbors(builder.hnsw, 1, 0, 5);
    assertNeighbors(builder.hnsw, 2, 0);
    // even though 5 is closer, 3 is not a neighbor of 5, so no update to *its* neighbors occurs
    assertNeighbors(builder.hnsw, 3, 1, 4);
    assertNeighbors(builder.hnsw, 4, 3, 5);
    assertNeighbors(builder.hnsw, 5, 1, 4);
  }


  /** Create a random instance. */
  public static CompressingCodec randomInstance(
      Random random,
      int chunkSize,
      int maxDocsPerChunk,
      boolean withSegmentSuffix,
      int blockShift) {
    switch (random.nextInt(6)) {
      case 0:
        return new FastCompressingCodec(chunkSize, maxDocsPerChunk, withSegmentSuffix, blockShift);
      case 1:
        return new FastDecompressionCompressingCodec(
            chunkSize, maxDocsPerChunk, withSegmentSuffix, blockShift);
      case 2:
        return new HighCompressionCompressingCodec(
            chunkSize, maxDocsPerChunk, withSegmentSuffix, blockShift);
      case 3:
        return new DummyCompressingCodec(chunkSize, maxDocsPerChunk, withSegmentSuffix, blockShift);
      case 4:
        return new DeflateWithPresetCompressingCodec(
            chunkSize, maxDocsPerChunk, withSegmentSuffix, blockShift);
      case 5:
        return new LZ4WithPresetCompressingCodec(
            chunkSize, maxDocsPerChunk, withSegmentSuffix, blockShift);
      default:
        throw new AssertionError();
    }
  }


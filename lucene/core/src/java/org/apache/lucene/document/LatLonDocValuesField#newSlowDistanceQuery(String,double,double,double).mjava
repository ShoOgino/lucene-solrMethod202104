  /**
   * Create a query for matching points within the specified distance of the supplied location. This
   * query is usually slow as it does not use an index structure and needs to verify documents
   * one-by-one in order to know whether they match. It is best used wrapped in an {@link
   * IndexOrDocValuesQuery} alongside a {@link LatLonPoint#newDistanceQuery}.
   *
   * @param field field name. must not be null.
   * @param latitude latitude at the center: must be within standard +/-90 coordinate bounds.
   * @param longitude longitude at the center: must be within standard +/-180 coordinate bounds.
   * @param radiusMeters maximum distance from the center in meters: must be non-negative and
   *     finite.
   * @return query matching points within this distance
   * @throws IllegalArgumentException if {@code field} is null, location has invalid coordinates, or
   *     radius is invalid.
   */
  public static Query newSlowDistanceQuery(
      String field, double latitude, double longitude, double radiusMeters) {
    Circle circle = new Circle(latitude, longitude, radiusMeters);
    return newSlowGeometryQuery(field, ShapeField.QueryRelation.INTERSECTS, circle);
  }


  @Override
  public Sort getSort() {
    if (StringUtils.isNullOrEmpty((String) fieldCombo1.getSelectedItem())
        && StringUtils.isNullOrEmpty((String) fieldCombo2.getSelectedItem())) {
      return null;
    }

    List<SortField> li = new ArrayList<>();
    if (!StringUtils.isNullOrEmpty((String) fieldCombo1.getSelectedItem())) {
      searchModel
          .getSortType(
              (String) fieldCombo1.getSelectedItem(),
              (String) typeCombo1.getSelectedItem(),
              isReverse(orderCombo1))
          .ifPresent(li::add);
    }
    if (!StringUtils.isNullOrEmpty((String) fieldCombo2.getSelectedItem())) {
      searchModel
          .getSortType(
              (String) fieldCombo2.getSelectedItem(),
              (String) typeCombo2.getSelectedItem(),
              isReverse(orderCombo2))
          .ifPresent(li::add);
    }
    return new Sort(li.toArray(new SortField[0]));
  }


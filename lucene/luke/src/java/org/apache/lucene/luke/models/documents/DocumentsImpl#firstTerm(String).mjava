  @Override
  public Optional<Term> firstTerm(String field) {
    Objects.requireNonNull(field);

    try {
      Terms terms = IndexUtils.getTerms(reader, field);

      if (terms == null) {
        // no such field?
        resetCurrentField();
        resetTermsIterator();
        log.warn("Terms not available for field: {}.", field);
        return Optional.empty();
      } else {
        setCurrentField(field);
        setTermsIterator(terms.iterator());

        if (tenum.next() == null) {
          // no term available for this field
          resetTermsIterator();
          log.warn("No term available for field: {}.", field);
          return Optional.empty();
        } else {
          return Optional.of(new Term(curField, tenum.term()));
        }
      }

    } catch (IOException e) {
      resetTermsIterator();
      throw new LukeException(
          String.format(Locale.ENGLISH, "Terms not available for field: %s.", field), e);
    } finally {
      // discard current postings enum
      resetPostingsIterator();
    }
  }


  /**
   * Adds a document to this index.
   *
   * <p>Note that if an Exception is hit (for example disk full) then the index will be consistent,
   * but this document may not have been added. Furthermore, it's possible the index will have one
   * segment in non-compound format even when using compound files (when a merge has partially
   * succeeded).
   *
   * <p>This method periodically flushes pending documents to the Directory (see <a
   * href="#flush">above</a>), and also periodically triggers segment merges in the index according
   * to the {@link MergePolicy} in use.
   *
   * <p>Merges temporarily consume space in the directory. The amount of space required is up to 1X
   * the size of all segments being merged, when no readers/searchers are open against the index,
   * and up to 2X the size of all segments being merged when readers/searchers are open against the
   * index (see {@link #forceMerge(int)} for details). The sequence of primitive merge operations
   * performed is governed by the merge policy.
   *
   * <p>Note that each term in the document can be no longer than {@link #MAX_TERM_LENGTH} in bytes,
   * otherwise an IllegalArgumentException will be thrown.
   *
   * <p>Note that it's possible to create an invalid Unicode string in java if a UTF16 surrogate
   * pair is malformed. In this case, the invalid characters are silently replaced with the Unicode
   * replacement character U+FFFD.
   *
   * @return The <a href="#sequence_number">sequence number</a> for this operation
   * @throws CorruptIndexException if the index is corrupt
   * @throws IOException if there is a low-level IO error
   */
  public long addDocument(Iterable<? extends IndexableField> doc) throws IOException {
    return updateDocument(null, doc);
  }


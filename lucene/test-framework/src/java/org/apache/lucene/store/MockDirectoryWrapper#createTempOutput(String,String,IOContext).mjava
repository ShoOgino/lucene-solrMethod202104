  @Override
  public synchronized IndexOutput createTempOutput(String prefix, String suffix, IOContext context)
      throws IOException {
    maybeThrowDeterministicException();
    maybeThrowIOExceptionOnOpen("temp: prefix=" + prefix + " suffix=" + suffix);
    maybeYield();
    if (failOnCreateOutput) {
      maybeThrowDeterministicException();
    }
    if (crashed) {
      throw new IOException("cannot createTempOutput after crash");
    }
    init();

    IndexOutput delegateOutput =
        in.createTempOutput(prefix, suffix, LuceneTestCase.newIOContext(randomState, context));
    String name = delegateOutput.getName();
    if (name.toLowerCase(Locale.ROOT).endsWith(".tmp") == false) {
      throw new IllegalStateException(
          "wrapped directory failed to use .tmp extension: got: " + name);
    }

    unSyncedFiles.add(name);
    createdFiles.add(name);
    final IndexOutput io = new MockIndexOutputWrapper(this, delegateOutput, name);
    addFileHandle(io, name, Handle.Output);
    openFilesForWrite.add(name);

    return maybeThrottle(name, io);
  }


  private synchronized void delete(Collection<String> toDelete) throws IOException {
    if (Node.VERBOSE_FILES) {
      node.message("now delete " + toDelete.size() + " files: " + toDelete);
    }

    // First pass: delete any segments_N files.  We do these first to be certain stale commit points
    // are removed
    // before we remove any files they reference, in case we crash right now:
    for (String fileName : toDelete) {
      assert refCounts.containsKey(fileName) == false;
      if (fileName.startsWith(IndexFileNames.SEGMENTS)) {
        delete(fileName);
      }
    }

    // Only delete other files if we were able to remove the segments_N files; this way we never
    // leave a corrupt commit in the index even in the presense of virus checkers:
    for (String fileName : toDelete) {
      assert refCounts.containsKey(fileName) == false;
      if (fileName.startsWith(IndexFileNames.SEGMENTS) == false) {
        delete(fileName);
      }
    }
  }


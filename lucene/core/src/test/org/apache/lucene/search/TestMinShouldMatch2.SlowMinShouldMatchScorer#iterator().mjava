    @Override
    public DocIdSetIterator iterator() {
      return new DocIdSetIterator() {

        @Override
        public int nextDoc() throws IOException {
          assert currentDoc != NO_MORE_DOCS;
          for (currentDoc = currentDoc + 1; currentDoc < maxDoc; currentDoc++) {
            currentMatched = 0;
            score = 0;
            if (currentDoc > dv.docID()) {
              dv.advance(currentDoc);
            }
            if (currentDoc != dv.docID()) {
              continue;
            }
            long ord;
            while ((ord = dv.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {
              if (ords.contains(ord)) {
                currentMatched++;
                score += sims[(int) ord].score(currentDoc, 1);
              }
            }
            if (currentMatched >= minNrShouldMatch) {
              return currentDoc;
            }
          }
          return currentDoc = NO_MORE_DOCS;
        }

        @Override
        public int advance(int target) throws IOException {
          int doc;
          while ((doc = nextDoc()) < target) {}
          return doc;
        }

        @Override
        public long cost() {
          return maxDoc;
        }

        @Override
        public int docID() {
          return currentDoc;
        }
      };
    }


  @Test
  public void testBasicDocumentClassificationScore() throws Exception {
    try {
      Document videoGameDocument = getVideoGameDocument();
      Document batmanDocument = getBatmanDocument();
      KNearestNeighborDocumentClassifier classifier =
          new KNearestNeighborDocumentClassifier(
              indexReader,
              null,
              null,
              1,
              4,
              1,
              categoryFieldName,
              field2analyzer,
              new String[] {textFieldName, titleFieldName, authorFieldName});
      double score1 =
          checkCorrectDocumentClassification(classifier, videoGameDocument, VIDEOGAME_RESULT);
      assertEquals(1.0, score1, 0);
      double score2 = checkCorrectDocumentClassification(classifier, batmanDocument, BATMAN_RESULT);
      assertEquals(1.0, score2, 0);
      // considering only the text we have wrong classification because the text was ambiguos on
      // purpose
      double score3 =
          checkCorrectDocumentClassification(
              new KNearestNeighborDocumentClassifier(
                  indexReader,
                  null,
                  null,
                  1,
                  1,
                  1,
                  categoryFieldName,
                  field2analyzer,
                  new String[] {textFieldName}),
              videoGameDocument,
              BATMAN_RESULT);
      assertEquals(1.0, score3, 0);
      double score4 =
          checkCorrectDocumentClassification(
              new KNearestNeighborDocumentClassifier(
                  indexReader,
                  null,
                  null,
                  1,
                  1,
                  1,
                  categoryFieldName,
                  field2analyzer,
                  new String[] {textFieldName}),
              batmanDocument,
              VIDEOGAME_RESULT);
      assertEquals(1.0, score4, 0);
    } finally {
      if (indexReader != null) {
        indexReader.close();
      }
    }
  }


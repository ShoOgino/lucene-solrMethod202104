  /**
   * This method is used by DocumentsWriter/FlushControl to obtain a DWPT to do an indexing
   * operation (add/updateDocument).
   */
  DocumentsWriterPerThread getAndLock() {
    synchronized (this) {
      ensureOpen();
      // Important that we are LIFO here! This way if number of concurrent indexing threads was once
      // high,
      // but has now reduced, we only use a limited number of DWPTs. This also guarantees that if we
      // have suddenly
      // a single thread indexing
      final Iterator<DocumentsWriterPerThread> descendingIterator = freeList.descendingIterator();
      while (descendingIterator.hasNext()) {
        DocumentsWriterPerThread perThread = descendingIterator.next();
        if (perThread.tryLock()) {
          descendingIterator.remove();
          return perThread;
        }
      }
      // DWPT is already locked before return by this method:
      return newWriter();
    }
  }


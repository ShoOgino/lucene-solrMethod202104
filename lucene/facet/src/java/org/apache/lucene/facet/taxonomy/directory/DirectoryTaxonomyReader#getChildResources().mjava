  @Override
  public synchronized Collection<Accountable> getChildResources() {
    final List<Accountable> resources = new ArrayList<>();
    long ramBytesUsed = 0;
    for (LeafReaderContext ctx : indexReader.leaves()) {
      ramBytesUsed += ((SegmentReader) ctx.reader()).ramBytesUsed();
    }
    resources.add(Accountables.namedAccountable("indexReader", ramBytesUsed));
    if (taxoArrays != null) {
      resources.add(Accountables.namedAccountable("taxoArrays", taxoArrays));
    }

    synchronized (categoryCache) {
      resources.add(
          Accountables.namedAccountable(
              "categoryCache", BYTES_PER_CACHE_ENTRY * categoryCache.size()));
    }

    synchronized (ordinalCache) {
      resources.add(
          Accountables.namedAccountable(
              "ordinalCache", BYTES_PER_CACHE_ENTRY * ordinalCache.size()));
    }

    return Collections.unmodifiableList(resources);
  }


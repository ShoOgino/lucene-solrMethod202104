  public void testOrphans() throws IOException {
    final Directory dir = newDirectory();
    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);

    {
      // Add a first valid block
      List<Document> block = new ArrayList<>();
      final int numChildren = TestUtil.nextInt(random(), 0, 3);
      for (int i = 0; i < numChildren; ++i) {
        block.add(new Document());
      }
      Document parent = new Document();
      parent.add(new StringField("parent", "true", Store.NO));
      block.add(parent);
      w.addDocuments(block);
    }

    {
      // Then a block with no parent
      List<Document> block = new ArrayList<>();
      final int numChildren = TestUtil.nextInt(random(), 1, 3);
      for (int i = 0; i < numChildren; ++i) {
        block.add(new Document());
      }
      w.addDocuments(block);
    }

    final IndexReader reader = w.getReader();
    w.close();
    BitSetProducer parentsFilter =
        new QueryBitSetProducer(new TermQuery(new Term("parent", "true")));
    try {
      expectThrows(IllegalStateException.class, () -> CheckJoinIndex.check(reader, parentsFilter));
    } finally {
      reader.close();
      dir.close();
    }
  }


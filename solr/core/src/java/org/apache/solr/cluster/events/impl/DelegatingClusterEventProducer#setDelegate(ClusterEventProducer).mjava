  public void setDelegate(ClusterEventProducer newDelegate) {
    if (log.isDebugEnabled()) {
      log.debug("--setting new delegate for CC-{}: {}", Integer.toHexString(cc.hashCode()), newDelegate);
    }
    this.delegate = newDelegate;
    // transfer all listeners to the new delegate
    listeners.forEach((type, listenerSet) -> {
      listenerSet.forEach(listener -> {
        try {
          delegate.registerListener(listener, type);
        } catch (Exception e) {
          log.warn("Exception registering listener with the new event producer", e);
          // make sure it's not registered
          delegate.unregisterListener(listener, type);
          // unregister it here, too
          super.unregisterListener(listener, type);
        }
      });
    });
    if ((state == State.RUNNING || state == State.STARTING) &&
        !(delegate.getState() == State.RUNNING || delegate.getState() == State.STARTING)) {
      try {
        delegate.start();
        if (log.isDebugEnabled()) {
          log.debug("--- started delegate {}", delegate);
        }
      } catch (Exception e) {
        log.warn("Unable to start the new delegate {}: {}", delegate.getClass().getName(), e);
      }
    } else {
      if (log.isDebugEnabled()) {
        log.debug("--- delegate {} already in state {}", delegate, delegate.getState());
      }
    }
    this.version++;
  }


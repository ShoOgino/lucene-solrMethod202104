  /**
   * Ensures the ANTLR parser will throw an exception after the first error
   *
   * @param recognizer the parser being used
   * @return no actual return value
   * @throws RecognitionException not used as a ParseException wrapped in a RuntimeException is
   *     thrown instead
   */
  @Override
  public Token recoverInline(Parser recognizer) throws RecognitionException {
    Token token = recognizer.getCurrentToken();
    String message =
        "unexpected token "
            + getTokenErrorDisplay(token)
            + " on line ("
            + token.getLine()
            + ") position ("
            + token.getCharPositionInLine()
            + ")"
            + " was expecting one of "
            + recognizer.getExpectedTokens().toString(recognizer.getVocabulary());
    ParseException parseException = new ParseException(message, token.getStartIndex());
    throw new RuntimeException(parseException);
  }


  public void testPartitions() {

    List<String> terms = Arrays.asList("1", "2", "3", "4", "5", "6", "7", "8", "9", "10");

    List<List<String>> partitions = PartitionMatcher.partition(terms, 2);
    assertTrue(partitions.contains(Arrays.asList("1", "2", "3", "4", "5")));
    assertTrue(partitions.contains(Arrays.asList("6", "7", "8", "9", "10")));

    partitions = PartitionMatcher.partition(terms, 3);
    assertTrue(partitions.contains(Arrays.asList("1", "2", "3")));
    assertTrue(partitions.contains(Arrays.asList("4", "5", "6")));
    assertTrue(partitions.contains(Arrays.asList("7", "8", "9", "10")));

    partitions = PartitionMatcher.partition(terms, 4);
    assertTrue(partitions.contains(Arrays.asList("1", "2")));
    assertTrue(partitions.contains(Arrays.asList("3", "4", "5")));
    assertTrue(partitions.contains(Arrays.asList("6", "7")));
    assertTrue(partitions.contains(Arrays.asList("8", "9", "10")));

    partitions = PartitionMatcher.partition(terms, 6);
    assertTrue(partitions.contains(Collections.singletonList("1")));
    assertTrue(partitions.contains(Arrays.asList("2", "3")));
    assertTrue(partitions.contains(Arrays.asList("4", "5")));
    assertTrue(partitions.contains(Collections.singletonList("6")));
    assertTrue(partitions.contains(Arrays.asList("7", "8")));
    assertTrue(partitions.contains(Arrays.asList("9", "10")));
  }


    private Set<Node> filterNodesByNodeType(Cluster cluster, PlacementRequest request, AttributeValues attributeValues, Set<Node> initialNodes) throws PlacementException {
      Set<String> collNodeTypes = nodeTypes.get(request.getCollection().getName());
      if (collNodeTypes == null) {
        // no filtering by node type
        return initialNodes;
      }
      Set<Node> filteredNodes = initialNodes.stream()
              .filter(n -> {
                Optional<String> nodePropOpt = attributeValues.getSystemProperty(n, AffinityPlacementConfig.NODE_TYPE_SYSPROP);
                if (!nodePropOpt.isPresent()) {
                  return false;
                }
                Set<String> nodeTypes = new HashSet<>(StrUtils.splitSmart(nodePropOpt.get(), ','));
                nodeTypes.retainAll(collNodeTypes);
                return !nodeTypes.isEmpty();
              }).collect(Collectors.toSet());
      if (filteredNodes.isEmpty()) {
        throw new PlacementException("There are no nodes with types: " + collNodeTypes + " expected by collection " + request.getCollection().getName());
      }
      return filteredNodes;
    }


  //  LUCENE-3365: Test adding two documents with the same field from two different IndexWriters
  //  that we attempt to open at the same time.  As long as the first IndexWriter completes
  //  and closes before the second IndexWriter time's out trying to get the Lock,
  //  we should see both documents
  public void testOpenTwoIndexWritersOnDifferentThreads() throws IOException, InterruptedException {
    try (final Directory dir = newDirectory()) {
      CyclicBarrier syncStart = new CyclicBarrier(2);
      DelayedIndexAndCloseRunnable thread1 = new DelayedIndexAndCloseRunnable(dir, syncStart);
      DelayedIndexAndCloseRunnable thread2 = new DelayedIndexAndCloseRunnable(dir, syncStart);
      thread1.start();
      thread2.start();
      thread1.join();
      thread2.join();

      if (thread1.failure instanceof LockObtainFailedException
          || thread2.failure instanceof LockObtainFailedException) {
        // We only care about the situation when the two writers succeeded.
        return;
      }

      assertFalse("Failed due to: " + thread1.failure, thread1.failed);
      assertFalse("Failed due to: " + thread2.failure, thread2.failed);

      // now verify that we have two documents in the index
      IndexReader reader = DirectoryReader.open(dir);
      assertEquals("IndexReader should have one document per thread running", 2, reader.numDocs());

      reader.close();
    }
  }


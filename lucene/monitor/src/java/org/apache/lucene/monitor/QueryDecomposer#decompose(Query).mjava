  /**
   * Split a query up into individual parts that can be indexed and run separately
   *
   * @param q the query
   * @return a collection of subqueries
   */
  public Set<Query> decompose(Query q) {

    if (q instanceof BooleanQuery) return decomposeBoolean((BooleanQuery) q);

    if (q instanceof DisjunctionMaxQuery) {
      Set<Query> subqueries = new HashSet<>();
      for (Query subq : ((DisjunctionMaxQuery) q).getDisjuncts()) {
        subqueries.addAll(decompose(subq));
      }
      return subqueries;
    }

    if (q instanceof BoostQuery) {
      return decomposeBoostQuery((BoostQuery) q);
    }

    return Collections.singleton(q);
  }


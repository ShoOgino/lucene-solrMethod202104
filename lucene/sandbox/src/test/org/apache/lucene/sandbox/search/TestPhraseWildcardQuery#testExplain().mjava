  public void testExplain() throws IOException {
    Query testQuery = phraseWildcardQuery(field(0), 100, 0, true, "t?e", "b*", "b*");

    // Verify the standard way to get the query explanation.
    for (ScoreDoc scoreDoc : searcher.search(testQuery, MAX_DOCS).scoreDocs) {
      Explanation explanation = searcher.explain(testQuery, scoreDoc.doc);
      assertTrue(explanation.getValue().doubleValue() > 0);
      assertTrue("Unexpected explanation \"" + explanation.getDescription() + "\"",
          explanation.getDescription().startsWith("weight(phraseWildcard(title:\"t?e b* b*\")"));
    }

    // Verify that if we call PhraseWildcardQuery.PhraseWildcardWeight.scorer() twice,
    // the scoring is correct (even if it is not the standard path expected by the scorer() method).
    int resultCount = 0;
    Weight weight = testQuery.createWeight(searcher, ScoreMode.TOP_SCORES, 1);
    for (LeafReaderContext leafReaderContext : searcher.getIndexReader().leaves()) {
      Scorer scorer = weight.scorer(leafReaderContext);
      if (scorer != null) {
        DocIdSetIterator iterator = scorer.iterator();
        while (iterator.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {
          resultCount++;
        }
      }
    }
    assertEquals(1, resultCount);

    int explanationWithNonNullScoreCount = 0;
    for (LeafReaderContext leafReaderContext : searcher.getIndexReader().leaves()) {
      Explanation explanation = weight.explain(leafReaderContext, 1);
      if (explanation.getValue().doubleValue() > 0) {
        explanationWithNonNullScoreCount++;
      }
    }
    assertEquals(1, explanationWithNonNullScoreCount);
  }


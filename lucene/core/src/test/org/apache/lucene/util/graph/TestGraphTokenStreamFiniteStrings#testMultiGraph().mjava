  public void testMultiGraph() throws Exception {
    TokenStream ts =
        new CannedTokenStream(
            token("turbo", 1, 1),
            token("fast", 0, 2),
            token("charged", 1, 1),
            token("wi", 1, 1),
            token("wifi", 0, 2),
            token("fi", 1, 1),
            token("network", 1, 1));

    GraphTokenStreamFiniteStrings graph = new GraphTokenStreamFiniteStrings(ts);

    Iterator<TokenStream> it = graph.getFiniteStrings();
    assertTrue(it.hasNext());
    assertTokenStream(
        it.next(),
        new String[] {"turbo", "charged", "wi", "fi", "network"},
        new int[] {1, 1, 1, 1, 1});
    assertTrue(it.hasNext());
    assertTokenStream(
        it.next(), new String[] {"turbo", "charged", "wifi", "network"}, new int[] {1, 1, 1, 1});
    assertTrue(it.hasNext());
    assertTokenStream(
        it.next(), new String[] {"fast", "wi", "fi", "network"}, new int[] {1, 1, 1, 1});
    assertTrue(it.hasNext());
    assertTokenStream(it.next(), new String[] {"fast", "wifi", "network"}, new int[] {1, 1, 1});
    assertFalse(it.hasNext());

    int[] points = graph.articulationPoints();
    assertArrayEquals(points, new int[] {2, 4});

    assertTrue(graph.hasSidePath(0));
    it = graph.getFiniteStrings(0, 2);
    assertTrue(it.hasNext());
    assertTokenStream(it.next(), new String[] {"turbo", "charged"}, new int[] {1, 1});
    assertTrue(it.hasNext());
    assertTokenStream(it.next(), new String[] {"fast"}, new int[] {1});
    assertFalse(it.hasNext());

    assertTrue(graph.hasSidePath(2));
    it = graph.getFiniteStrings(2, 4);
    assertTrue(it.hasNext());
    assertTokenStream(it.next(), new String[] {"wi", "fi"}, new int[] {1, 1});
    assertTrue(it.hasNext());
    assertTokenStream(it.next(), new String[] {"wifi"}, new int[] {1});
    assertFalse(it.hasNext());

    assertFalse(graph.hasSidePath(4));
    it = graph.getFiniteStrings(4, -1);
    assertTrue(it.hasNext());
    assertTokenStream(it.next(), new String[] {"network"}, new int[] {1});
    assertFalse(it.hasNext());
    Term[] terms = graph.getTerms("field", 4);
    assertArrayEquals(terms, new Term[] {new Term("field", "network")});
  }


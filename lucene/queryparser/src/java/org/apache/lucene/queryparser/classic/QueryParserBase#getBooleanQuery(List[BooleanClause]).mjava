  /**
   * Factory method for generating query, given a set of clauses. By default creates a boolean query
   * composed of clauses passed in.
   *
   * <p>Can be overridden by extending classes, to modify query being returned.
   *
   * @param clauses List that contains {@link org.apache.lucene.search.BooleanClause} instances to
   *     join.
   * @return Resulting {@link org.apache.lucene.search.Query} object.
   * @exception org.apache.lucene.queryparser.classic.ParseException throw in overridden method to
   *     disallow
   */
  protected Query getBooleanQuery(List<BooleanClause> clauses) throws ParseException {
    if (clauses.size() == 0) {
      return null; // all clause words were filtered away by the analyzer.
    }
    BooleanQuery.Builder query = newBooleanQuery();
    for (final BooleanClause clause : clauses) {
      query.add(clause);
    }
    return query.build();
  }


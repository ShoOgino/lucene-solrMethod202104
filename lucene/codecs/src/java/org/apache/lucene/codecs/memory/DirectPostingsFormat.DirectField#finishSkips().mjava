    private void finishSkips() {
      assert count == terms.length;
      int lastTermOffset = termOffsets[count - 1];
      int lastTermLength = termOffsets[count] - lastTermOffset;

      for (int i = 0; i < lastTermLength; i++) {
        if (sameCounts[i] >= minSkipCount) {
          // Go back and add a skip pointer:
          saveSkip(count, sameCounts[i]);
        }
      }

      // Reverse the skip pointers so they are "nested":
      for (int termID = 0; termID < terms.length; termID++) {
        TermAndSkip term = terms[termID];
        if (term.skips != null && term.skips.length > 1) {
          for (int pos = 0; pos < term.skips.length / 2; pos++) {
            final int otherPos = term.skips.length - pos - 1;

            final int temp = term.skips[pos];
            term.skips[pos] = term.skips[otherPos];
            term.skips[otherPos] = temp;
          }
        }
      }
    }


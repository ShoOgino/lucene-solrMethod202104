        private void buildLogicalGraph(BackupRepository repository, URI backupPath) throws IOException {
            List<BackupId> backupIds = BackupFilePaths.findAllBackupIdsFromFileListing(repository.listAllOrEmpty(backupPath));
            for (BackupId backupId : backupIds) {
                BackupProperties backupProps = BackupProperties.readFrom(repository, backupPath,
                        BackupFilePaths.getBackupPropsName(backupId));

                Node backupIdNode = getBackupIdNode(BackupFilePaths.getBackupPropsName(backupId));
                for (String shardBackupMetadataFilename : backupProps.getAllShardBackupMetadataFiles()) {
                    Node shardBackupMetadataNode = getShardBackupIdNode(shardBackupMetadataFilename);
                    addEdge(backupIdNode, shardBackupMetadataNode);

                    ShardBackupMetadata shardBackupMetadata = ShardBackupMetadata.from(repository, backupPath,
                            ShardBackupId.fromShardMetadataFilename(shardBackupMetadataFilename));
                    if (shardBackupMetadata == null)
                        continue;

                    for (String indexFile : shardBackupMetadata.listUniqueFileNames()) {
                        Node indexFileNode = getIndexFileNode(indexFile);
                        addEdge(indexFileNode, shardBackupMetadataNode);
                    }
                }
            }
        }


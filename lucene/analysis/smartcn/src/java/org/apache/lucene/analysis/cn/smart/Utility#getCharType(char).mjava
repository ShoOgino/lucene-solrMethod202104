  /**
   * Return the internal {@link CharType} constant of a given character.
   *
   * @param ch input character
   * @return constant from {@link CharType} describing the character type.
   * @see CharType
   */
  public static int getCharType(char ch) {
    if (isSurrogate(ch)) return CharType.SURROGATE;
    // Most (but not all!) of these are Han Ideographic Characters
    if (ch >= 0x4E00 && ch <= 0x9FA5) return CharType.HANZI;
    if ((ch >= 0x0041 && ch <= 0x005A) || (ch >= 0x0061 && ch <= 0x007A)) return CharType.LETTER;
    if (ch >= 0x0030 && ch <= 0x0039) return CharType.DIGIT;
    if (ch == ' ' || ch == '\t' || ch == '\r' || ch == '\n' || ch == 'ã€€')
      return CharType.SPACE_LIKE;
    // Punctuation Marks
    if ((ch >= 0x0021 && ch <= 0x00BB)
        || (ch >= 0x2010 && ch <= 0x2642)
        || (ch >= 0x3001 && ch <= 0x301E)) return CharType.DELIMITER;

    // Full-Width range
    if ((ch >= 0xFF21 && ch <= 0xFF3A) || (ch >= 0xFF41 && ch <= 0xFF5A))
      return CharType.FULLWIDTH_LETTER;
    if (ch >= 0xFF10 && ch <= 0xFF19) return CharType.FULLWIDTH_DIGIT;
    if (ch >= 0xFE30 && ch <= 0xFF63) return CharType.DELIMITER;
    return CharType.OTHER;
  }


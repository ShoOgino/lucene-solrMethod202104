        @Command(name = V2_CREATE_ALIAS_CMD)
        @SuppressWarnings("unchecked")
        public void createAlias(PayloadObj<CreateAliasPayload> obj) throws Exception {
            final CreateAliasPayload v2Body = obj.get();
            final Map<String, Object> v1Params = v2Body.toMap(new HashMap<>());

            v1Params.put(ACTION, CollectionAction.CREATEALIAS.toLower());
            if (! CollectionUtils.isEmpty(v2Body.collections)) {
                final String collectionsStr = String.join(",", v2Body.collections);
                v1Params.remove(V2ApiConstants.COLLECTIONS);
                v1Params.put(V2ApiConstants.COLLECTIONS, collectionsStr);
            }
            if (v2Body.router != null) {
                Map<String, Object> routerProperties = (Map<String, Object>) v1Params.remove(V2ApiConstants.ROUTER_KEY);
                flattenMapWithPrefix(routerProperties, v1Params, ROUTER_PREFIX);
            }
            if (v2Body.createCollectionParams != null && !v2Body.createCollectionParams.isEmpty()) {
                final Map<String, Object> createCollectionMap = (Map<String, Object>) v1Params.remove(V2ApiConstants.CREATE_COLLECTION_KEY);
                convertV2CreateCollectionMapToV1ParamMap(createCollectionMap);
                flattenMapWithPrefix(createCollectionMap, v1Params, CREATE_COLLECTION_PREFIX);
            }

            collectionsHandler.handleRequestBody(wrapParams(obj.getRequest(), v1Params), obj.getResponse());
        }


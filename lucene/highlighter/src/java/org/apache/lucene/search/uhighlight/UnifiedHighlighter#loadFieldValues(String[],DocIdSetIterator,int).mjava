  /**
   * Loads the String values for each docId by field to be highlighted. By default this loads from
   * stored fields by the same name as given, but a subclass can change the source. The returned
   * Strings must be identical to what was indexed (at least for postings or term-vectors offset
   * sources). This method must load fields for at least one document from the given {@link
   * DocIdSetIterator} but need not return all of them; by default the character lengths are summed
   * and this method will return early when {@code cacheCharsThreshold} is exceeded. Specifically if
   * that number is 0, then only one document is fetched no matter what. Values in the array of
   * {@link CharSequence} will be null if no value was found.
   */
  protected List<CharSequence[]> loadFieldValues(
      String[] fields, DocIdSetIterator docIter, int cacheCharsThreshold) throws IOException {
    List<CharSequence[]> docListOfFields =
        new ArrayList<>(cacheCharsThreshold == 0 ? 1 : (int) Math.min(64, docIter.cost()));

    LimitedStoredFieldVisitor visitor = newLimitedStoredFieldsVisitor(fields);
    int sumChars = 0;
    do {
      int docId = docIter.nextDoc();
      if (docId == DocIdSetIterator.NO_MORE_DOCS) {
        break;
      }
      visitor.init();
      searcher.doc(docId, visitor);
      CharSequence[] valuesByField = visitor.getValuesByField();
      docListOfFields.add(valuesByField);
      for (CharSequence val : valuesByField) {
        sumChars += (val == null ? 0 : val.length());
      }
    } while (sumChars <= cacheCharsThreshold && cacheCharsThreshold != 0);
    return docListOfFields;
  }


  public void testGraphAndGapSameTokenTerm() throws Exception {
    TokenStream ts =
        new CannedTokenStream(
            token("a", 1, 1),
            token("b", 1, 1),
            token("c", 2, 1),
            token("a", 0, 2),
            token("d", 1, 1));

    GraphTokenStreamFiniteStrings graph = new GraphTokenStreamFiniteStrings(ts);

    Iterator<TokenStream> it = graph.getFiniteStrings();
    assertTrue(it.hasNext());
    assertTokenStream(it.next(), new String[] {"a", "b", "c", "d"}, new int[] {1, 1, 2, 1});
    assertTrue(it.hasNext());
    assertTokenStream(it.next(), new String[] {"a", "b", "a"}, new int[] {1, 1, 2});
    assertFalse(it.hasNext());

    int[] points = graph.articulationPoints();
    assertArrayEquals(points, new int[] {1, 2});

    assertFalse(graph.hasSidePath(0));
    it = graph.getFiniteStrings(0, 1);
    assertTrue(it.hasNext());
    assertTokenStream(it.next(), new String[] {"a"}, new int[] {1});
    assertFalse(it.hasNext());
    Term[] terms = graph.getTerms("field", 0);
    assertArrayEquals(terms, new Term[] {new Term("field", "a")});

    assertFalse(graph.hasSidePath(1));
    it = graph.getFiniteStrings(1, 2);
    assertTrue(it.hasNext());
    assertTokenStream(it.next(), new String[] {"b"}, new int[] {1});
    assertFalse(it.hasNext());
    terms = graph.getTerms("field", 1);
    assertArrayEquals(terms, new Term[] {new Term("field", "b")});

    assertTrue(graph.hasSidePath(2));
    it = graph.getFiniteStrings(2, -1);
    assertTrue(it.hasNext());
    assertTokenStream(it.next(), new String[] {"c", "d"}, new int[] {2, 1});
    assertTrue(it.hasNext());
    assertTokenStream(it.next(), new String[] {"a"}, new int[] {2});
    assertFalse(it.hasNext());
  }


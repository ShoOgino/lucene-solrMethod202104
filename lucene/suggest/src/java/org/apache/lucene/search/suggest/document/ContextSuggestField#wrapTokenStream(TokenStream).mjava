  @Override
  protected CompletionTokenStream wrapTokenStream(TokenStream stream) {
    final Iterable<CharSequence> contexts = contexts();
    for (CharSequence context : contexts) {
      validate(context);
    }
    CompletionTokenStream completionTokenStream;
    if (stream instanceof CompletionTokenStream) {
      // TODO this is awkward; is there a better way avoiding re-creating the chain?
      completionTokenStream = (CompletionTokenStream) stream;
      PrefixTokenFilter prefixTokenFilter =
          new PrefixTokenFilter(
              completionTokenStream.inputTokenStream, (char) CONTEXT_SEPARATOR, contexts);
      completionTokenStream =
          new CompletionTokenStream(
              prefixTokenFilter,
              completionTokenStream.preserveSep,
              completionTokenStream.preservePositionIncrements,
              completionTokenStream.maxGraphExpansions);
    } else {
      completionTokenStream =
          new CompletionTokenStream(
              new PrefixTokenFilter(stream, (char) CONTEXT_SEPARATOR, contexts));
    }
    return completionTokenStream;
  }


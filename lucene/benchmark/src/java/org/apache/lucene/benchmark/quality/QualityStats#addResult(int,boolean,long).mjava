  /**
   * Add a (possibly relevant) doc.
   *
   * @param n rank of the added doc (its ordinal position within the query results).
   * @param isRelevant true if the added doc is relevant, false otherwise.
   */
  public void addResult(int n, boolean isRelevant, long docNameExtractTime) {
    if (Math.abs(numPoints + 1 - n) > 1E-6) {
      throw new IllegalArgumentException("point " + n + " illegal after " + numPoints + " points!");
    }
    if (isRelevant) {
      numGoodPoints += 1;
      recallPoints.add(new RecallPoint(n, numGoodPoints));
      if (recallPoints.size() == 1 && n <= 5) { // first point, but only within 5 top scores.
        mrr = 1.0 / n;
      }
    }
    numPoints = n;
    double p = numGoodPoints / numPoints;
    if (isRelevant) {
      pReleventSum += p;
    }
    if (n < pAt.length) {
      pAt[n] = p;
    }
    recall = maxGoodPoints <= 0 ? p : numGoodPoints / maxGoodPoints;
    docNamesExtractTime += docNameExtractTime;
  }


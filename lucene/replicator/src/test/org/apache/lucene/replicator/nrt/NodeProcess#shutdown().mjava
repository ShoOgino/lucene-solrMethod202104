  public synchronized boolean shutdown() {
    lock.lock();
    try {
      // System.out.println("PARENT: now shutdown node=" + id + " isOpen=" + isOpen);
      if (isOpen) {
        // Ask the child process to shutdown gracefully:
        isOpen = false;
        // System.out.println("PARENT: send CMD_CLOSE to node=" + id);
        try (Connection c = new Connection(tcpPort)) {
          c.out.writeByte(SimplePrimaryNode.CMD_CLOSE);
          c.flush();
          if (c.in.readByte() != 1) {
            throw new RuntimeException("shutdown failed");
          }
        } catch (Throwable t) {
          System.out.println("top: shutdown failed; ignoring");
          t.printStackTrace(System.out);
        }
        try {
          p.waitFor();
          pumper.join();
        } catch (InterruptedException ie) {
          Thread.currentThread().interrupt();
          throw new RuntimeException(ie);
        }
      }

      return true;
    } finally {
      lock.unlock();
    }
  }


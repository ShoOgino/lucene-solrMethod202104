  private StandardDirectoryReader maybeReopenMergedNRTReader(
      Map<String, SegmentReader> mergedReaders,
      Map<String, SegmentReader> openedReadOnlyClones,
      SegmentInfos openingSegmentInfos,
      boolean applyAllDeletes,
      boolean writeAllDeletes)
      throws IOException {
    assert Thread.holdsLock(this);
    if (mergedReaders.isEmpty() == false) {
      Collection<String> files = new ArrayList<>();
      try {
        return StandardDirectoryReader.open(
            this,
            sci -> {
              // as soon as we remove the reader and return it the StandardDirectoryReader#open
              // will take care of closing it. We only need to handle the readers that remain in the
              // mergedReaders map and close them.
              SegmentReader remove = mergedReaders.remove(sci.info.name);
              if (remove == null) {
                remove = openedReadOnlyClones.remove(sci.info.name);
                assert remove != null;
                // each of the readers we reuse from the previous reader needs to be incRef'd
                // since we reuse them but don't have an implicit incRef in the SDR:open call
                remove.incRef();
              } else {
                files.addAll(remove.getSegmentInfo().files());
              }
              return remove;
            },
            openingSegmentInfos,
            applyAllDeletes,
            writeAllDeletes);
      } finally {
        // now the SDR#open call has incRef'd the files so we can let them go
        deleter.decRef(files);
      }
    }
    return null;
  }


  /**
   * Creates a CapitalizationFilter with the specified parameters.
   *
   * @param in input tokenstream
   * @param onlyFirstWord should each word be capitalized or all of the words?
   * @param keep a keep word list. Each word that should be kept separated by whitespace.
   * @param forceFirstLetter Force the first letter to be capitalized even if it is in the keep
   *     list.
   * @param okPrefix do not change word capitalization if a word begins with something in this list.
   * @param minWordLength how long the word needs to be to get capitalization applied. If the
   *     minWordLength is 3, "and" &gt; "And" but "or" stays "or".
   * @param maxWordCount if the token contains more then maxWordCount words, the capitalization is
   *     assumed to be correct.
   * @param maxTokenLength ???
   */
  public CapitalizationFilter(
      TokenStream in,
      boolean onlyFirstWord,
      CharArraySet keep,
      boolean forceFirstLetter,
      Collection<char[]> okPrefix,
      int minWordLength,
      int maxWordCount,
      int maxTokenLength) {
    super(in);
    this.onlyFirstWord = onlyFirstWord;
    this.keep = keep;
    this.forceFirstLetter = forceFirstLetter;
    this.okPrefix = okPrefix;
    if (minWordLength < 0) {
      throw new IllegalArgumentException("minWordLength must be greater than or equal to zero");
    }
    if (maxWordCount < 1) {
      throw new IllegalArgumentException("maxWordCount must be greater than zero");
    }
    if (maxTokenLength < 1) {
      throw new IllegalArgumentException("maxTokenLength must be greater than zero");
    }
    this.minWordLength = minWordLength;
    this.maxWordCount = maxWordCount;
    this.maxTokenLength = maxTokenLength;
  }


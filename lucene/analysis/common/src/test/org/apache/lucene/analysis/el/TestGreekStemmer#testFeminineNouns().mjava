  public void testFeminineNouns() throws Exception {
    // -α/-ες,-ών
    checkOneTerm(a, "φορά", "φορ");
    checkOneTerm(a, "φοράς", "φορ");
    checkOneTerm(a, "φορές", "φορ");
    checkOneTerm(a, "φορών", "φορ");

    // -α/-ες,-ων
    checkOneTerm(a, "αγελάδα", "αγελαδ");
    checkOneTerm(a, "αγελάδας", "αγελαδ");
    checkOneTerm(a, "αγελάδες", "αγελαδ");
    checkOneTerm(a, "αγελάδων", "αγελαδ");

    // -η/-ες
    checkOneTerm(a, "ζάχαρη", "ζαχαρ");
    checkOneTerm(a, "ζάχαρης", "ζαχαρ");
    checkOneTerm(a, "ζάχαρες", "ζαχαρ");
    checkOneTerm(a, "ζαχάρεων", "ζαχαρ");

    // -η/-εις
    checkOneTerm(a, "τηλεόραση", "τηλεορασ");
    checkOneTerm(a, "τηλεόρασης", "τηλεορασ");
    checkOneTerm(a, "τηλεοράσεις", "τηλεορασ");
    checkOneTerm(a, "τηλεοράσεων", "τηλεορασ");

    // -α/-αδες
    checkOneTerm(a, "μαμά", "μαμ");
    checkOneTerm(a, "μαμάς", "μαμ");
    checkOneTerm(a, "μαμάδες", "μαμ");
    checkOneTerm(a, "μαμάδων", "μαμ");

    // -ος
    checkOneTerm(a, "λεωφόρος", "λεωφορ");
    checkOneTerm(a, "λεωφόρου", "λεωφορ");
    checkOneTerm(a, "λεωφόρο", "λεωφορ");
    checkOneTerm(a, "λεωφόρε", "λεωφορ");
    checkOneTerm(a, "λεωφόροι", "λεωφορ");
    checkOneTerm(a, "λεωφόρων", "λεωφορ");
    checkOneTerm(a, "λεωφόρους", "λεωφορ");

    // -ου
    checkOneTerm(a, "αλεπού", "αλεπ");
    checkOneTerm(a, "αλεπούς", "αλεπ");
    checkOneTerm(a, "αλεπούδες", "αλεπ");
    checkOneTerm(a, "αλεπούδων", "αλεπ");

    // -έας/είς
    // note: not all forms conflate
    checkOneTerm(a, "γραμματέας", "γραμματε");
    checkOneTerm(a, "γραμματέως", "γραμματ");
    checkOneTerm(a, "γραμματέα", "γραμματε");
    checkOneTerm(a, "γραμματείς", "γραμματ");
    checkOneTerm(a, "γραμματέων", "γραμματ");
  }


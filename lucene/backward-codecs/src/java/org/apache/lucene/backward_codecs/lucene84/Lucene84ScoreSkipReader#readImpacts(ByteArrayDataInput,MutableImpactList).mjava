  static MutableImpactList readImpacts(ByteArrayDataInput in, MutableImpactList reuse) {
    int maxNumImpacts = in.length(); // at most one impact per byte
    if (reuse.impacts.length < maxNumImpacts) {
      int oldLength = reuse.impacts.length;
      reuse.impacts = ArrayUtil.grow(reuse.impacts, maxNumImpacts);
      for (int i = oldLength; i < reuse.impacts.length; ++i) {
        reuse.impacts[i] = new Impact(Integer.MAX_VALUE, 1L);
      }
    }

    int freq = 0;
    long norm = 0;
    int length = 0;
    while (in.getPosition() < in.length()) {
      int freqDelta = in.readVInt();
      if ((freqDelta & 0x01) != 0) {
        freq += 1 + (freqDelta >>> 1);
        try {
          norm += 1 + in.readZLong();
        } catch (IOException e) {
          throw new RuntimeException(e); // cannot happen on a BADI
        }
      } else {
        freq += 1 + (freqDelta >>> 1);
        norm++;
      }
      Impact impact = reuse.impacts[length];
      impact.freq = freq;
      impact.norm = norm;
      length++;
    }
    reuse.length = length;
    return reuse;
  }


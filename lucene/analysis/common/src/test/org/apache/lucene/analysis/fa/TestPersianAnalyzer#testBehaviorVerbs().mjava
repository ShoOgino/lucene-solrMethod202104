  /**
   * This test shows how the combination of tokenization (breaking on zero-width non-joiner),
   * normalization (such as treating arabic YEH and farsi YEH the same), and stopwords creates a
   * light-stemming effect for verbs.
   *
   * <p>These verb forms are from http://en.wikipedia.org/wiki/Persian_grammar
   */
  public void testBehaviorVerbs() throws Exception {
    Analyzer a = new PersianAnalyzer();
    // active present indicative
    assertAnalyzesTo(a, "می‌خورد", new String[] {"خورد"});
    // active preterite indicative
    assertAnalyzesTo(a, "خورد", new String[] {"خورد"});
    // active imperfective preterite indicative
    assertAnalyzesTo(a, "می‌خورد", new String[] {"خورد"});
    // active future indicative
    assertAnalyzesTo(a, "خواهد خورد", new String[] {"خورد"});
    // active present progressive indicative
    assertAnalyzesTo(a, "دارد می‌خورد", new String[] {"خورد"});
    // active preterite progressive indicative
    assertAnalyzesTo(a, "داشت می‌خورد", new String[] {"خورد"});

    // active perfect indicative
    assertAnalyzesTo(a, "خورده‌است", new String[] {"خورده"});
    // active imperfective perfect indicative
    assertAnalyzesTo(a, "می‌خورده‌است", new String[] {"خورده"});
    // active pluperfect indicative
    assertAnalyzesTo(a, "خورده بود", new String[] {"خورده"});
    // active imperfective pluperfect indicative
    assertAnalyzesTo(a, "می‌خورده بود", new String[] {"خورده"});
    // active preterite subjunctive
    assertAnalyzesTo(a, "خورده باشد", new String[] {"خورده"});
    // active imperfective preterite subjunctive
    assertAnalyzesTo(a, "می‌خورده باشد", new String[] {"خورده"});
    // active pluperfect subjunctive
    assertAnalyzesTo(a, "خورده بوده باشد", new String[] {"خورده"});
    // active imperfective pluperfect subjunctive
    assertAnalyzesTo(a, "می‌خورده بوده باشد", new String[] {"خورده"});
    // passive present indicative
    assertAnalyzesTo(a, "خورده می‌شود", new String[] {"خورده"});
    // passive preterite indicative
    assertAnalyzesTo(a, "خورده شد", new String[] {"خورده"});
    // passive imperfective preterite indicative
    assertAnalyzesTo(a, "خورده می‌شد", new String[] {"خورده"});
    // passive perfect indicative
    assertAnalyzesTo(a, "خورده شده‌است", new String[] {"خورده"});
    // passive imperfective perfect indicative
    assertAnalyzesTo(a, "خورده می‌شده‌است", new String[] {"خورده"});
    // passive pluperfect indicative
    assertAnalyzesTo(a, "خورده شده بود", new String[] {"خورده"});
    // passive imperfective pluperfect indicative
    assertAnalyzesTo(a, "خورده می‌شده بود", new String[] {"خورده"});
    // passive future indicative
    assertAnalyzesTo(a, "خورده خواهد شد", new String[] {"خورده"});
    // passive present progressive indicative
    assertAnalyzesTo(a, "دارد خورده می‌شود", new String[] {"خورده"});
    // passive preterite progressive indicative
    assertAnalyzesTo(a, "داشت خورده می‌شد", new String[] {"خورده"});
    // passive present subjunctive
    assertAnalyzesTo(a, "خورده شود", new String[] {"خورده"});
    // passive preterite subjunctive
    assertAnalyzesTo(a, "خورده شده باشد", new String[] {"خورده"});
    // passive imperfective preterite subjunctive
    assertAnalyzesTo(a, "خورده می‌شده باشد", new String[] {"خورده"});
    // passive pluperfect subjunctive
    assertAnalyzesTo(a, "خورده شده بوده باشد", new String[] {"خورده"});
    // passive imperfective pluperfect subjunctive
    assertAnalyzesTo(a, "خورده می‌شده بوده باشد", new String[] {"خورده"});

    // active present subjunctive
    assertAnalyzesTo(a, "بخورد", new String[] {"بخورد"});
    a.close();
  }


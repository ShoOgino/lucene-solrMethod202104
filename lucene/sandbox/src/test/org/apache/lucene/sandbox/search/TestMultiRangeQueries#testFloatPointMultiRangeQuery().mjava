  public void testFloatPointMultiRangeQuery() throws IOException {
    Directory dir = newDirectory();
    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);
    float[] firstPoint = {112.4f, 296.3f, 512.1f};
    float[] secondPoint = {219.7f, 514.2f, 624.6f};

    Document doc = new Document();
    doc.add(new FloatPoint("point", firstPoint));
    iw.addDocument(doc);
    iw.commit();

    doc = new Document();
    doc.add(new FloatPoint("point", secondPoint));
    iw.addDocument(doc);
    iw.commit();

    // One range matches
    float[] firstLowerRange= {111.3f, 294.7f, 502.1f};
    float[] firstUpperRange = {117.2f, 301.6f, 514.3f};

    float[] secondLowerRange = {15.2f, 4.3f, 415.2f};
    float[] secondUpperRange = {200.6f, 402.3f, 583.8f};

    FloatPointMultiRangeBuilder builder = new FloatPointMultiRangeBuilder("point", 3);

    builder.add(firstLowerRange, firstUpperRange);
    builder.add(secondLowerRange, secondUpperRange);

    Query query = builder.build();

    IndexReader reader = iw.getReader();
    final IndexSearcher searcher = newSearcher(reader);
    iw.close();

    assertEquals(searcher.count(query), 1);

    // Both ranges match
    float[] firstMatchingLowerRange= {111f, 294f, 502f};
    float[] firstMatchingUpperRange = {117f, 301f, 514f};

    float[] secondMatchingLowerRange = {212f, 512f, 415f};
    float[] secondMatchingUpperRange = {228f, 538f, 647f};

    FloatPointMultiRangeBuilder builder2 = new FloatPointMultiRangeBuilder("point", 3);

    builder2.add(firstMatchingLowerRange, firstMatchingUpperRange);
    builder2.add(secondMatchingLowerRange, secondMatchingUpperRange);

    query = builder2.build();

    assertEquals(searcher.count(query), 2);

    // None Match
    float[] nonMatchingFirstRangeLower = {1.4f, 3.3f, 2.7f};
    float[] nonMatchingFirstRangeUpper = {5.4f, 8.2f, 7.3f};

    float[] nonMatchingSecondRangeLower = {11246.2f, 19388.6f, 21248.3f};
    float[] nonMatchingSecondRangeUpper = {13242.4f, 20214.7f, 23236.3f};
    FloatPointMultiRangeBuilder builder3 = new FloatPointMultiRangeBuilder("point", 3);

    builder3.add(nonMatchingFirstRangeLower, nonMatchingFirstRangeUpper);
    builder3.add(nonMatchingSecondRangeLower, nonMatchingSecondRangeUpper);

    query = builder3.build();

    assertEquals(searcher.count(query), 0);

    // Lower point is equal to a point
    float[] firstEqualsLowerPoint= {112.4f, 296.3f, 512.1f};
    float[] firstEqualsUpperPoint = {117.3f, 299.4f, 519.3f};

    float[] secondEqualsLowerPoint = {219.7f, 514.2f, 624.6f};
    float[] secondEqualsUpperPoint = {13242.4f, 20214.7f, 23236.3f};

    FloatPointMultiRangeBuilder builder4 = new FloatPointMultiRangeBuilder("point", 3);

    builder4.add(firstEqualsLowerPoint, firstEqualsUpperPoint);
    builder4.add(secondEqualsLowerPoint, secondEqualsUpperPoint);

    query = builder4.build();

    assertEquals(searcher.count(query), 2);

    reader.close();
    dir.close();
  }


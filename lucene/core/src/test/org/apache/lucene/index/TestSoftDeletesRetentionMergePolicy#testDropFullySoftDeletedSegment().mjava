  public void testDropFullySoftDeletedSegment() throws Exception {
    Directory dir = newDirectory();
    String softDelete = random().nextBoolean() ? null : "soft_delete";
    IndexWriterConfig config = newIndexWriterConfig().setSoftDeletesField(softDelete);
    config.setMergePolicy(newMergePolicy(random(), true));
    if (softDelete != null && random().nextBoolean()) {
      config.setMergePolicy(
          new SoftDeletesRetentionMergePolicy(
              softDelete, () -> new MatchNoDocsQuery(), config.getMergePolicy()));
    }
    IndexWriter writer = new IndexWriter(dir, config);
    for (int i = 0; i < 2; i++) {
      Document d = new Document();
      d.add(new StringField("id", Integer.toString(i), Field.Store.YES));
      writer.addDocument(d);
    }
    writer.flush();
    assertEquals(1, writer.cloneSegmentInfos().size());

    if (softDelete != null) {
      // the newly created segment should be dropped as it is fully deleted (i.e. only contains
      // deleted docs).
      if (random().nextBoolean()) {
        Document tombstone = new Document();
        tombstone.add(new NumericDocValuesField(softDelete, 1));
        writer.softUpdateDocument(
            new Term("id", "1"), tombstone, new NumericDocValuesField(softDelete, 1));
      } else {
        Document doc = new Document();
        doc.add(new StringField("id", Integer.toString(1), Field.Store.YES));
        if (random().nextBoolean()) {
          writer.softUpdateDocument(
              new Term("id", "1"), doc, new NumericDocValuesField(softDelete, 1));
        } else {
          writer.addDocument(doc);
        }
        writer.updateDocValues(new Term("id", "1"), new NumericDocValuesField(softDelete, 1));
      }
    } else {
      Document d = new Document();
      d.add(new StringField("id", "1", Field.Store.YES));
      writer.addDocument(d);
      writer.deleteDocuments(new Term("id", "1"));
    }
    writer.commit();
    IndexReader reader = writer.getReader();
    assertEquals(reader.numDocs(), 1);
    reader.close();
    assertEquals(1, writer.cloneSegmentInfos().size());

    writer.close();
    dir.close();
  }


  @Override
  protected void doFinish() {

    List<Callable<MultiMatchingQueries<T>>> workers = new ArrayList<>(threads);
    for (List<MatchTask> taskset : partition(tasks, threads)) {
      CandidateMatcher<T> matcher = matcherFactory.createMatcher(searcher);
      workers.add(new MatcherWorker(taskset, matcher));
    }

    try {
      for (Future<MultiMatchingQueries<T>> future : executor.invokeAll(workers)) {
        MultiMatchingQueries<T> matches = future.get();
        for (int doc = 0; doc < matches.getBatchSize(); doc++) {
          for (T match : matches.getMatches(doc)) {
            addMatch(match, doc);
          }
        }
      }

    } catch (InterruptedException | ExecutionException e) {
      throw new RuntimeException("Interrupted during match", e);
    }
  }


  /**
   * Get the generic type of a {@link ConfigurablePlugin}
   */
  @SuppressWarnings("rawtypes")
  public static Class getConfigClass(ConfigurablePlugin<?> o) {
    Class klas = o.getClass();
    do {
      Type[] interfaces = klas.getGenericInterfaces();
      for (Type type : interfaces) {
        if (type instanceof ParameterizedType) {
          ParameterizedType parameterizedType = (ParameterizedType) type;
          Type rawType = parameterizedType.getRawType();
          if (rawType == ConfigurablePlugin.class ||
              // or if a super interface is a ConfigurablePlugin
              ((rawType instanceof Class) && ConfigurablePlugin.class.isAssignableFrom((Class) rawType))) {
            return (Class) parameterizedType.getActualTypeArguments()[0];
          }
        }
      }
      klas = klas.getSuperclass();
    } while (klas != null && klas != Object.class);
    return null;
  }


  @Test
  public void testMinExactCountDisabledByCollapse() throws Exception {
    int numDocs = 10;
    String collapseFieldInt = "field_ti_dv";
    String collapseFieldFloat = "field_tf_dv";
    String collapseFieldString = "field_s_dv";
    for (int i = 0 ; i < numDocs ; i ++) {
      assertU(adoc(
          "id", String.valueOf(i),
          "field_s", String.valueOf(i % 2),
          collapseFieldInt, String.valueOf(i),
          collapseFieldFloat, String.valueOf(i),
          collapseFieldString, String.valueOf(i)));
        assertU(commit());
    }
    
    for (String collapseField : Arrays.asList(collapseFieldInt, collapseFieldFloat, collapseFieldString)) {
      // all of our docs have a value in the collapse field(s) so the policy shouldn't matter...
      for (String policy : Arrays.asList("", " nullPolicy=ignore", " nullPolicy=expand", " nullPolicy=collapse")) {
        assertQ(req("q", "{!cache=false}field_s:1",
                    "rows", "1",
                    "minExactCount", "1", // collapse should force this to be ignored
                    // this collapse will end up creating a group for each matched doc
                    "fq", "{!collapse field=" + collapseField + policy + "}"
                    )
                , "//*[@numFoundExact='true']"
                , "//*[@numFound='" + (numDocs/2) + "']"
                );
      }
    }
  }


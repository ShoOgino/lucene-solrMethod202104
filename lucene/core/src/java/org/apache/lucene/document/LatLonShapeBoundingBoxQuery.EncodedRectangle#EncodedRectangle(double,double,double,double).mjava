    EncodedRectangle(double minLat, double maxLat, double minLon, double maxLon) {
      this.bbox = new byte[4 * BYTES];
      if (minLon == 180.0 && minLon > maxLon) {
        minLon = -180;
      }
      this.minX = encodeLongitudeCeil(minLon);
      this.maxX = encodeLongitude(maxLon);
      this.minY  = encodeLatitudeCeil(minLat);
      this.maxY = encodeLatitude(maxLat);
      this.crossesDateline = minLon > maxLon;
      if (this.crossesDateline) {
        // crossing dateline is split into east/west boxes
        this.west = new byte[4 * BYTES];
        encode(MIN_LON_ENCODED, this.maxX, this.minY, this.maxY, this.west);
        encode(this.minX, MAX_LON_ENCODED, this.minY, this.maxY, this.bbox);
      } else {
        this.west = null;
        encode(this.minX, this.maxX, this.minY, this.maxY, bbox);
      }
    }


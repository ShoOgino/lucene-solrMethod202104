  /**
   * @param s buffer, oversized to at least <code>len+1</code>
   * @param len initial valid length of buffer
   * @return new valid length, stemmed
   */
  public int stem(char s[], int len) {
    assert s.length >= len + 1 : "this stemmer requires an oversized array of at least 1";

    len = plural.apply(s, len);
    len = unification.apply(s, len);
    len = adverb.apply(s, len);

    int oldlen;
    do {
      oldlen = len;
      len = augmentative.apply(s, len);
    } while (len != oldlen);

    oldlen = len;
    len = noun.apply(s, len);
    if (len == oldlen) {
      /* suffix not removed */
      len = verb.apply(s, len);
    }

    len = vowel.apply(s, len);

    // RSLG accent removal
    for (int i = 0; i < len; i++)
      switch (s[i]) {
        case 'á':
          s[i] = 'a';
          break;
        case 'é':
        case 'ê':
          s[i] = 'e';
          break;
        case 'í':
          s[i] = 'i';
          break;
        case 'ó':
          s[i] = 'o';
          break;
        case 'ú':
          s[i] = 'u';
          break;
      }

    return len;
  }


  @Test
  public void testArgsParser() throws Exception {
    SpatialArgsParser parser = new SpatialArgsParser();

    String arg = SpatialOperation.IsWithin + "(Envelope(-10, 10, 20, -20))";
    SpatialArgs out = parser.parse(arg, ctx);
    assertEquals(SpatialOperation.IsWithin, out.getOperation());
    Rectangle bounds = (Rectangle) out.getShape();
    assertEquals(-10.0, bounds.getMinX(), 0D);
    assertEquals(10.0, bounds.getMaxX(), 0D);

    // Disjoint should not be scored
    arg = SpatialOperation.IsDisjointTo + " (Envelope(-10,-20,20,10))";
    out = parser.parse(arg, ctx);
    assertEquals(SpatialOperation.IsDisjointTo, out.getOperation());

    // spatial operations need args
    expectThrows(Exception.class, () -> {
      parser.parse(SpatialOperation.IsDisjointTo + "[ ]", ctx);
    });

    // unknown operation
    expectThrows(Exception.class, () -> {
      parser.parse("XXXX(Envelope(-10, 10, 20, -20))", ctx);
    });

    assertAlias(SpatialOperation.IsWithin, "CoveredBy");
    assertAlias(SpatialOperation.IsWithin, "COVEREDBY");
    assertAlias(SpatialOperation.IsWithin, "coveredBy");
    assertAlias(SpatialOperation.IsWithin, "Within");
    assertAlias(SpatialOperation.IsEqualTo, "Equals");
    assertAlias(SpatialOperation.IsDisjointTo, "disjoint");
    assertAlias(SpatialOperation.Contains, "Covers");
  }


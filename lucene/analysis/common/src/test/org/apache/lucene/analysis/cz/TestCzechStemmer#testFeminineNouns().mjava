  /** Test showing how feminine noun forms conflate */
  public void testFeminineNouns() throws IOException {
    CzechAnalyzer cz = new CzechAnalyzer();

    /* ending with hard consonant */
    assertAnalyzesTo(cz, "kost", new String[] {"kost"});
    assertAnalyzesTo(cz, "kosti", new String[] {"kost"});
    assertAnalyzesTo(cz, "kostí", new String[] {"kost"});
    assertAnalyzesTo(cz, "kostem", new String[] {"kost"});
    assertAnalyzesTo(cz, "kostech", new String[] {"kost"});
    assertAnalyzesTo(cz, "kostmi", new String[] {"kost"});

    /* ending with a soft consonant */
    // note: in this example sing nom. and sing acc. don't conflate w/ the rest
    assertAnalyzesTo(cz, "píseň", new String[] {"písň"});
    assertAnalyzesTo(cz, "písně", new String[] {"písn"});
    assertAnalyzesTo(cz, "písni", new String[] {"písn"});
    assertAnalyzesTo(cz, "písněmi", new String[] {"písn"});
    assertAnalyzesTo(cz, "písních", new String[] {"písn"});
    assertAnalyzesTo(cz, "písním", new String[] {"písn"});

    /* ending with e */
    assertAnalyzesTo(cz, "růže", new String[] {"růh"});
    assertAnalyzesTo(cz, "růží", new String[] {"růh"});
    assertAnalyzesTo(cz, "růžím", new String[] {"růh"});
    assertAnalyzesTo(cz, "růžích", new String[] {"růh"});
    assertAnalyzesTo(cz, "růžemi", new String[] {"růh"});
    assertAnalyzesTo(cz, "růži", new String[] {"růh"});

    /* ending with a */
    assertAnalyzesTo(cz, "žena", new String[] {"žn"});
    assertAnalyzesTo(cz, "ženy", new String[] {"žn"});
    assertAnalyzesTo(cz, "žen", new String[] {"žn"});
    assertAnalyzesTo(cz, "ženě", new String[] {"žn"});
    assertAnalyzesTo(cz, "ženám", new String[] {"žn"});
    assertAnalyzesTo(cz, "ženu", new String[] {"žn"});
    assertAnalyzesTo(cz, "ženo", new String[] {"žn"});
    assertAnalyzesTo(cz, "ženách", new String[] {"žn"});
    assertAnalyzesTo(cz, "ženou", new String[] {"žn"});
    assertAnalyzesTo(cz, "ženami", new String[] {"žn"});

    cz.close();
  }


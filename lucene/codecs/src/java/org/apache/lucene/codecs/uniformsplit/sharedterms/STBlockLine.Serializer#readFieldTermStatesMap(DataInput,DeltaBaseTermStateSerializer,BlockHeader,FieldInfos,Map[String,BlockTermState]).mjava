    /**
     * Reads all the {@link BlockTermState} of all the field in the current block line of the
     * provided input.
     *
     * @param fieldTermStatesMap Map filled with the term states for each field. It is cleared
     *     first.
     * @see #readTermStateForField
     */
    public void readFieldTermStatesMap(
        DataInput termStatesInput,
        DeltaBaseTermStateSerializer termStateSerializer,
        BlockHeader blockHeader,
        FieldInfos fieldInfos,
        Map<String, BlockTermState> fieldTermStatesMap)
        throws IOException {
      fieldTermStatesMap.clear();
      int numFields = termStatesInput.readZInt();
      if (numFields <= 0) {
        int fieldId = -numFields;
        fieldTermStatesMap.put(
            fieldInfos.fieldInfo(fieldId).name,
            termStateSerializer.readTermState(
                blockHeader.getBaseDocsFP(),
                blockHeader.getBasePositionsFP(),
                blockHeader.getBasePayloadsFP(),
                termStatesInput,
                fieldInfos.fieldInfo(fieldId),
                null));
        return;
      }
      for (int fieldId : readFieldIds(termStatesInput, numFields)) {
        fieldTermStatesMap.put(
            fieldInfos.fieldInfo(fieldId).name,
            termStateSerializer.readTermState(
                blockHeader.getBaseDocsFP(),
                blockHeader.getBasePositionsFP(),
                blockHeader.getBasePayloadsFP(),
                termStatesInput,
                fieldInfos.fieldInfo(fieldId),
                null));
      }
    }


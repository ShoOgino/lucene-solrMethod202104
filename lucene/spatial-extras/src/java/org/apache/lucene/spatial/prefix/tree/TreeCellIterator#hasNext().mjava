  @Override
  public boolean hasNext() {
    if (nextCell != null) return true;
    while (true) {
      if (stackIdx == -1) // the only condition in which we return false
      return false;
      // If we can descend...
      if (descend
          && !(stackIdx == iterStack.length - 1 || iterStack[stackIdx].thisCell().isLeaf())) {
        CellIterator nextIter = iterStack[stackIdx].thisCell().getNextLevelCells(shapeFilter);
        // push stack
        iterStack[++stackIdx] = nextIter;
      }
      // Get sibling...
      if (iterStack[stackIdx].hasNext()) {
        nextCell = iterStack[stackIdx].next();
        // at detailLevel
        if (stackIdx == iterStack.length - 1
            && !(shapeFilter instanceof Point)) // point check is a kludge
        nextCell.setLeaf(); // because at bottom
        break;
      }
      // Couldn't get next; go up...
      // pop stack
      iterStack[stackIdx--] = null;
      descend = false; // so that we don't re-descend where we just were
    }
    assert nextCell != null;
    descend = true; // reset
    return true;
  }


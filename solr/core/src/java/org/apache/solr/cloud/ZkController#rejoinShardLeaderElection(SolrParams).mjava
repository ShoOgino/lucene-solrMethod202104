  public void rejoinShardLeaderElection(SolrParams params) {

    String collectionName = params.get(COLLECTION_PROP);
    String shardId = params.get(SHARD_ID_PROP);
    String coreNodeName = params.get(CORE_NODE_NAME_PROP);
    String coreName = params.get(CORE_NAME_PROP);
    String electionNode = params.get(ELECTION_NODE_PROP);

    try {
      MDCLoggingContext.setCoreDescriptor(cc, cc.getCoreDescriptor(coreName));

      log.info("Rejoin the shard leader election.");

      ContextKey contextKey = new ContextKey(collectionName, coreNodeName);

      ElectionContext prevContext = electionContexts.get(contextKey);
      if (prevContext != null) prevContext.cancelElection();

      String ourUrl = ZkCoreNodeProps.getCoreUrl(UrlScheme.INSTANCE.getBaseUrlForNodeName(getNodeName()), coreName);
      ZkNodeProps zkProps = new ZkNodeProps(CORE_NAME_PROP, coreName, NODE_NAME_PROP, getNodeName(), CORE_NODE_NAME_PROP, coreNodeName);

      LeaderElector elect = ((ShardLeaderElectionContextBase) prevContext).getLeaderElector();
      ShardLeaderElectionContext context = new ShardLeaderElectionContext(elect, shardId, collectionName,
          coreNodeName, zkProps, this, getCoreContainer());

      context.leaderSeqPath = context.electionPath + LeaderElector.ELECTION_NODE + "/" + electionNode;
      elect.setup(context);
      electionContexts.put(contextKey, context);

      elect.retryElection(context, params.getBool(REJOIN_AT_HEAD_PROP, false));

      try (SolrCore core = cc.getCore(coreName)) {
        Replica.Type replicaType = core.getCoreDescriptor().getCloudDescriptor().getReplicaType();
        if (replicaType == Type.TLOG) {
          String leaderUrl = getLeader(core.getCoreDescriptor().getCloudDescriptor(), cloudConfig.getLeaderVoteWait());
          if (!leaderUrl.equals(ourUrl)) {
            // restart the replication thread to ensure the replication is running in each new replica
            // especially if previous role is "leader" (i.e., no replication thread)
            stopReplicationFromLeader(coreName);
            startReplicationFromLeader(coreName, false);
          }
        }
      }
    } catch (Exception e) {
      throw new SolrException(ErrorCode.SERVER_ERROR, "Unable to rejoin election", e);
    } finally {
      MDCLoggingContext.clear();
    }
  }


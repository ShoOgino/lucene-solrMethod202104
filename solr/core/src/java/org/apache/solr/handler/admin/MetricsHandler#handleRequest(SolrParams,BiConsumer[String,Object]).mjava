  @SuppressWarnings({"unchecked"})
  public void handleRequest(SolrParams params, BiConsumer<String, Object> consumer) throws Exception {
    if (!enabled) {
      consumer.accept("error", "metrics collection is disabled");
      return;
    }
    boolean compact = params.getBool(COMPACT_PARAM, true);
    String[] keys = params.getParams(KEY_PARAM);
    if (keys != null && keys.length > 0) {
      handleKeyRequest(keys, consumer);
      return;
    }
    MetricFilter mustMatchFilter = parseMustMatchFilter(params);
    Predicate<CharSequence> propertyFilter = parsePropertyFilter(params);
    List<MetricType> metricTypes = parseMetricTypes(params);
    List<MetricFilter> metricFilters = metricTypes.stream().map(MetricType::asMetricFilter).collect(Collectors.toList());
    Set<String> requestedRegistries = parseRegistries(params);

    NamedList<Object> response = new SimpleOrderedMap<>();
    for (String registryName : requestedRegistries) {
      MetricRegistry registry = metricManager.registry(registryName);
      SimpleOrderedMap<Object> result = new SimpleOrderedMap<>();
      MetricUtils.toMaps(registry, metricFilters, mustMatchFilter, propertyFilter, false,
          false, compact, false, (k, v) -> result.add(k, v));
      if (result.size() > 0) {
        response.add(registryName, result);
      }
    }
    consumer.accept("metrics", response);
  }


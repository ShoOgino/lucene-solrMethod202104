    @Override
    public void visit(int docID, byte[] packedValue) {
      checkPackedValue("packed value", packedValue, docID);
      pointCountSeen++;
      docsSeen.set(docID);

      for (int dim = 0; dim < numIndexDims; dim++) {
        int offset = bytesPerDim * dim;

        // Compare to last cell:
        if (Arrays.compareUnsigned(
                packedValue,
                offset,
                offset + bytesPerDim,
                lastMinPackedValue,
                offset,
                offset + bytesPerDim)
            < 0) {
          // This doc's point, in this dimension, is lower than the minimum value of the last cell
          // checked:
          throw new RuntimeException(
              "packed points value "
                  + Arrays.toString(packedValue)
                  + " for field=\""
                  + fieldName
                  + "\", docID="
                  + docID
                  + " is out-of-bounds of the last cell min="
                  + Arrays.toString(lastMinPackedValue)
                  + " max="
                  + Arrays.toString(lastMaxPackedValue)
                  + " dim="
                  + dim);
        }

        if (Arrays.compareUnsigned(
                packedValue,
                offset,
                offset + bytesPerDim,
                lastMaxPackedValue,
                offset,
                offset + bytesPerDim)
            > 0) {
          // This doc's point, in this dimension, is greater than the maximum value of the last cell
          // checked:
          throw new RuntimeException(
              "packed points value "
                  + Arrays.toString(packedValue)
                  + " for field=\""
                  + fieldName
                  + "\", docID="
                  + docID
                  + " is out-of-bounds of the last cell min="
                  + Arrays.toString(lastMinPackedValue)
                  + " max="
                  + Arrays.toString(lastMaxPackedValue)
                  + " dim="
                  + dim);
        }
      }

      // In the 1D data case, PointValues must make a single in-order sweep through all values, and
      // tie-break by
      // increasing docID:
      // for data dimension > 1, leaves are sorted by the dimension with the lowest cardinality to
      // improve block compression
      if (numDataDims == 1) {
        int cmp =
            Arrays.compareUnsigned(lastPackedValue, 0, bytesPerDim, packedValue, 0, bytesPerDim);
        if (cmp > 0) {
          throw new RuntimeException(
              "packed points value "
                  + Arrays.toString(packedValue)
                  + " for field=\""
                  + fieldName
                  + "\", for docID="
                  + docID
                  + " is out-of-order vs the previous document's value "
                  + Arrays.toString(lastPackedValue));
        } else if (cmp == 0) {
          if (docID < lastDocID) {
            throw new RuntimeException(
                "packed points value is the same, but docID="
                    + docID
                    + " is out of order vs previous docID="
                    + lastDocID
                    + ", field=\""
                    + fieldName
                    + "\"");
          }
        }
        System.arraycopy(packedValue, 0, lastPackedValue, 0, bytesPerDim);
        lastDocID = docID;
      }
    }


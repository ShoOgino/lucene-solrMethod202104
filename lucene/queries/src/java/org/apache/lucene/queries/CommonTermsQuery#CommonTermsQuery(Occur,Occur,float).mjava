  /**
   * Creates a new {@link CommonTermsQuery}
   *
   * @param highFreqOccur {@link Occur} used for high frequency terms
   * @param lowFreqOccur {@link Occur} used for low frequency terms
   * @param maxTermFrequency a value in [0..1) (or absolute number &gt;=1) representing the maximum
   *     threshold of a terms document frequency to be considered a low frequency term.
   * @throws IllegalArgumentException if {@link Occur#MUST_NOT} is pass as lowFreqOccur or
   *     highFreqOccur
   */
  public CommonTermsQuery(Occur highFreqOccur, Occur lowFreqOccur, float maxTermFrequency) {
    if (highFreqOccur == Occur.MUST_NOT) {
      throw new IllegalArgumentException("highFreqOccur should be MUST or SHOULD but was MUST_NOT");
    }
    if (lowFreqOccur == Occur.MUST_NOT) {
      throw new IllegalArgumentException("lowFreqOccur should be MUST or SHOULD but was MUST_NOT");
    }
    this.highFreqOccur = highFreqOccur;
    this.lowFreqOccur = lowFreqOccur;
    this.maxTermFrequency = maxTermFrequency;
  }


  /** Test WriteLineDoc and LineDocSource. */
  public void testLineDocFile() throws Exception {
    Path lineFile = createTempFile("test.reuters.lines", ".txt");

    // We will call WriteLineDocs this many times
    final int NUM_TRY_DOCS = 50;

    // Creates a line file with first 50 docs from SingleDocSource
    String algLines1[] = {
      "# ----- properties ",
      "content.source=org.apache.lucene.benchmark.byTask.feeds.SingleDocSource",
      "content.source.forever=true",
      "line.file.out=" + lineFile.toAbsolutePath().toString().replace('\\', '/'),
      "# ----- alg ",
      "{WriteLineDoc()}:" + NUM_TRY_DOCS,
    };

    // Run algo
    Benchmark benchmark = execBenchmark(algLines1);

    BufferedReader r = Files.newBufferedReader(lineFile, StandardCharsets.UTF_8);
    int numLines = 0;
    String line;
    while ((line = r.readLine()) != null) {
      if (numLines == 0 && line.startsWith(WriteLineDocTask.FIELDS_HEADER_INDICATOR)) {
        continue; // do not count the header line as a doc
      }
      numLines++;
    }
    r.close();
    assertEquals(
        "did not see the right number of docs; should be " + NUM_TRY_DOCS + " but was " + numLines,
        NUM_TRY_DOCS,
        numLines);

    // Index the line docs
    String algLines2[] = {
      "# ----- properties ",
      "analyzer=org.apache.lucene.analysis.core.WhitespaceAnalyzer",
      "content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource",
      "docs.file=" + lineFile.toAbsolutePath().toString().replace('\\', '/'),
      "content.source.forever=false",
      "doc.reuse.fields=false",
      "ram.flush.mb=4",
      "# ----- alg ",
      "ResetSystemErase",
      "CreateIndex",
      "{AddDoc}: *",
      "CloseIndex",
    };

    // Run algo
    benchmark = execBenchmark(algLines2);

    // now we should be able to open the index for write.
    IndexWriter iw =
        new IndexWriter(
            benchmark.getRunData().getDirectory(),
            new IndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.APPEND));
    iw.close();

    IndexReader ir = DirectoryReader.open(benchmark.getRunData().getDirectory());
    assertEquals(
        numLines + " lines were created but " + ir.numDocs() + " docs are in the index",
        numLines,
        ir.numDocs());
    ir.close();
  }


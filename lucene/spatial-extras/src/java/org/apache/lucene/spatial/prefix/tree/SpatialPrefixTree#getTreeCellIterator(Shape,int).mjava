  /**
   * Gets the intersecting cells for the specified shape, without exceeding detail level. If a cell
   * is within the query shape then it's marked as a leaf and none of its children are added. For
   * cells at detailLevel, they are marked as leaves too, unless it's a point.
   *
   * <p>IMPORTANT: Cells returned from the iterator can be re-used for cells at the same level. So
   * you can't simply iterate to subsequent cells and still refer to the former cell nor the bytes
   * returned from the former cell, unless you know the former cell is a parent.
   *
   * @param shape the shape; possibly null but the caller should liberally call {@code remove()} if
   *     so.
   * @param detailLevel the maximum detail level to get cells for
   * @return the matching cells
   */
  public CellIterator getTreeCellIterator(Shape shape, int detailLevel) {
    if (detailLevel > maxLevels) {
      throw new IllegalArgumentException("detailLevel > maxLevels");
    }
    return new TreeCellIterator(shape, detailLevel, getWorldCell());
  }


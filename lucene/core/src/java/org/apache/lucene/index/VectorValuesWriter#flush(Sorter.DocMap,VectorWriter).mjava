  /**
   * Flush this field's values to storage, sorting the values in accordance with sortMap
   * @param sortMap specifies the order of documents being flushed, or null if they are to be flushed in docid order
   * @param vectorWriter the Codec's vector writer that handles the actual encoding and I/O
   * @throws IOException if there is an error writing the field and its values
   */
  public void flush(Sorter.DocMap sortMap, VectorWriter vectorWriter) throws IOException {
    VectorValues vectorValues = new BufferedVectorValues(docsWithField, vectors, fieldInfo.getVectorDimension(), fieldInfo.getVectorScoreFunction());
    if (sortMap != null) {
      vectorWriter.writeField(fieldInfo, new SortingVectorValues(vectorValues, sortMap));
    } else {
      vectorWriter.writeField(fieldInfo, vectorValues);
    }
  }


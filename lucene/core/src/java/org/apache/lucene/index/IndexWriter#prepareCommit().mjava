  /**
   * Expert: prepare for commit. This does the first phase of 2-phase commit. This method does all
   * steps necessary to commit changes since this writer was opened: flushes pending added and
   * deleted docs, syncs the index files, writes most of next segments_N file. After calling this
   * you must call either {@link #commit()} to finish the commit, or {@link #rollback()} to revert
   * the commit and undo all changes done since the writer was opened.
   *
   * <p>You can also just call {@link #commit()} directly without prepareCommit first in which case
   * that method will internally call prepareCommit.
   *
   * @return The <a href="#sequence_number">sequence number</a> of the last operation in the commit.
   *     All sequence numbers &lt;= this value will be reflected in the commit, and all others will
   *     not.
   */
  @Override
  public final long prepareCommit() throws IOException {
    ensureOpen();
    pendingSeqNo = prepareCommitInternal();
    // we must do this outside of the commitLock else we can deadlock:
    if (maybeMerge.getAndSet(false)) {
      maybeMerge(config.getMergePolicy(), MergeTrigger.FULL_FLUSH, UNBOUNDED_MAX_MERGE_SEGMENTS);
    }
    return pendingSeqNo;
  }


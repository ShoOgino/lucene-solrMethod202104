  public void testDocValuesUpdatesDontBreakCache() throws IOException {
    Directory dir = newDirectory();
    IndexWriterConfig iwc = newIndexWriterConfig().setMergePolicy(NoMergePolicy.INSTANCE);
    IndexWriter w = new IndexWriter(dir, iwc);
    w.addDocument(new Document());
    w.commit();
    DirectoryReader reader = DirectoryReader.open(w);

    // IMPORTANT:
    // Don't use newSearcher(), because that will sometimes use an ExecutorService, and
    // we need to be single threaded to ensure that LRUQueryCache doesn't skip the cache
    // due to thread contention
    IndexSearcher searcher = new AssertingIndexSearcher(random(), reader);
    searcher.setQueryCachingPolicy(ALWAYS_CACHE);

    LRUQueryCache cache = new LRUQueryCache(1, 10000, context -> true, Float.POSITIVE_INFINITY);
    searcher.setQueryCache(cache);

    DVCacheQuery query = new DVCacheQuery("field");
    assertEquals(1, searcher.count(query));
    assertEquals(1, query.scorerCreatedCount.get());
    assertEquals(1, searcher.count(query));
    assertEquals(1, query.scorerCreatedCount.get()); // should be cached

    Document doc = new Document();
    doc.add(new NumericDocValuesField("field", 1));
    doc.add(newTextField("text", "text", Store.NO));
    w.addDocument(doc);
    reader.close();
    reader = DirectoryReader.open(w);
    searcher =
        new AssertingIndexSearcher(random(), reader); // no newSearcher(reader) - see comment above
    searcher.setQueryCachingPolicy(ALWAYS_CACHE);
    searcher.setQueryCache(cache);

    assertEquals(2, searcher.count(query));
    assertEquals(2, query.scorerCreatedCount.get()); // first segment cached

    reader.close();
    reader = DirectoryReader.open(w);
    searcher =
        new AssertingIndexSearcher(random(), reader); // no newSearcher(reader) - see comment above
    searcher.setQueryCachingPolicy(ALWAYS_CACHE);
    searcher.setQueryCache(cache);

    assertEquals(2, searcher.count(query));
    assertEquals(2, query.scorerCreatedCount.get()); // both segments cached

    w.updateNumericDocValue(new Term("text", "text"), "field", 2l);
    reader.close();
    reader = DirectoryReader.open(w);
    searcher =
        new AssertingIndexSearcher(random(), reader); // no newSearcher(reader) - see comment above
    searcher.setQueryCachingPolicy(ALWAYS_CACHE);
    searcher.setQueryCache(cache);

    assertEquals(2, searcher.count(query));
    assertEquals(
        3, query.scorerCreatedCount.get()); // second segment no longer cached due to DV update

    assertEquals(2, searcher.count(query));
    assertEquals(4, query.scorerCreatedCount.get()); // still no caching

    reader.close();
    w.close();
    dir.close();
  }


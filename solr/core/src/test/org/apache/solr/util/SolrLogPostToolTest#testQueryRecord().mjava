  @Test
  public void testQueryRecord() throws Exception{
    String record = "2019-12-09 15:05:11.931 INFO  (qtp2103763750-21) [c:logs4 s:shard1 r:core_node2 x:logs4_shard1_replica_n1] o.a.s.c.S.Request [logs4_shard1_replica_n1]  webapp=/solr path=/select params={q=*:*&_=1575835181759&shards.purpose=36&isShard=true&wt=javabin&distrib=false} hits=234868 status=0 QTime=8\n";
    List<SolrInputDocument> docs = readDocs(record);
    assertEquals(docs.size(), 1);
    SolrInputDocument doc = docs.get(0);

    SolrInputField query = doc.getField("q_s");
    SolrInputField date = doc.getField("date_dt");
    SolrInputField time_minute = doc.getField("time_minute_s");
    SolrInputField time_ten_second = doc.getField("time_ten_second_s");
    SolrInputField collection = doc.getField("collection_s");
    SolrInputField path = doc.getField("path_s");
    SolrInputField hits = doc.getField("hits_l");
    SolrInputField type = doc.getField("type_s");
    SolrInputField status = doc.getField("status_s");
    SolrInputField shard = doc.getField("shard_s");
    SolrInputField replica = doc.getField("replica_s");
    SolrInputField core = doc.getField("core_s");
    SolrInputField wt = doc.getField("wt_s");
    SolrInputField distrib = doc.getField("distrib_s");
    SolrInputField isShard = doc.getField("isShard_s");
    SolrInputField ids = doc.getField("ids_s");
    SolrInputField shards = doc.getField("shards_s");
    SolrInputField purpose = doc.getField("purpose_ss");
    Object[] purposes = purpose.getValues().toArray();

    assertEquals(query.getValue(), "*:*");
    assertEquals(date.getValue(), "2019-12-09T15:05:11.931Z");
    assertEquals(time_minute.getValue(), "2019-12-09T15:05:00Z");
    assertEquals(time_ten_second.getValue(), "2019-12-09T15:05:10Z");
    assertEquals(collection.getValue(), "logs4");
    assertEquals(path.getValue(), "/select");
    assertEquals(hits.getValue(), "234868");
    assertEquals(type.getValue(), "query");
    assertEquals(status.getValue(), "0");
    assertEquals(shard.getValue(), "shard1");
    assertEquals(replica.getValue(), "core_node2");
    assertEquals(core.getValue(), "logs4_shard1_replica_n1");
    assertEquals(wt.getValue(), "javabin");
    assertEquals(distrib.getValue(), "false");
    assertEquals(isShard.getValue(), "true");
    assertEquals(ids.getValue(), "false");
    assertEquals(shards.getValue(), "false");
    assertEquals("GET_TOP_IDS", purposes[0].toString());
    assertEquals("REFINE_FACETS", purposes[1].toString());
  }


  public static BackupManager forRestore(BackupRepository repository,
                                         ZkStateReader stateReader,
                                         URI backupPath) throws IOException {
    Objects.requireNonNull(repository);
    Objects.requireNonNull(stateReader);

    if (!repository.exists(backupPath)) {
      throw new SolrException(ErrorCode.SERVER_ERROR, "Couldn't restore since doesn't exist: " + backupPath);
    }

    Optional<BackupId> opFileGen = BackupFilePaths.findMostRecentBackupIdFromFileListing(repository.listAll(backupPath));
    if (opFileGen.isPresent()) {
      BackupId backupPropFile = opFileGen.get();
      return new BackupManager(repository, backupPath, stateReader, BackupFilePaths.getBackupPropsName(backupPropFile),
              backupPropFile);
    } else if (repository.exists(repository.resolve(backupPath, TRADITIONAL_BACKUP_PROPS_FILE))){
      return new BackupManager(repository, backupPath, stateReader, TRADITIONAL_BACKUP_PROPS_FILE, null);
    } else {
      throw new IllegalStateException("No " + TRADITIONAL_BACKUP_PROPS_FILE + " was found, the backup does not exist or not complete");
    }
  }


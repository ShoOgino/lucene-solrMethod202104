  public void test() throws IOException {
    SpanQuery query =
        new PayloadScoreQuery(
            new SpanTermQuery(new Term("field", "seventy")),
            new MaxPayloadFunction(),
            PayloadDecoder.FLOAT_DECODER);
    TopDocs hits = searcher.search(query, 100);
    assertTrue("hits is null and it shouldn't be", hits != null);
    assertTrue(
        "hits Size: " + hits.totalHits.value + " is not: " + 100, hits.totalHits.value == 100);

    // they should all have the exact same score, because they all contain seventy once, and we set
    // all the other similarity factors to be 1

    for (int i = 0; i < hits.scoreDocs.length; i++) {
      ScoreDoc doc = hits.scoreDocs[i];
      assertTrue(doc.score + " does not equal: " + 1, doc.score == 1);
    }
    CheckHits.checkExplanations(query, PayloadHelper.FIELD, searcher, true);
    Spans spans =
        query
            .createWeight(searcher, ScoreMode.COMPLETE_NO_SCORES, 1f)
            .getSpans(searcher.getIndexReader().leaves().get(0), SpanWeight.Postings.POSITIONS);
    assertTrue("spans is null and it shouldn't be", spans != null);
    /*float score = hits.score(0);
    for (int i =1; i < hits.length(); i++)
    {
      assertTrue("scores are not equal and they should be", score == hits.score(i));
    }*/

  }


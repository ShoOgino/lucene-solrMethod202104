  /**
   * Sole constructor
   *
   * @param planetModel is the planet model.
   * @param X is the X value.
   * @param minY is the minimum Y value.
   * @param maxY is the maximum Y value.
   * @param Z is the Z value.
   */
  public dXYdZSolid(
      final PlanetModel planetModel,
      final double X,
      final double minY,
      final double maxY,
      final double Z) {
    super(planetModel);
    // Argument checking
    if (maxY - minY < Vector.MINIMUM_RESOLUTION)
      throw new IllegalArgumentException("Y values in wrong order or identical");

    this.X = X;
    this.minY = minY;
    this.maxY = maxY;
    this.Z = Z;

    // Build the planes and intersect them.
    final Plane xPlane = new Plane(xUnitVector, -X);
    final Plane zPlane = new Plane(zUnitVector, -Z);
    final SidedPlane minYPlane = new SidedPlane(0.0, maxY, 0.0, yUnitVector, -minY);
    final SidedPlane maxYPlane = new SidedPlane(0.0, minY, 0.0, yUnitVector, -maxY);
    surfacePoints = xPlane.findIntersections(planetModel, zPlane, minYPlane, maxYPlane);
  }


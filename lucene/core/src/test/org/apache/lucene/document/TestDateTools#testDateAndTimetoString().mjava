  public void testDateAndTimetoString() throws ParseException {
    // we use default locale since LuceneTestCase randomizes it
    Calendar cal = new GregorianCalendar(TimeZone.getTimeZone("GMT"), Locale.getDefault());
    cal.clear();
    cal.set(
        2004, 1, 3, // year=2004, month=february(!), day=3
        22, 8, 56); // hour, minute, second
    cal.set(Calendar.MILLISECOND, 333);

    String dateString;
    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.YEAR);
    assertEquals("2004", dateString);
    assertEquals("2004-01-01 00:00:00:000", isoFormat(DateTools.stringToDate(dateString)));

    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.MONTH);
    assertEquals("200402", dateString);
    assertEquals("2004-02-01 00:00:00:000", isoFormat(DateTools.stringToDate(dateString)));

    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.DAY);
    assertEquals("20040203", dateString);
    assertEquals("2004-02-03 00:00:00:000", isoFormat(DateTools.stringToDate(dateString)));

    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.HOUR);
    assertEquals("2004020322", dateString);
    assertEquals("2004-02-03 22:00:00:000", isoFormat(DateTools.stringToDate(dateString)));

    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.MINUTE);
    assertEquals("200402032208", dateString);
    assertEquals("2004-02-03 22:08:00:000", isoFormat(DateTools.stringToDate(dateString)));

    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.SECOND);
    assertEquals("20040203220856", dateString);
    assertEquals("2004-02-03 22:08:56:000", isoFormat(DateTools.stringToDate(dateString)));

    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.MILLISECOND);
    assertEquals("20040203220856333", dateString);
    assertEquals("2004-02-03 22:08:56:333", isoFormat(DateTools.stringToDate(dateString)));

    // date before 1970:
    cal.set(
        1961, 2, 5, // year=1961, month=march(!), day=5
        23, 9, 51); // hour, minute, second
    cal.set(Calendar.MILLISECOND, 444);
    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.MILLISECOND);
    assertEquals("19610305230951444", dateString);
    assertEquals("1961-03-05 23:09:51:444", isoFormat(DateTools.stringToDate(dateString)));

    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.HOUR);
    assertEquals("1961030523", dateString);
    assertEquals("1961-03-05 23:00:00:000", isoFormat(DateTools.stringToDate(dateString)));

    // timeToString:
    cal.set(
        1970, 0, 1, // year=1970, month=january, day=1
        0, 0, 0); // hour, minute, second
    cal.set(Calendar.MILLISECOND, 0);
    dateString = DateTools.timeToString(cal.getTime().getTime(), DateTools.Resolution.MILLISECOND);
    assertEquals("19700101000000000", dateString);

    cal.set(
        1970, 0, 1, // year=1970, month=january, day=1
        1, 2, 3); // hour, minute, second
    cal.set(Calendar.MILLISECOND, 0);
    dateString = DateTools.timeToString(cal.getTime().getTime(), DateTools.Resolution.MILLISECOND);
    assertEquals("19700101010203000", dateString);
  }


  /**
   * Writes a codec footer, which records both a checksum algorithm ID and a checksum. This footer
   * can be parsed and validated with {@link #checkFooter(ChecksumIndexInput) checkFooter()}.
   *
   * <p>CodecFooter --&gt; Magic,AlgorithmID,Checksum
   *
   * <ul>
   *   <li>Magic --&gt; {@link DataOutput#writeInt Uint32}. This identifies the start of the footer.
   *       It is always {@value #FOOTER_MAGIC}.
   *   <li>AlgorithmID --&gt; {@link DataOutput#writeInt Uint32}. This indicates the checksum
   *       algorithm used. Currently this is always 0, for zlib-crc32.
   *   <li>Checksum --&gt; {@link DataOutput#writeLong Uint64}. The actual checksum value for all
   *       previous bytes in the stream, including the bytes from Magic and AlgorithmID.
   * </ul>
   *
   * @param out Output stream
   * @throws IOException If there is an I/O error writing to the underlying medium.
   */
  public static void writeFooter(IndexOutput out) throws IOException {
    out.writeInt(FOOTER_MAGIC);
    out.writeInt(0);
    writeCRC(out);
  }


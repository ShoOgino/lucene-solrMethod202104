  /** rectangle values cannot be NaN */
  public void testNaN() {
    IllegalArgumentException expected =
        expectThrows(
            IllegalArgumentException.class,
            () -> {
              new XYRectangle(Float.NaN, 4, 3, 4);
            });
    assertTrue(expected.getMessage().contains("invalid value NaN"));

    expected =
        expectThrows(
            IllegalArgumentException.class,
            () -> {
              new XYRectangle(3, Float.NaN, 3, 4);
            });
    assertTrue(expected.getMessage().contains("invalid value NaN"));

    expected =
        expectThrows(
            IllegalArgumentException.class,
            () -> {
              new XYRectangle(3, 4, Float.NaN, 4);
            });
    assertTrue(expected.getMessage().contains("invalid value NaN"));

    expected =
        expectThrows(
            IllegalArgumentException.class,
            () -> {
              new XYRectangle(3, 4, 3, Float.NaN);
            });
    assertTrue(expected.getMessage().contains("invalid value NaN"));
  }


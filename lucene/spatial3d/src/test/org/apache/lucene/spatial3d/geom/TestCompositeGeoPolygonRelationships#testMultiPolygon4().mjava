  @Test
  public void testMultiPolygon4() {
    //MULTIPOLYGON(((-145.790967486 -5.17543698881, -145.790854979 -5.11348060995, -145.853073512 -5.11339421216, -145.853192037 -5.17535061936, -145.790967486 -5.17543698881)),
    //((-145.8563923 -5.17527125408, -145.856222168 -5.11332154814, -145.918433943 -5.11317773171, -145.918610092 -5.17512738429, -145.8563923 -5.17527125408)))
    GeoPolygon multiPol=  getMultiPolygon();

    //POLYGON((-145.88 -5.13, -145.87 -5.13, -145.87 -5.12, -145.88 -5.12, -145.88 -5.13))
    GeoPolygon polConvex = buildGeoPolygon(-145.88, -5.13,
        -145.87, -5.13,
        -145.87, -5.12,
        -145.88, -5.12,
        -145.88, -5.12);

    GeoPolygon polConcave = buildConcaveGeoPolygon(-145.88, -5.13,
        -145.87, -5.13,
        -145.87, -5.12,
        -145.88, -5.12);

    int rel = multiPol.getRelationship(polConvex);
    assertEquals(GeoArea.WITHIN, rel);
    rel = polConvex.getRelationship(multiPol);
    assertEquals(GeoArea.CONTAINS, rel);
    assertEquals(false,multiPol.intersects(polConvex));
    assertEquals(false,polConvex.intersects(multiPol));

    rel = multiPol.getRelationship(polConcave);
    assertEquals(GeoArea.OVERLAPS, rel);
    rel = polConcave.getRelationship(multiPol);
    assertEquals(GeoArea.OVERLAPS, rel);
    assertEquals(false,multiPol.intersects(polConcave));
    assertEquals(false,polConcave.intersects(multiPol));
  }


  /** Test that the delegate gets closed on exception in HandleTrackingFS#onOpen */
  public void testOnOpenThrowsException() throws IOException {
    Path path =
        wrap(createTempDir()); // we are using LeakFS under the hood if we don't get closed the test
    // fails
    FileSystem fs =
        new HandleTrackingFS("test://", path.getFileSystem()) {
          @Override
          protected void onClose(Path path, Object stream) throws IOException {}

          @Override
          protected void onOpen(Path path, Object stream) throws IOException {
            throw new IOException("boom");
          }
        }.getFileSystem(URI.create("file:///"));
    Path dir = new FilterPath(path, fs);

    expectThrows(IOException.class, () -> Files.newOutputStream(dir.resolve("somefile")));

    expectThrows(IOException.class, () -> Files.newByteChannel(dir.resolve("somefile")));

    expectThrows(IOException.class, () -> Files.newInputStream(dir.resolve("somefile")));
    fs.close();

    expectThrows(IOException.class, () -> Files.newDirectoryStream(dir));
    fs.close();
  }


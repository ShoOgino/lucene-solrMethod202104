  boolean doStem(
      char[] word,
      int offset,
      int length,
      WordCase originalCase,
      WordContext context,
      RootProcessor processor) {
    IntsRef forms = dictionary.lookupWord(word, offset, length);
    if (forms != null) {
      for (int i = 0; i < forms.length; i += formStep) {
        int entryId = forms.ints[forms.offset + i];
        if (!acceptCase(originalCase, entryId, word, offset, length)) {
          continue;
        }
        // we can't add this form, it's a pseudostem requiring an affix
        if (dictionary.hasFlag(entryId, dictionary.needaffix)) {
          continue;
        }
        // we can't add this form, it only belongs inside a compound word
        if (!context.isCompound() && dictionary.hasFlag(entryId, dictionary.onlyincompound)) {
          continue;
        }
        if (context.isCompound()) {
          if (context != WordContext.COMPOUND_END
              && dictionary.hasFlag(entryId, dictionary.compoundForbid)) {
            return false;
          }
          if (!dictionary.hasFlag(entryId, dictionary.compoundFlag)
              && !dictionary.hasFlag(entryId, context.requiredFlag(dictionary))) {
            continue;
          }
        }
        if (!processor.processRoot(new CharsRef(word, offset, length), forms, i)) {
          return false;
        }
      }
    }
    try {
      return stem(
          word,
          offset,
          length,
          context,
          -1,
          Dictionary.FLAG_UNSET,
          -1,
          0,
          true,
          false,
          originalCase,
          processor);
    } catch (IOException bogus) {
      throw new RuntimeException(bogus);
    }
  }


  public void testHandleExceptionInConstructor() throws Exception {
    Path path = createTempDir().toRealPath();
    final LeakFS leakFS =
        new LeakFS(path.getFileSystem()) {
          @Override
          public FileChannel newFileChannel(
              Path path, Set<? extends OpenOption> options, FileAttribute<?>... attrs)
              throws IOException {
            return new FilterFileChannel(super.newFileChannel(path, options, attrs)) {
              @Override
              public long size() throws IOException {
                throw new IOException("simulated");
              }
            };
          }
        };
    FileSystem fs = leakFS.getFileSystem(URI.create("file:///"));
    Path wrapped = new FilterPath(path, fs);
    try (Directory dir = new NIOFSDirectory(wrapped)) {
      try (IndexOutput out = dir.createOutput("test.bin", IOContext.DEFAULT)) {
        out.writeString("hello");
      }
      final IOException error =
          expectThrows(IOException.class, () -> dir.openInput("test.bin", IOContext.DEFAULT));
      assertEquals("simulated", error.getMessage());
    }
  }


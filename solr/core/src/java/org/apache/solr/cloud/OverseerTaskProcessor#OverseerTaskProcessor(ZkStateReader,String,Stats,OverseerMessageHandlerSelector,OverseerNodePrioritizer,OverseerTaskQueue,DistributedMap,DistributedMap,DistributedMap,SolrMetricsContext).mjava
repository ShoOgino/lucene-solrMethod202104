  public OverseerTaskProcessor(ZkStateReader zkStateReader, String myId,
                               Stats stats,
                               OverseerMessageHandlerSelector selector,
                               OverseerNodePrioritizer prioritizer,
                               OverseerTaskQueue workQueue,
                               DistributedMap runningMap,
                               DistributedMap completedMap,
                               DistributedMap failureMap,
                               SolrMetricsContext solrMetricsContext) {
    this.zkStateReader = zkStateReader;
    this.myId = myId;
    this.stats = stats;
    this.selector = selector;
    this.prioritizer = prioritizer;
    this.workQueue = workQueue;
    this.runningMap = runningMap;
    this.completedMap = completedMap;
    this.failureMap = failureMap;
    this.runningZKTasks = ConcurrentHashMap.newKeySet();
    this.runningTasks = ConcurrentHashMap.newKeySet();
    this.completedTasks = new ConcurrentHashMap<>();
    thisNode = Utils.getMDCNode();

    overseerTaskProcessorMetricsContext = solrMetricsContext.getChildContext(this);
    overseerTaskProcessorMetricsContext.gauge(() -> workQueue.getZkStats().getQueueLength(), true, "collectionWorkQueueSize", "queue");
  }


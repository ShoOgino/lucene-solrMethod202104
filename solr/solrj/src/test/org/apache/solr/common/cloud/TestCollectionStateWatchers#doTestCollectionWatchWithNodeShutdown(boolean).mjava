  private void doTestCollectionWatchWithNodeShutdown(final boolean shutdownUnusedNode)
    throws Exception {
    
    CloudSolrClient client = cluster.getSolrClient();

    // note: one node in our cluster is unsed by collection
    CollectionAdminRequest.createCollection("testcollection", "config", CLUSTER_SIZE, 1)
        .setPerReplicaState(SolrCloudTestCase.USE_PER_REPLICA_STATE)
        .processAndWait(client, MAX_WAIT_TIMEOUT);

    client.waitForState("testcollection", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS,
                        (n, c) -> DocCollection.isFullyActive(n, c, CLUSTER_SIZE, 1));

    final JettySolrRunner extraJetty = cluster.startJettySolrRunner();
    final JettySolrRunner jettyToShutdown
      = shutdownUnusedNode ? extraJetty : cluster.getJettySolrRunners().get(0);
    final int expectedNodesWithActiveReplicas = CLUSTER_SIZE - (shutdownUnusedNode ? 0 : 1);
    
    cluster.waitForAllNodes(MAX_WAIT_TIMEOUT);
    
    // shutdown a node and check that we get notified about the change
    final CountDownLatch latch = new CountDownLatch(1);
    client.registerCollectionStateWatcher("testcollection", (liveNodes, collectionState) -> {
      int nodesWithActiveReplicas = 0;
      log.info("State changed: {}", collectionState);
      for (Slice slice : collectionState) {
        for (Replica replica : slice) {
          if (replica.isActive(liveNodes))
            nodesWithActiveReplicas++;
        }
      }
      if (liveNodes.size() == CLUSTER_SIZE
          && expectedNodesWithActiveReplicas == nodesWithActiveReplicas) {
        latch.countDown();
        return true;
      }
      return false;
    });

    cluster.stopJettySolrRunner(jettyToShutdown);
    cluster.waitForJettyToStop(jettyToShutdown);
    
    assertTrue("CollectionStateWatcher was never notified of cluster change",
               latch.await(MAX_WAIT_TIMEOUT, TimeUnit.SECONDS));

    waitFor("CollectionStateWatcher wasn't cleared after completion",
            MAX_WAIT_TIMEOUT, TimeUnit.SECONDS,
            () -> client.getZkStateReader().getStateWatchers("testcollection").isEmpty());

  }


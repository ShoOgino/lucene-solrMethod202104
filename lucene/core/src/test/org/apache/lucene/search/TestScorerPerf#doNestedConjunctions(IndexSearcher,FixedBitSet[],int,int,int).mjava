  public int doNestedConjunctions(
      IndexSearcher s, FixedBitSet[] sets, int iter, int maxOuterClauses, int maxClauses)
      throws IOException {
    int ret = 0;
    long nMatches = 0;

    for (int i = 0; i < iter; i++) {
      int oClauses = random().nextInt(maxOuterClauses - 1) + 2;
      BooleanQuery.Builder oq = new BooleanQuery.Builder();
      FixedBitSet result = null;

      for (int o = 0; o < oClauses; o++) {

        int nClauses = random().nextInt(maxClauses - 1) + 2; // min 2 clauses
        BooleanQuery.Builder bq = new BooleanQuery.Builder();
        for (int j = 0; j < nClauses; j++) {
          result = addClause(sets, bq, result);
        }

        oq.add(bq.build(), BooleanClause.Occur.MUST);
      } // outer

      CountingHitCollector hc =
          validate ? new MatchingHitCollector(result) : new CountingHitCollector();
      s.search(oq.build(), hc);
      nMatches += hc.getCount();
      ret += hc.getSum();
      if (validate) assertEquals(result.cardinality(), hc.getCount());
      // System.out.println(hc.getCount());
    }
    if (VERBOSE) System.out.println("Average number of matches=" + (nMatches / iter));
    return ret;
  }


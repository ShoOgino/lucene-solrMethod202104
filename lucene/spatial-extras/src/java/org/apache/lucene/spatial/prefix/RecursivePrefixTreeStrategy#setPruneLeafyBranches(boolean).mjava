  /**
   * An optional hint affecting non-point shapes and tree cells implementing {@link CellCanPrune},
   * otherwise ignored.
   *
   * <p>It will prune away a complete set sibling leaves to their parent (recursively), resulting in
   * ~20-50% fewer indexed cells, and consequently that much less disk and that much faster
   * indexing. So if it's a quad tree and all 4 sub-cells are there marked as a leaf, then they will
   * be removed (pruned) and the parent is marked as a leaf instead. This occurs recursively on up.
   * Unfortunately, the current implementation will buffer all cells to do this, so consider
   * disabling for high precision (low distErrPct) shapes. (default=true)
   */
  public void setPruneLeafyBranches(boolean pruneLeafyBranches) {
    this.pruneLeafyBranches = pruneLeafyBranches;
  }


  private void doRangeFacetWithRanges(Client client) throws Exception {
    client.queryDefaults().set("cache", cache);
    client.deleteByQuery("*:*", null);
    indexSimple(client);

    final SolrParams p = params("q", "*:*", "rows", "0");
    // with lower and upper include
    client.testJQ(params(p, "json.facet"
        , "{price:{type : range,field : num_i, ranges:[{range:\"  [-5,7] \"}]}}"),
        "facets=={count:6, price:{buckets:[{val:\"[-5,7]\",count:5}]}}");

    // with lower include and upper exclude
    client.testJQ(params(p, "json.facet"
        , "{price:{type : range,field : num_i,ranges:[{range:\"[-5,7)\"}]}}"),
        "facets=={count:6, price:{buckets:[{val:\"[-5,7)\",count:4}]}}");

    // with lower exclude and upper include
    client.testJQ(params(p, "json.facet"
        , "{price:{type : range,field : num_i,ranges:[{range:\"(-5,7]\"}]}}"),
        "facets=={count:6, price:{buckets:[{val:\"(-5,7]\",count:3}]}}");

    // with lower and upper exclude
    client.testJQ(params(p, "json.facet"
        , "{price:{type : range,field : num_i,ranges:[{range:\"(-5,7)\"}]}}"),
        "facets=={count:6, price:{buckets:[{val:\"(-5,7)\",count:2}]}}");

    // with other and include, they are not supported
    // but wouldn't throw any error as they are not consumed
    client.testJQ(params(p, "json.facet"
        , "{price:{type : range,field : num_i,ranges:[{range:\"(-5,7)\"}],include:\"lower\",other:[\"after\"]}}"),
        "facets=={count:6, price:{buckets:[{val:\"(-5,7)\",count:2}]}}");

    // with mincount>0
    client.testJQ(
        params(p, "json.facet", "{price:{type : range,field : num_i,mincount:3," +
            "ranges:[{range:\"(-5,7)\"},{range:\"(-5,7]\"}]}}"
        ),
        "facets=={count:6, price:{buckets:[{val:\"(-5,7]\",count:3}]}}");

    // with multiple ranges
    client.testJQ(
        params(p, "json.facet", "{price:{type : range,field : num_i," +
            "ranges:[{range:\"(-5,7)\"},{range:\"(-5,7]\"}]}}"
        ),
        "facets=={count:6, price:{buckets:[{val:\"(-5,7)\",count:2},{val:\"(-5,7]\",count:3}]}}");

    // with * as one of the values
    client.testJQ(params(p, "json.facet"
        , "{price:{type : range,field : num_i,ranges:[{range:\"(*,10]\"}]}}"),
        "facets=={count:6, price:{buckets:[{val:\"(*,10]\",count:5}]}}");
    client.testJQ(params(p, "json.facet"
        , "{price:{type : range,field : num_i,ranges:[{range:\"[-5,*)\"}]}}"),
        "facets=={count:6, price:{buckets:[{val:\"[-5,*)\",count:5}]}}");
    client.testJQ(params(p, "json.facet"
        , "{price:{type : range,field : num_i,ranges:[{range:\"[*,*]\"}]}}"),
        "facets=={count:6, price:{buckets:[{val:\"[*,*]\",count:5}]}}");
  }


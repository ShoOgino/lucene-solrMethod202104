  private void validateConfig(PayloadObj<PluginMeta> payload, PluginMeta info) {
    if (info.klass.indexOf(':') > 0) {
      if (info.version == null) {
        payload.addError("Using package. must provide a packageVersion");
        return;
      }
    }
    List<String> errs = new ArrayList<>();
    ContainerPluginsRegistry.ApiInfo apiInfo = coreContainer.getContainerPluginsRegistry().createInfo(info, errs);
    if (!errs.isEmpty()) {
      for (String err : errs) payload.addError(err);
      return;
    }
    AnnotatedApi api = null ;
    try {
      apiInfo.init();
    } catch (Exception e) {
      log.error("Error instantiating plugin ", e);
      errs.add(e.getMessage());
      return;
    } finally {
      closeWhileHandlingException(api);
    }
  }


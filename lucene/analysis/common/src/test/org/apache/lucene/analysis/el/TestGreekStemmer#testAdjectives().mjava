  public void testAdjectives() throws Exception {
    // ending with -ής, -ές/-είς, -ή
    checkOneTerm(a, "συνεχής", "συνεχ");
    checkOneTerm(a, "συνεχούς", "συνεχ");
    checkOneTerm(a, "συνεχή", "συνεχ");
    checkOneTerm(a, "συνεχών", "συνεχ");
    checkOneTerm(a, "συνεχείς", "συνεχ");
    checkOneTerm(a, "συνεχές", "συνεχ");

    // ending with -ης, -ες/-εις, -η
    checkOneTerm(a, "συνήθης", "συνηθ");
    checkOneTerm(a, "συνήθους", "συνηθ");
    checkOneTerm(a, "συνήθη", "συνηθ");
    // note: doesn't conflate
    checkOneTerm(a, "συνήθεις", "συν");
    checkOneTerm(a, "συνήθων", "συνηθ");
    checkOneTerm(a, "σύνηθες", "συνηθ");

    // ending with -υς, -υ/-εις, -ια
    checkOneTerm(a, "βαθύς", "βαθ");
    checkOneTerm(a, "βαθέος", "βαθε");
    checkOneTerm(a, "βαθύ", "βαθ");
    checkOneTerm(a, "βαθείς", "βαθ");
    checkOneTerm(a, "βαθέων", "βαθ");

    checkOneTerm(a, "βαθιά", "βαθ");
    checkOneTerm(a, "βαθιάς", "βαθι");
    checkOneTerm(a, "βαθιές", "βαθι");
    checkOneTerm(a, "βαθιών", "βαθ");

    checkOneTerm(a, "βαθέα", "βαθε");

    // comparative/superlative
    checkOneTerm(a, "ψηλός", "ψηλ");
    checkOneTerm(a, "ψηλότερος", "ψηλ");
    checkOneTerm(a, "ψηλότατος", "ψηλ");

    checkOneTerm(a, "ωραίος", "ωραι");
    checkOneTerm(a, "ωραιότερος", "ωραι");
    checkOneTerm(a, "ωραιότατος", "ωραι");

    checkOneTerm(a, "επιεικής", "επιεικ");
    checkOneTerm(a, "επιεικέστερος", "επιεικ");
    checkOneTerm(a, "επιεικέστατος", "επιεικ");
  }


  @Override
  public <T extends Document> List<Cluster<T>> cluster(Stream<? extends T> documentStream,
                                                       LanguageComponents languageComponents) {
    List<T> documents = documentStream.collect(Collectors.toList());
    if (docsInCluster.get() > documents.size()) {
      throw new AssertionError();
    }

    Supplier<T> docSupplier = new Supplier<>() {
      Iterator<T> i = documents.iterator();

      @Override
      public T get() {
        if (!i.hasNext()) {
          i = documents.iterator();
        }
        return i.next();
      }
    };

    return createClusters(hierarchyDepth.get(), "Cluster ", docSupplier);
  }


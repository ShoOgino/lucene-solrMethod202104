  /**
   * Returns the trigonometric cosine of an angle.
   *
   * <p>Error is around 1E-15.
   *
   * <p>Special cases:
   *
   * <ul>
   *   <li>If the argument is {@code NaN} or an infinity, then the result is {@code NaN}.
   * </ul>
   *
   * @param a an angle, in radians.
   * @return the cosine of the argument.
   * @see Math#cos(double)
   */
  public static double cos(double a) {
    if (a < 0.0) {
      a = -a;
    }
    if (a > SIN_COS_MAX_VALUE_FOR_INT_MODULO) {
      return Math.cos(a);
    }
    // index: possibly outside tables range.
    int index = (int) (a * SIN_COS_INDEXER + 0.5);
    double delta = (a - index * SIN_COS_DELTA_HI) - index * SIN_COS_DELTA_LO;
    // Making sure index is within tables range.
    // Last value of each table is the same than first, so we ignore it (tabs size minus one) for
    // modulo.
    index &= (SIN_COS_TABS_SIZE - 2); // index % (SIN_COS_TABS_SIZE-1)
    double indexCos = cosTab[index];
    double indexSin = sinTab[index];
    return indexCos
        + delta
            * (-indexSin
                + delta
                    * (-indexCos * ONE_DIV_F2
                        + delta * (indexSin * ONE_DIV_F3 + delta * indexCos * ONE_DIV_F4)));
  }


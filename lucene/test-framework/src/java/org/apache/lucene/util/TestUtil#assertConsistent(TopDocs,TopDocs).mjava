  /** Assert that the given {@link TopDocs} have the same top docs and consistent hit counts. */
  public static void assertConsistent(TopDocs expected, TopDocs actual) {
    Assert.assertEquals(
        "wrong total hits", expected.totalHits.value == 0, actual.totalHits.value == 0);
    if (expected.totalHits.relation == TotalHits.Relation.EQUAL_TO) {
      if (actual.totalHits.relation == TotalHits.Relation.EQUAL_TO) {
        Assert.assertEquals("wrong total hits", expected.totalHits.value, actual.totalHits.value);
      } else {
        Assert.assertTrue("wrong total hits", expected.totalHits.value >= actual.totalHits.value);
      }
    } else if (actual.totalHits.relation == TotalHits.Relation.EQUAL_TO) {
      Assert.assertTrue("wrong total hits", expected.totalHits.value <= actual.totalHits.value);
    }
    Assert.assertEquals("wrong hit count", expected.scoreDocs.length, actual.scoreDocs.length);
    for (int hitIDX = 0; hitIDX < expected.scoreDocs.length; hitIDX++) {
      final ScoreDoc expectedSD = expected.scoreDocs[hitIDX];
      final ScoreDoc actualSD = actual.scoreDocs[hitIDX];
      Assert.assertEquals("wrong hit docID", expectedSD.doc, actualSD.doc);
      Assert.assertEquals("wrong hit score", expectedSD.score, actualSD.score, 0.0);
      if (expectedSD instanceof FieldDoc) {
        Assert.assertTrue(actualSD instanceof FieldDoc);
        Assert.assertArrayEquals(
            "wrong sort field values",
            ((FieldDoc) expectedSD).fields,
            ((FieldDoc) actualSD).fields);
      } else {
        Assert.assertFalse(actualSD instanceof FieldDoc);
      }
    }
  }


  @Test
  public void test() throws Exception {
    CloudSolrClient solrClient = cluster.getSolrClient();
    solrClient.setDefaultCollection(COLLECTION_NAME);
    for (int i=0; i<10; i++)  {
      SolrInputDocument doc = new SolrInputDocument();
      doc.addField("id", String.valueOf(i));
      solrClient.add(doc);
    }
    solrClient.commit();

    // find the leader node
    Replica replica = solrClient.getZkStateReader().getLeaderRetry(COLLECTION_NAME, "shard1");
    JettySolrRunner replicaJetty = null;
    List<JettySolrRunner> jettySolrRunners = cluster.getJettySolrRunners();
    for (JettySolrRunner jettySolrRunner : jettySolrRunners) {
      int port = jettySolrRunner.getBaseUrl().getPort();
      if (replica.getBaseUrl().contains(":" + port))  {
        replicaJetty = jettySolrRunner;
        break;
      }
    }

    // kill the leader
    replicaJetty.stop();

    // add a replica (asynchronously)
    CollectionAdminRequest.AddReplica addReplica = CollectionAdminRequest.addReplicaToShard(COLLECTION_NAME, "shard1");
    String asyncId = addReplica.processAsync(solrClient);

    // wait a bit
    Thread.sleep(1000);

    // bring the old leader node back up
    replicaJetty.start();

    // wait until everyone is active
    solrClient.waitForState(COLLECTION_NAME, DEFAULT_TIMEOUT, TimeUnit.SECONDS,
        (n, c) -> DocCollection.isFullyActive(n, c, 1, 2));

    // now query each replica and check for consistency
    assertConsistentReplicas(solrClient, solrClient.getZkStateReader().getClusterState().getCollection(COLLECTION_NAME).getSlice("shard1"));

    // sanity check that documents still exist
    QueryResponse response = solrClient.query(new SolrQuery("*:*"));
    assertEquals("Indexed documents not found", 10, response.getResults().getNumFound());
  }


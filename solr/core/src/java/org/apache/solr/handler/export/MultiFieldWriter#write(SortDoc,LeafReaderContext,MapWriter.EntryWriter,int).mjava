  public boolean write(SortDoc sortDoc, LeafReaderContext readerContext, MapWriter.EntryWriter out, int fieldIndex) throws IOException {
    if (this.fieldType.isPointField()) {
      int readerOrd = readerContext.ord;
      SortedNumericDocValues vals = null;
      if(docValuesCache.containsKey(readerOrd)) {
        SortedNumericDocValues sortedNumericDocValues = (SortedNumericDocValues) docValuesCache.get(readerOrd);
        if(sortedNumericDocValues.docID() < sortDoc.docId) {
          //We have not advanced beyond the current docId so we can use this docValues.
          vals = sortedNumericDocValues;
        }
      }

      if(vals == null) {
        vals = DocValues.getSortedNumeric(readerContext.reader(), this.field);
        docValuesCache.put(readerOrd, vals);
      }

      if (!vals.advanceExact(sortDoc.docId)) return false;

      final SortedNumericDocValues docVals = vals;

      out.put(this.field,
          (IteratorWriter) w -> {
            for (int i = 0, count = docVals.docValueCount(); i < count; i++) {
              w.add(bitsToValue.apply(docVals.nextValue()));
            }
          });
      return true;
    } else {
      int readerOrd = readerContext.ord;
      SortedSetDocValues vals = null;
      if(docValuesCache.containsKey(readerOrd)) {
        SortedSetDocValues sortedSetDocValues = (SortedSetDocValues) docValuesCache.get(readerOrd);
        if(sortedSetDocValues.docID() < sortDoc.docId) {
          //We have not advanced beyond the current docId so we can use this docValues.
          vals = sortedSetDocValues;
        }
      }

      if(vals == null) {
        vals = DocValues.getSortedSet(readerContext.reader(), this.field);
        docValuesCache.put(readerOrd, vals);
      }

      if (vals.advance(sortDoc.docId) != sortDoc.docId) return false;

      final SortedSetDocValues docVals = vals;

      out.put(this.field,
          (IteratorWriter) w -> {
            long o;
            while((o = docVals.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {
              BytesRef ref = docVals.lookupOrd(o);
              fieldType.indexedToReadable(ref, cref);
              IndexableField f = fieldType.createField(schemaField, cref.toString());
              if (f == null) w.add(cref.toString());
              else w.add(fieldType.toObject(f));
            }
          });
      return true;
    }

  }


  @Test
  public void testSegmentsAreWrapped() throws IOException {
    try (final Directory dir = newDirectory()) {
      // first create random merge specs
      final MergePolicy.MergeSpecification msM = createRandomMergeSpecification(dir);
      final MergePolicy.MergeSpecification msF = createRandomMergeSpecification(dir);
      final MergePolicy.MergeSpecification msD = createRandomMergeSpecification(dir);
      // secondly, pass them to the predetermined merge policy constructor
      final MergePolicy originalMP = new PredeterminedMergePolicy(msM, msF, msD);
      // thirdly wrap the predetermined merge policy
      final MergePolicy oneMergeWrappingMP =
          new OneMergeWrappingMergePolicy(originalMP, merge -> new WrappedOneMerge(merge));
      // finally, ask for merges and check what we got
      implTestSegmentsAreWrapped(msM, oneMergeWrappingMP.findMerges(null, null, null));
      implTestSegmentsAreWrapped(msF, oneMergeWrappingMP.findForcedMerges(null, 0, null, null));
      implTestSegmentsAreWrapped(msD, oneMergeWrappingMP.findForcedDeletesMerges(null, null));
    }
  }


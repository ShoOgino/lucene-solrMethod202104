  @Test
  public void testGeoCompositePolygon2() {

    //POLYGON ((19.845091 -60.452631, 20.119948 -61.655652, 23.207901 -61.453298, 22.820804 -60.257713, 21 -61,19.845091 -60.452631))
    GeoPolygon originalConvexPol = buildGeoPolygon(19.84509, -60.452631,
        20.119948, -61.655652,
        23.207901, -61.453298,
        22.820804, -60.257713,
        21, -61);

    //POLYGON ((19.845091 -60.452631, 21 -61,22.820804 -60.257713,23.207901 -61.453298, 20.119948 -61.655652, 19.845091 -60.452631))
    GeoPolygon originalConcavePol = buildGeoPolygon(19.84509, -60.452631,
        21, -61,
        22.820804, -60.257713,
        23.207901, -61.453298,
        20.119948, -61.655652);

    //POLYGON ((20.9 -60.8, 21.1 -60.8, 21.1 -60.6, 20.9  -60.6,20.9 -60.8))
    GeoPolygon polConvex = buildGeoPolygon(20.9, -60.8,
        21.1, -60.8,
        21.1, -60.6,
        20.9, -60.6,
        20.9, -60.6);

    GeoPolygon polConcave = buildConcaveGeoPolygon(20.9, -60.8,
        21.1, -60.8,
        21.1, -60.6,
        20.9, -60.6);

    //convex
    int rel = originalConvexPol.getRelationship(polConvex);
    assertEquals(GeoArea.DISJOINT, rel);
    rel = polConvex.getRelationship(originalConvexPol);
    assertEquals(GeoArea.DISJOINT, rel);

    rel = originalConvexPol.getRelationship(polConcave);
    assertEquals(GeoArea.CONTAINS, rel);
    rel = polConcave.getRelationship(originalConvexPol);
    assertEquals(GeoArea.WITHIN, rel);

    //concave
    rel = originalConcavePol.getRelationship(polConvex);
    assertEquals(GeoArea.WITHIN, rel);
    rel = polConvex.getRelationship(originalConcavePol);
    assertEquals(GeoArea.CONTAINS, rel);

    rel = originalConcavePol.getRelationship(polConcave);
    assertEquals(GeoArea.OVERLAPS, rel);
    rel = polConcave.getRelationship(originalConcavePol);
    assertEquals(GeoArea.OVERLAPS, rel);
  }


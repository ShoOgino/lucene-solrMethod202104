  /**
   * Get shard leader properties, with retry if none exist.
   */
  public Replica getLeaderRetry(String collection, String shard, int timeout) throws InterruptedException {
    AtomicReference<DocCollection> coll = new AtomicReference<>();
    AtomicReference<Replica> leader = new AtomicReference<>();
    try {
      waitForState(collection, timeout, TimeUnit.MILLISECONDS, (n, c) -> {
        if (c == null)
          return false;
        coll.set(c);
        Replica l = getLeader(n, c, shard);
        if (l != null) {
          log.debug("leader found for {}/{} to be {}", collection, shard, l);
          leader.set(l);
          return true;
        }
        return false;
      });
    } catch (TimeoutException e) {
      throw new SolrException(ErrorCode.SERVICE_UNAVAILABLE, "No registered leader was found after waiting for "
          + timeout + "ms " + ", collection: " + collection + " slice: " + shard + " saw state=" + clusterState.getCollectionOrNull(collection)
          + " with live_nodes=" + clusterState.getLiveNodes());
    }
    return leader.get();
  }


  /**
   * Returns a leaf node for a particular term and weight
   *
   * <p>The weight must be greater than 0
   */
  public static QueryTree term(String field, BytesRef term, double weight) {
    return new QueryTree() {
      @Override
      public double weight() {
        if (weight <= 0) {
          throw new IllegalArgumentException("Term weights must be greater than 0");
        }
        return weight;
      }

      @Override
      public void collectTerms(BiConsumer<String, BytesRef> termCollector) {
        termCollector.accept(field, term);
      }

      @Override
      public boolean advancePhase(double minWeight) {
        return false;
      }

      @Override
      public String toString(int depth) {
        return space(depth) + field + ":" + term.utf8ToString() + "^" + weight;
      }
    };
  }


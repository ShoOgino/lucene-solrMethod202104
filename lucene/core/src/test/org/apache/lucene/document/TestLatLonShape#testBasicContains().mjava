  public void testBasicContains() throws Exception {
    Directory dir = newDirectory();
    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);

    // add a random polygon document
    double[] polyLats = new double[] {-10, -10, 10, 10, -10};
    double[] polyLons = new double[] {-10, 10, 10, -10, -10};
    Polygon p = new Polygon(polyLats, polyLons);
    Document document = new Document();
    addPolygonsToDoc(FIELDNAME, document, p);
    writer.addDocument(document);

    // add a line document
    document = new Document();
    // add a line string
    double lats[] = new double[p.numPoints() - 1];
    double lons[] = new double[p.numPoints() - 1];
    for (int i = 0; i < lats.length; ++i) {
      lats[i] = p.getPolyLat(i);
      lons[i] = p.getPolyLon(i);
    }
    Line l = new Line(lats, lons);
    addLineToDoc(FIELDNAME, document, l);
    writer.addDocument(document);

    ////// search /////
    // search a Polygon
    IndexReader reader = writer.getReader();
    writer.close();
    IndexSearcher searcher = newSearcher(reader);
    polyLats = new double[] {-5, -5, 5, 5, -5};
    polyLons = new double[] {-5, 5, 5, -5, -5};
    Polygon query = new Polygon(polyLats, polyLons);
    Query q = LatLonShape.newPolygonQuery(FIELDNAME, QueryRelation.CONTAINS, query);
    assertEquals(1, searcher.count(q));

    // search a bounding box
    searcher = newSearcher(reader);
    q = LatLonShape.newBoxQuery(FIELDNAME, QueryRelation.CONTAINS, 0, 0, 0, 0);
    assertEquals(1, searcher.count(q));
    IOUtils.close(reader, dir);
  }


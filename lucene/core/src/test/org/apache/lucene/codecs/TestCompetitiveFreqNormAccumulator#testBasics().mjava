  public void testBasics() {
    CompetitiveImpactAccumulator acc = new CompetitiveImpactAccumulator();
    Set<Impact> expected = new TreeSet<>(Comparator.comparingInt(i -> i.freq));

    acc.add(3, 5);
    expected.add(new Impact(3, 5));
    assertEquals(List.copyOf(expected), List.copyOf(acc.getCompetitiveFreqNormPairs()));

    acc.add(6, 11);
    expected.add(new Impact(6, 11));
    assertEquals(List.copyOf(expected), List.copyOf(acc.getCompetitiveFreqNormPairs()));

    acc.add(10, 13);
    expected.add(new Impact(10, 13));
    assertEquals(List.copyOf(expected), List.copyOf(acc.getCompetitiveFreqNormPairs()));

    acc.add(1, 2);
    expected.add(new Impact(1, 2));
    assertEquals(List.copyOf(expected), List.copyOf(acc.getCompetitiveFreqNormPairs()));

    acc.add(7, 9);
    expected.remove(new Impact(6, 11));
    expected.add(new Impact(7, 9));
    assertEquals(List.copyOf(expected), List.copyOf(acc.getCompetitiveFreqNormPairs()));

    acc.add(8, 2);
    expected.clear();
    expected.add(new Impact(10, 13));
    expected.add(new Impact(8, 2));
    assertEquals(List.copyOf(expected), List.copyOf(acc.getCompetitiveFreqNormPairs()));
  }


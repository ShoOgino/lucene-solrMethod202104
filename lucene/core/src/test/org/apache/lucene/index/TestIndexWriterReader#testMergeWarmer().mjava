  public void testMergeWarmer() throws Exception {
    Directory dir1 = getAssertNoDeletesDirectory(newDirectory());
    // Enroll warmer
    AtomicInteger warmCount = new AtomicInteger();
    IndexWriter writer =
        new IndexWriter(
            dir1,
            newIndexWriterConfig(new MockAnalyzer(random()))
                .setMaxBufferedDocs(2)
                .setMaxFullFlushMergeWaitMillis(0)
                .setMergedSegmentWarmer((leafReader) -> warmCount.incrementAndGet())
                .setMergeScheduler(new ConcurrentMergeScheduler())
                .setMergePolicy(newLogMergePolicy()));

    // create the index
    createIndexNoClose(false, "test", writer);

    // get a reader to put writer into near real-time mode
    IndexReader r1 = writer.getReader();

    ((LogMergePolicy) writer.getConfig().getMergePolicy()).setMergeFactor(2);

    int num = TEST_NIGHTLY ? atLeast(100) : atLeast(10);
    for (int i = 0; i < num; i++) {
      writer.addDocument(DocHelper.createDocument(i, "test", 4));
    }
    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).sync();

    assertTrue(warmCount.get() > 0);
    final int count = warmCount.get();

    writer.addDocument(DocHelper.createDocument(17, "test", 4));
    writer.forceMerge(1);
    assertTrue(warmCount.get() > count);

    writer.close();
    r1.close();
    dir1.close();
  }


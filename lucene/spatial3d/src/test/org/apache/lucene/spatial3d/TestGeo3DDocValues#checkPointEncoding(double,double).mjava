  void checkPointEncoding(final double latitude, final double longitude) {
    PlanetModel planetModel =
        RandomPicks.randomFrom(
            random(), new PlanetModel[] {PlanetModel.WGS84, PlanetModel.CLARKE_1866});
    final GeoPoint point =
        new GeoPoint(
            planetModel, Geo3DUtil.fromDegrees(latitude), Geo3DUtil.fromDegrees(longitude));
    long pointValue = planetModel.getDocValueEncoder().encodePoint(point);
    final double x = planetModel.getDocValueEncoder().decodeXValue(pointValue);
    final double y = planetModel.getDocValueEncoder().decodeYValue(pointValue);
    final double z = planetModel.getDocValueEncoder().decodeZValue(pointValue);
    final GeoPoint pointR = new GeoPoint(x, y, z);
    // Check whether stable
    pointValue = planetModel.getDocValueEncoder().encodePoint(x, y, z);
    assertEquals(x, planetModel.getDocValueEncoder().decodeXValue(pointValue), 0.0);
    assertEquals(y, planetModel.getDocValueEncoder().decodeYValue(pointValue), 0.0);
    assertEquals(z, planetModel.getDocValueEncoder().decodeZValue(pointValue), 0.0);
    // Check whether has some relationship with original point
    assertEquals(0.0, point.arcDistance(pointR), 0.02);
  }


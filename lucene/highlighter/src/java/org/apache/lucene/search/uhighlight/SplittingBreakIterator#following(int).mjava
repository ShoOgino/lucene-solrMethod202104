  @Override
  public int following(int offset) {
    // if the offset is not in this slice, update the slice
    if (offset + 1 < sliceStartIdx || offset + 1 > sliceEndIdx) {
      if (offset == text.length()) { // DONE condition
        last(); // because https://bugs.openjdk.java.net/browse/JDK-8015110
        return DONE;
      }
      sliceStartIdx = text.lastIndexOf(sliceChar, offset); // no +1
      if (sliceStartIdx == -1) {
        sliceStartIdx = 0;
      } else {
        sliceStartIdx++; // move past separator
      }
      sliceEndIdx = text.indexOf(sliceChar, Math.max(offset + 1, sliceStartIdx));
      if (sliceEndIdx == -1) {
        sliceEndIdx = text.length();
      }
      if (sliceStartIdx != sliceEndIdx) { // otherwise, adjacent separator or separator at end
        baseIter.setText(text.substring(sliceStartIdx, sliceEndIdx));
      }
    }

    // lookup following() in this slice:
    if (sliceStartIdx == sliceEndIdx) {
      return current = offset + 1;
    } else {
      // note: following() can never be first() if the first character is a boundary (it usually
      // is).
      //   So we have to check if we should call first() instead of following():
      if (offset == sliceStartIdx - 1) {
        // the first boundary following this offset is the very first boundary in this slice
        return current = sliceStartIdx + baseIter.first();
      } else {
        return current = sliceStartIdx + baseIter.following(offset - sliceStartIdx);
      }
    }
  }


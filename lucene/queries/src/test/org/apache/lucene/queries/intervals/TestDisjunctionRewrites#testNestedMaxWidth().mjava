  public void testNestedMaxWidth() {
    // maxwidth does not automatically pull up disjunctions at construction time, so we need to
    // check
    // that it does the right thing if wrapped by something that does need exact internal accounting
    // PHRASE(a, MAXWIDTH(4, OR(ORDERED(b, c), ORDERED(d, e))), f)
    // => or(PHRASE(a, MAXWIDTH(4, ORDERED(b, c)), f), PHRASE(a, MAXWIDTH(4, ORDERED(d, e)), f))
    IntervalsSource actual =
        phrase(
            term("a"),
            maxwidth(4, or(ordered(term("b"), term("c")), ordered(term("d"), term("e")))),
            term("f"));
    IntervalsSource expected =
        or(
            phrase(term("a"), maxwidth(4, ordered(term("b"), term("c"))), term("f")),
            phrase(term("a"), maxwidth(4, ordered(term("d"), term("e"))), term("f")));
    assertEquals(expected, actual);
  }


  /**
   * Returns a token stream generated from a {@link Terms}. This can be used to feed the highlighter
   * with a pre-parsed token stream. The {@link Terms} must have offsets available. If there are no
   * positions available, all tokens will have position increments reflecting adjacent tokens, or
   * coincident when terms share a start offset. If there are stopwords filtered from the index, you
   * probably want to ensure term vectors have positions so that phrase queries won't match across
   * stopwords.
   *
   * @throws IllegalArgumentException if no offsets are available
   */
  @Deprecated // maintenance reasons LUCENE-6445
  public static TokenStream getTokenStream(final Terms tpv) throws IOException {

    if (!tpv.hasOffsets()) {
      throw new IllegalArgumentException("Highlighting requires offsets from the TokenStream.");
      // TokenStreamFromTermVector can handle a lack of offsets if there are positions. But
      // highlighters require offsets, so we insist here.
    }

    return new TokenStreamFromTermVector(tpv, -1); // TODO propagate maxStartOffset; see LUCENE-6445
  }


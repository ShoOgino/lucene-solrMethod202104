  private void buildSortedSet() throws IOException {
    final Comparator<CollectedSearchGroup<?>> comparator =
        new Comparator<CollectedSearchGroup<?>>() {
          @Override
          public int compare(CollectedSearchGroup<?> o1, CollectedSearchGroup<?> o2) {
            for (int compIDX = 0; ; compIDX++) {
              FieldComparator<?> fc = comparators[compIDX];
              final int c = reversed[compIDX] * fc.compare(o1.comparatorSlot, o2.comparatorSlot);
              if (c != 0) {
                return c;
              } else if (compIDX == compIDXEnd) {
                return o1.topDoc - o2.topDoc;
              }
            }
          }
        };

    orderedGroups = new TreeSet<>(comparator);
    orderedGroups.addAll(groupMap.values());
    assert orderedGroups.size() > 0;

    for (LeafFieldComparator fc : leafComparators) {
      fc.setBottom(orderedGroups.last().comparatorSlot);
    }
  }


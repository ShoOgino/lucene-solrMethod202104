  private JPanel initCustomAnalyzerHeaderPanel() {
    JPanel panel = new JPanel(new FlowLayout(FlowLayout.LEADING));
    panel.setOpaque(false);

    panel.add(new JLabel(MessageUtils.getLocalizedMessage("analysis.label.config_dir")));
    confDirTF.setColumns(30);
    confDirTF.setPreferredSize(new Dimension(200, 30));
    panel.add(confDirTF);
    confDirBtn.setText(
        FontUtils.elegantIconHtml(
            "&#x6e;", MessageUtils.getLocalizedMessage("analysis.button.browse")));
    confDirBtn.setFont(StyleConstants.FONT_BUTTON_LARGE);
    confDirBtn.setMargin(new Insets(3, 3, 3, 3));
    confDirBtn.addActionListener(listeners::chooseConfigDir);
    panel.add(confDirBtn);
    buildBtn.setText(
        FontUtils.elegantIconHtml(
            "&#xe102;", MessageUtils.getLocalizedMessage("analysis.button.build_analyzser")));
    buildBtn.setFont(StyleConstants.FONT_BUTTON_LARGE);
    buildBtn.setMargin(new Insets(3, 3, 3, 3));
    buildBtn.addActionListener(listeners::buildAnalyzer);
    panel.add(buildBtn);
    loadJarLbl.setText(MessageUtils.getLocalizedMessage("analysis.hyperlink.load_jars"));
    loadJarLbl.addMouseListener(
        new MouseAdapter() {
          @Override
          public void mouseClicked(MouseEvent e) {
            listeners.loadExternalJars(e);
          }
        });
    panel.add(FontUtils.toLinkText(loadJarLbl));

    return panel;
  }


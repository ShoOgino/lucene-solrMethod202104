  public void testInconsistentDeletes() throws IOException {
    final Directory dir = newDirectory();
    final IndexWriterConfig iwc = newIndexWriterConfig();
    iwc.setMergePolicy(NoMergePolicy.INSTANCE); // so that deletions don't trigger merges
    final RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);

    List<Document> block = new ArrayList<>();
    final int numChildren = TestUtil.nextInt(random(), 1, 3);
    for (int i = 0; i < numChildren; ++i) {
      Document doc = new Document();
      doc.add(new StringField("child", Integer.toString(i), Store.NO));
      block.add(doc);
    }
    Document parent = new Document();
    parent.add(new StringField("parent", "true", Store.NO));
    block.add(parent);
    w.addDocuments(block);

    if (random().nextBoolean()) {
      w.deleteDocuments(new Term("parent", "true"));
    } else {
      // delete any of the children
      w.deleteDocuments(new Term("child", Integer.toString(random().nextInt(numChildren))));
    }

    final IndexReader reader = w.getReader();
    w.close();

    BitSetProducer parentsFilter =
        new QueryBitSetProducer(new TermQuery(new Term("parent", "true")));
    try {
      expectThrows(IllegalStateException.class, () -> CheckJoinIndex.check(reader, parentsFilter));
    } finally {
      reader.close();
      dir.close();
    }
  }


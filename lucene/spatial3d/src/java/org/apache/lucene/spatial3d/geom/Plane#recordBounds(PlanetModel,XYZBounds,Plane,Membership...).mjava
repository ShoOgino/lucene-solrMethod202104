  /**
   * Accumulate (x,y,z) bounds information for this plane, intersected with another and the world.
   * Updates min/max information using intersection points found. These include the error envelope
   * for the planes (D +/- MINIMUM_RESOLUTION).
   *
   * @param planetModel is the planet model to use in determining bounds.
   * @param boundsInfo is the xyz info to update with additional bounding information.
   * @param p is the other plane.
   * @param bounds are the surfaces delineating what's inside the shape.
   */
  public void recordBounds(
      final PlanetModel planetModel,
      final XYZBounds boundsInfo,
      final Plane p,
      final Membership... bounds) {
    findIntersectionBounds(planetModel, boundsInfo, p, bounds);
  }


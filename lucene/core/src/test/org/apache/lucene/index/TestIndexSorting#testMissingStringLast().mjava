  public void testMissingStringLast() throws Exception {
    for (boolean reverse : new boolean[] {true, false}) {
      Directory dir = newDirectory();
      IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));
      SortField sortField = new SortField("foo", SortField.Type.STRING, reverse);
      sortField.setMissingValue(SortField.STRING_LAST);
      Sort indexSort = new Sort(sortField);
      iwc.setIndexSort(indexSort);
      IndexWriter w = new IndexWriter(dir, iwc);
      Document doc = new Document();
      doc.add(new SortedDocValuesField("foo", new BytesRef("zzz")));
      w.addDocument(doc);
      // so we get more than one segment, so that forceMerge actually does merge, since we only get
      // a sorted segment by merging:
      w.commit();

      // missing
      w.addDocument(new Document());
      w.commit();

      doc = new Document();
      doc.add(new SortedDocValuesField("foo", new BytesRef("mmm")));
      w.addDocument(doc);
      w.forceMerge(1);

      DirectoryReader r = DirectoryReader.open(w);
      LeafReader leaf = getOnlyLeafReader(r);
      assertEquals(3, leaf.maxDoc());
      SortedDocValues values = leaf.getSortedDocValues("foo");
      if (reverse) {
        assertEquals(1, values.nextDoc());
        assertEquals("zzz", values.binaryValue().utf8ToString());
        assertEquals(2, values.nextDoc());
        assertEquals("mmm", values.binaryValue().utf8ToString());
      } else {
        assertEquals(0, values.nextDoc());
        assertEquals("mmm", values.binaryValue().utf8ToString());
        assertEquals(1, values.nextDoc());
        assertEquals("zzz", values.binaryValue().utf8ToString());
      }
      assertEquals(NO_MORE_DOCS, values.nextDoc());
      r.close();
      w.close();
      dir.close();
    }
  }


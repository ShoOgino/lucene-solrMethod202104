  @Override
  public final boolean incrementToken() throws IOException {
    while (true) {
      if (curTermBuffer == null) {
        if (!input.incrementToken()) {
          return false;
        }
        state = captureState();

        curTermLength = termAtt.length();
        curTermCodePointCount = Character.codePointCount(termAtt, 0, curTermLength);
        curPosIncr += posIncrAtt.getPositionIncrement();

        if (preserveOriginal && curTermCodePointCount < minGram) {
          // Token is shorter than minGram, but we'd still like to keep it.
          posIncrAtt.setPositionIncrement(curPosIncr);
          curPosIncr = 0;
          return true;
        }

        curTermBuffer = termAtt.buffer().clone();
        curGramSize = minGram;
      }

      if (curGramSize <= curTermCodePointCount) {
        if (curGramSize <= maxGram) { // curGramSize is between minGram and maxGram
          restoreState(state);
          // first ngram gets increment, others don't
          posIncrAtt.setPositionIncrement(curPosIncr);
          curPosIncr = 0;

          final int charLength =
              Character.offsetByCodePoints(curTermBuffer, 0, curTermLength, 0, curGramSize);
          termAtt.copyBuffer(curTermBuffer, 0, charLength);
          curGramSize++;
          return true;
        } else if (preserveOriginal) {
          // Token is longer than maxGram, but we'd still like to keep it.
          restoreState(state);
          posIncrAtt.setPositionIncrement(0);
          termAtt.copyBuffer(curTermBuffer, 0, curTermLength);
          curTermBuffer = null;
          return true;
        }
      }
      // Done with this input token, get next token on the next iteration.
      curTermBuffer = null;
    }
  }


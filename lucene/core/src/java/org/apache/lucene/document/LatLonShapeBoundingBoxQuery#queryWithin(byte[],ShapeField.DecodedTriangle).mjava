  @Override
  protected Component2D.WithinRelation queryWithin(byte[] t, ShapeField.DecodedTriangle scratchTriangle) {
    if (encodedRectangle.crossesDateline()) {
      throw new IllegalArgumentException("withinTriangle is not supported for rectangles crossing the date line");
    }
    // decode indexed triangle
    ShapeField.decodeTriangle(t, scratchTriangle);

    switch (scratchTriangle.type) {
      case POINT: {
        return  encodedRectangle.contains(scratchTriangle.aX, scratchTriangle.aY) 
                ? Component2D.WithinRelation.NOTWITHIN : Component2D.WithinRelation.DISJOINT;
      }
      case LINE: {
        return encodedRectangle.withinLine(scratchTriangle.aX, scratchTriangle.aY, scratchTriangle.ab,
            scratchTriangle.bX, scratchTriangle.bY);
      }
      case TRIANGLE: {
        return encodedRectangle.withinTriangle(scratchTriangle.aX, scratchTriangle.aY, scratchTriangle.ab,
            scratchTriangle.bX, scratchTriangle.bY, scratchTriangle.bc,
            scratchTriangle.cX, scratchTriangle.cY, scratchTriangle.ca);
      }
      default: throw new IllegalArgumentException("Unsupported triangle type :[" + scratchTriangle.type + "]");
    }
  }


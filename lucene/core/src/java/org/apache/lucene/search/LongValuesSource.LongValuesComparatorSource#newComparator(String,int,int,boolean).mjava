    @Override
    public FieldComparator<Long> newComparator(
        String fieldname, int numHits, int sortPos, boolean reversed) {
      return new LongComparator(numHits, fieldname, missingValue, reversed, sortPos) {
        @Override
        public LeafFieldComparator getLeafComparator(LeafReaderContext context) throws IOException {
          LongValuesHolder holder = new LongValuesHolder();

          return new LongComparator.LongLeafComparator(context) {
            LeafReaderContext ctx;

            @Override
            protected NumericDocValues getNumericDocValues(
                LeafReaderContext context, String field) {
              ctx = context;
              return asNumericDocValues(holder);
            }

            @Override
            public void setScorer(Scorable scorer) throws IOException {
              holder.values = producer.getValues(ctx, DoubleValuesSource.fromScorer(scorer));
              super.setScorer(scorer);
            }
          };
        }
      };
    }


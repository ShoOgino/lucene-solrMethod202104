    @Override
    public PlacementPlan computePlacement(PlacementRequest request, PlacementContext placementContext) throws PlacementException {
      int totalReplicasPerShard = 0;
      for (Replica.ReplicaType rt : Replica.ReplicaType.values()) {
        totalReplicasPerShard += request.getCountReplicasToCreate(rt);
      }

      if (placementContext.getCluster().getLiveNodes().size() < totalReplicasPerShard) {
        throw new PlacementException("Cluster size too small for number of replicas per shard");
      }

      Set<ReplicaPlacement> replicaPlacements = new HashSet<>(totalReplicasPerShard * request.getShardNames().size());

      // Now place randomly all replicas of all shards on available nodes
      for (String shardName : request.getShardNames()) {
        // Shuffle the nodes for each shard so that replicas for a shard are placed on distinct yet random nodes
        ArrayList<Node> nodesToAssign = new ArrayList<>(placementContext.getCluster().getLiveNodes());
        Collections.shuffle(nodesToAssign, replicaPlacementRandom);

        for (Replica.ReplicaType rt : Replica.ReplicaType.values()) {
          placeForReplicaType(request.getCollection(), nodesToAssign, placementContext.getPlacementPlanFactory(), replicaPlacements, shardName, request, rt);
        }
      }

      return placementContext.getPlacementPlanFactory().createPlacementPlan(request, replicaPlacements);
    }


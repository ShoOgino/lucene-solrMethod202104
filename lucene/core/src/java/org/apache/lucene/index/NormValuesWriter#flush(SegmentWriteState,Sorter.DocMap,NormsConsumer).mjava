  public void flush(SegmentWriteState state, Sorter.DocMap sortMap, NormsConsumer normsConsumer)
      throws IOException {
    final PackedLongValues values = pending.build();
    final NumericDocValuesWriter.NumericDVs sorted;
    if (sortMap != null) {
      sorted =
          NumericDocValuesWriter.sortDocValues(
              state.segmentInfo.maxDoc(),
              sortMap,
              new BufferedNorms(values, docsWithField.iterator()));
    } else {
      sorted = null;
    }
    normsConsumer.addNormsField(
        fieldInfo,
        new NormsProducer() {
          @Override
          public NumericDocValues getNorms(FieldInfo fieldInfo2) {
            if (fieldInfo != NormValuesWriter.this.fieldInfo) {
              throw new IllegalArgumentException("wrong fieldInfo");
            }
            if (sorted == null) {
              return new BufferedNorms(values, docsWithField.iterator());
            } else {
              return new NumericDocValuesWriter.SortingNumericDocValues(sorted);
            }
          }

          @Override
          public void checkIntegrity() {}

          @Override
          public void close() {}

          @Override
          public long ramBytesUsed() {
            return 0;
          }
        });
  }


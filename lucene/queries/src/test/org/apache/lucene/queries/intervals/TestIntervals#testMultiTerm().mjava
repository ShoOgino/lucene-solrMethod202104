  public void testMultiTerm() throws IOException {
    RegExp re = new RegExp("p.*e");
    IntervalsSource source =
        Intervals.multiterm(new CompiledAutomaton(re.toAutomaton()), re.toString());

    checkIntervals(
        source,
        "field1",
        5,
        new int[][] {
          {},
          {0, 0, 1, 1, 3, 3, 4, 4, 6, 6, 7, 7},
          {0, 0, 1, 1, 3, 3, 4, 4, 6, 6, 7, 7},
          {7, 7},
          {0, 0, 1, 1, 3, 3, 4, 4, 6, 6, 7, 7},
          {0, 0}
        });

    IllegalStateException e =
        expectThrows(
            IllegalStateException.class,
            () -> {
              IntervalsSource s =
                  Intervals.multiterm(new CompiledAutomaton(re.toAutomaton()), 1, re.toString());
              for (LeafReaderContext ctx : searcher.getIndexReader().leaves()) {
                s.intervals("field1", ctx);
              }
            });
    assertEquals("Automaton [\\p(.)*\\e] expanded to too many terms (limit 1)", e.getMessage());

    checkVisits(source, 1);
  }


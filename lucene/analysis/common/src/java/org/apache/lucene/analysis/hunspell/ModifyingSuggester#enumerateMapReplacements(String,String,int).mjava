  private void enumerateMapReplacements(String word, String accumulated, int offset) {
    if (offset == word.length()) {
      trySuggestion(accumulated);
      return;
    }

    for (List<String> entries : speller.dictionary.mapTable) {
      for (String entry : entries) {
        if (word.regionMatches(offset, entry, 0, entry.length())) {
          for (String replacement : entries) {
            if (!entry.equals(replacement)) {
              enumerateMapReplacements(word, accumulated + replacement, offset + entry.length());
            }
          }
        }
      }
    }

    enumerateMapReplacements(word, accumulated + word.charAt(offset), offset + 1);
  }


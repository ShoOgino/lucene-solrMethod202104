    void flushGroup() throws IOException {
      IntsRefBuilder currentOrds = new IntsRefBuilder();

      boolean hasNonHidden = false;
      for (char[] flags : group) {
        if (!hasHiddenFlag(flags)) {
          hasNonHidden = true;
          break;
        }
      }

      for (int i = 0; i < group.size(); i++) {
        char[] flags = group.get(i);
        if (hasNonHidden && hasHiddenFlag(flags)) {
          continue;
        }

        encodeFlags(flagsScratch, flags);
        int ord = flagLookup.add(flagsScratch.get());
        if (ord < 0) {
          ord = -ord - 1; // already exists in our hash
        }
        currentOrds.append(ord);
        if (hasStemExceptions) {
          currentOrds.append(stemExceptionIDs.get(i));
        }
      }

      Util.toUTF32(currentEntry, scratchInts);
      words.add(scratchInts.get(), currentOrds.get());

      group.clear();
      stemExceptionIDs.clear();
    }


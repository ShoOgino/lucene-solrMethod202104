  public void testVerbs() throws Exception {
    // note, past/present verb stems will not conflate (from the paper)
    // -ω,-α/-.ω,-.α
    checkOneTerm(a, "ορίζω", "οριζ");
    checkOneTerm(a, "όριζα", "οριζ");
    checkOneTerm(a, "όριζε", "οριζ");
    checkOneTerm(a, "ορίζοντας", "οριζ");
    checkOneTerm(a, "ορίζομαι", "οριζ");
    checkOneTerm(a, "οριζόμουν", "οριζ");
    checkOneTerm(a, "ορίζεσαι", "οριζ");

    checkOneTerm(a, "όρισα", "ορισ");
    checkOneTerm(a, "ορίσω", "ορισ");
    checkOneTerm(a, "όρισε", "ορισ");
    checkOneTerm(a, "ορίσει", "ορισ");

    checkOneTerm(a, "ορίστηκα", "οριστ");
    checkOneTerm(a, "οριστώ", "οριστ");
    checkOneTerm(a, "οριστείς", "οριστ");
    checkOneTerm(a, "οριστεί", "οριστ");

    checkOneTerm(a, "ορισμένο", "ορισμεν");
    checkOneTerm(a, "ορισμένη", "ορισμεν");
    checkOneTerm(a, "ορισμένος", "ορισμεν");

    // -ω,-α/-ξω,-ξα
    checkOneTerm(a, "ανοίγω", "ανοιγ");
    checkOneTerm(a, "άνοιγα", "ανοιγ");
    checkOneTerm(a, "άνοιγε", "ανοιγ");
    checkOneTerm(a, "ανοίγοντας", "ανοιγ");
    checkOneTerm(a, "ανοίγομαι", "ανοιγ");
    checkOneTerm(a, "ανοιγόμουν", "ανοιγ");

    checkOneTerm(a, "άνοιξα", "ανοιξ");
    checkOneTerm(a, "ανοίξω", "ανοιξ");
    checkOneTerm(a, "άνοιξε", "ανοιξ");
    checkOneTerm(a, "ανοίξει", "ανοιξ");

    checkOneTerm(a, "ανοίχτηκα", "ανοιχτ");
    checkOneTerm(a, "ανοιχτώ", "ανοιχτ");
    checkOneTerm(a, "ανοίχτηκα", "ανοιχτ");
    checkOneTerm(a, "ανοιχτείς", "ανοιχτ");
    checkOneTerm(a, "ανοιχτεί", "ανοιχτ");

    checkOneTerm(a, "ανοίξου", "ανοιξ");

    // -ώ/-άω,-ούσα/-άσω,-ασα
    checkOneTerm(a, "περνώ", "περν");
    checkOneTerm(a, "περνάω", "περν");
    checkOneTerm(a, "περνούσα", "περν");
    checkOneTerm(a, "πέρναγα", "περν");
    checkOneTerm(a, "πέρνα", "περν");
    checkOneTerm(a, "περνώντας", "περν");

    checkOneTerm(a, "πέρασα", "περασ");
    checkOneTerm(a, "περάσω", "περασ");
    checkOneTerm(a, "πέρασε", "περασ");
    checkOneTerm(a, "περάσει", "περασ");

    checkOneTerm(a, "περνιέμαι", "περν");
    checkOneTerm(a, "περνιόμουν", "περν");

    checkOneTerm(a, "περάστηκα", "περαστ");
    checkOneTerm(a, "περαστώ", "περαστ");
    checkOneTerm(a, "περαστείς", "περαστ");
    checkOneTerm(a, "περαστεί", "περαστ");

    checkOneTerm(a, "περασμένο", "περασμεν");
    checkOneTerm(a, "περασμένη", "περασμεν");
    checkOneTerm(a, "περασμένος", "περασμεν");

    // -ώ/-άω,-ούσα/-άξω,-αξα
    checkOneTerm(a, "πετώ", "πετ");
    checkOneTerm(a, "πετάω", "πετ");
    checkOneTerm(a, "πετούσα", "πετ");
    checkOneTerm(a, "πέταγα", "πετ");
    checkOneTerm(a, "πέτα", "πετ");
    checkOneTerm(a, "πετώντας", "πετ");
    checkOneTerm(a, "πετιέμαι", "πετ");
    checkOneTerm(a, "πετιόμουν", "πετ");

    checkOneTerm(a, "πέταξα", "πεταξ");
    checkOneTerm(a, "πετάξω", "πεταξ");
    checkOneTerm(a, "πέταξε", "πεταξ");
    checkOneTerm(a, "πετάξει", "πεταξ");

    checkOneTerm(a, "πετάχτηκα", "πεταχτ");
    checkOneTerm(a, "πεταχτώ", "πεταχτ");
    checkOneTerm(a, "πεταχτείς", "πεταχτ");
    checkOneTerm(a, "πεταχτεί", "πεταχτ");

    checkOneTerm(a, "πεταμένο", "πεταμεν");
    checkOneTerm(a, "πεταμένη", "πεταμεν");
    checkOneTerm(a, "πεταμένος", "πεταμεν");

    // -ώ/-άω,-ούσα / -έσω,-εσα
    checkOneTerm(a, "καλώ", "καλ");
    checkOneTerm(a, "καλούσα", "καλ");
    checkOneTerm(a, "καλείς", "καλ");
    checkOneTerm(a, "καλώντας", "καλ");

    checkOneTerm(a, "καλούμαι", "καλ");
    // pass. imperfect /imp. progressive doesnt conflate
    checkOneTerm(a, "καλούμουν", "καλουμ");
    checkOneTerm(a, "καλείσαι", "καλεισα");

    checkOneTerm(a, "καλέστηκα", "καλεστ");
    checkOneTerm(a, "καλεστώ", "καλεστ");
    checkOneTerm(a, "καλεστείς", "καλεστ");
    checkOneTerm(a, "καλεστεί", "καλεστ");

    checkOneTerm(a, "καλεσμένο", "καλεσμεν");
    checkOneTerm(a, "καλεσμένη", "καλεσμεν");
    checkOneTerm(a, "καλεσμένος", "καλεσμεν");

    checkOneTerm(a, "φορώ", "φορ");
    checkOneTerm(a, "φοράω", "φορ");
    checkOneTerm(a, "φορούσα", "φορ");
    checkOneTerm(a, "φόραγα", "φορ");
    checkOneTerm(a, "φόρα", "φορ");
    checkOneTerm(a, "φορώντας", "φορ");
    checkOneTerm(a, "φοριέμαι", "φορ");
    checkOneTerm(a, "φοριόμουν", "φορ");
    checkOneTerm(a, "φοριέσαι", "φορ");

    checkOneTerm(a, "φόρεσα", "φορεσ");
    checkOneTerm(a, "φορέσω", "φορεσ");
    checkOneTerm(a, "φόρεσε", "φορεσ");
    checkOneTerm(a, "φορέσει", "φορεσ");

    checkOneTerm(a, "φορέθηκα", "φορεθ");
    checkOneTerm(a, "φορεθώ", "φορεθ");
    checkOneTerm(a, "φορεθείς", "φορεθ");
    checkOneTerm(a, "φορεθεί", "φορεθ");

    checkOneTerm(a, "φορεμένο", "φορεμεν");
    checkOneTerm(a, "φορεμένη", "φορεμεν");
    checkOneTerm(a, "φορεμένος", "φορεμεν");

    // -ώ/-άω,-ούσα / -ήσω,-ησα
    checkOneTerm(a, "κρατώ", "κρατ");
    checkOneTerm(a, "κρατάω", "κρατ");
    checkOneTerm(a, "κρατούσα", "κρατ");
    checkOneTerm(a, "κράταγα", "κρατ");
    checkOneTerm(a, "κράτα", "κρατ");
    checkOneTerm(a, "κρατώντας", "κρατ");

    checkOneTerm(a, "κράτησα", "κρατ");
    checkOneTerm(a, "κρατήσω", "κρατ");
    checkOneTerm(a, "κράτησε", "κρατ");
    checkOneTerm(a, "κρατήσει", "κρατ");

    checkOneTerm(a, "κρατούμαι", "κρατ");
    checkOneTerm(a, "κρατιέμαι", "κρατ");
    // this imperfect form doesnt conflate
    checkOneTerm(a, "κρατούμουν", "κρατουμ");
    checkOneTerm(a, "κρατιόμουν", "κρατ");
    // this imp. prog form doesnt conflate
    checkOneTerm(a, "κρατείσαι", "κρατεισα");

    checkOneTerm(a, "κρατήθηκα", "κρατ");
    checkOneTerm(a, "κρατηθώ", "κρατ");
    checkOneTerm(a, "κρατηθείς", "κρατ");
    checkOneTerm(a, "κρατηθεί", "κρατ");
    checkOneTerm(a, "κρατήσου", "κρατ");

    checkOneTerm(a, "κρατημένο", "κρατημεν");
    checkOneTerm(a, "κρατημένη", "κρατημεν");
    checkOneTerm(a, "κρατημένος", "κρατημεν");

    // -.μαι,-.μουν / -.ώ,-.ηκα
    checkOneTerm(a, "κοιμάμαι", "κοιμ");
    checkOneTerm(a, "κοιμόμουν", "κοιμ");
    checkOneTerm(a, "κοιμάσαι", "κοιμ");

    checkOneTerm(a, "κοιμήθηκα", "κοιμ");
    checkOneTerm(a, "κοιμηθώ", "κοιμ");
    checkOneTerm(a, "κοιμήσου", "κοιμ");
    checkOneTerm(a, "κοιμηθεί", "κοιμ");

    checkOneTerm(a, "κοιμισμένο", "κοιμισμεν");
    checkOneTerm(a, "κοιμισμένη", "κοιμισμεν");
    checkOneTerm(a, "κοιμισμένος", "κοιμισμεν");
  }


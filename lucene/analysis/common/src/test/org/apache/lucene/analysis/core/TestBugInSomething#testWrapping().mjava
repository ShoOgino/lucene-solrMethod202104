  public void testWrapping() throws Exception {
    CharFilter cs = new TestRandomChains.CheckThatYouDidntReadAnythingReaderWrapper(wrappedStream);
    Exception expected =
        expectThrows(
            Exception.class,
            () -> {
              cs.mark(1);
            });
    assertEquals("mark(int)", expected.getMessage());

    expected =
        expectThrows(
            Exception.class,
            () -> {
              cs.markSupported();
            });
    assertEquals("markSupported()", expected.getMessage());

    expected =
        expectThrows(
            Exception.class,
            () -> {
              cs.read();
            });
    assertEquals("read()", expected.getMessage());

    expected =
        expectThrows(
            Exception.class,
            () -> {
              cs.read(new char[0]);
            });
    assertEquals("read(char[])", expected.getMessage());

    expected =
        expectThrows(
            Exception.class,
            () -> {
              cs.read(CharBuffer.wrap(new char[0]));
            });
    assertEquals("read(CharBuffer)", expected.getMessage());

    expected =
        expectThrows(
            Exception.class,
            () -> {
              cs.reset();
            });
    assertEquals("reset()", expected.getMessage());

    expected =
        expectThrows(
            Exception.class,
            () -> {
              cs.skip(1);
            });
    assertEquals("skip(long)", expected.getMessage());

    expected =
        expectThrows(
            Exception.class,
            () -> {
              cs.correctOffset(1);
            });
    assertEquals("correct(int)", expected.getMessage());

    expected =
        expectThrows(
            Exception.class,
            () -> {
              cs.close();
            });
    assertEquals("close()", expected.getMessage());

    expected =
        expectThrows(
            Exception.class,
            () -> {
              cs.read(new char[0], 0, 0);
            });
    assertEquals("read(char[], int, int)", expected.getMessage());
  }


  public void testDocValuesUpdatesWithNewField() throws Exception {
    Path oldIndexDir = createTempDir("dvupdates");
    TestUtil.unzip(getDataInputStream(dvUpdatesIndex), oldIndexDir);
    Directory dir = newFSDirectory(oldIndexDir);
    verifyUsesDefaultCodec(dir, dvUpdatesIndex);

    // update fields and verify index
    IndexWriterConfig conf = new IndexWriterConfig(new MockAnalyzer(random()));
    IndexWriter writer = new IndexWriter(dir, conf);
    // introduce a new field that we later update
    writer.addDocument(Arrays.asList(new StringField("id", "" + Integer.MAX_VALUE, Field.Store.NO),
        new NumericDocValuesField("new_numeric", 1),
        new BinaryDocValuesField("new_binary", toBytes(1))));
    writer.updateNumericDocValue(new Term("id", "1"), "new_numeric", 1);
    writer.updateBinaryDocValue(new Term("id", "1"), "new_binary", toBytes(1));

    writer.commit();
    Runnable assertDV = () -> {
      boolean found = false;
      try (DirectoryReader reader = DirectoryReader.open(dir)) {
        for (LeafReaderContext ctx : reader.leaves()) {
          LeafReader leafReader = ctx.reader();
          TermsEnum id = leafReader.terms("id").iterator();
          if (id.seekExact(new BytesRef("1"))) {
            PostingsEnum postings = id.postings(null, PostingsEnum.NONE);
            NumericDocValues numericDocValues = leafReader.getNumericDocValues("new_numeric");
            BinaryDocValues binaryDocValues = leafReader.getBinaryDocValues("new_binary");
            int doc;
            while ((doc = postings.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {
              found = true;
              assertTrue(binaryDocValues.advanceExact(doc));
              assertTrue(numericDocValues.advanceExact(doc));
              assertEquals(1, numericDocValues.longValue());
              assertEquals(toBytes(1), binaryDocValues.binaryValue());
            }
          }
        }
      } catch (IOException e) {
        throw new AssertionError(e);
      }
      assertTrue(found);
    };
    assertDV.run();
    // merge all segments
    writer.forceMerge(1);
    writer.commit();
    assertDV.run();
    writer.close();
    dir.close();
  }


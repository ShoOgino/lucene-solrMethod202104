  @BeforeClass
  public static void beforeClass() throws Exception {
    System.setProperty("metricsEnabled", "true");
    Map<String, Object> args = new HashMap<>();
    args.put(MetricsHistoryHandler.SYNC_PERIOD_PROP, 1);
    args.put(MetricsHistoryHandler.COLLECT_PERIOD_PROP, 1);
    configureCluster(1)
        .addConfig("conf", configset("cloud-minimal"))
        .configure();
    
    cloudManager = cluster.getJettySolrRunner(0).getCoreContainer().getZkController().getSolrCloudManager();
    metricManager = cluster.getJettySolrRunner(0).getCoreContainer().getMetricManager();
    solrClient = cluster.getSolrClient();
    metricsHandler = new MetricsHandler(metricManager);
    handler = new MetricsHistoryHandler(cluster.getJettySolrRunner(0).getNodeName(), metricsHandler, solrClient, cloudManager, args);
    SolrMetricsContext solrMetricsContext = new SolrMetricsContext(metricManager, SolrInfoBean.Group.node.toString(), "");
    handler.initializeMetrics(solrMetricsContext, CommonParams.METRICS_HISTORY_PATH);
    SPEED = 1;
    timeSource = cloudManager.getTimeSource();

    // create .system collection
    CollectionAdminRequest.Create create = CollectionAdminRequest.createCollection(CollectionAdminParams.SYSTEM_COLL,
        "conf", 1, 1);
    create.process(solrClient);
    CloudUtil.waitForState(cloudManager, "failed to create " + CollectionAdminParams.SYSTEM_COLL,
        CollectionAdminParams.SYSTEM_COLL, CloudUtil.clusterShape(1, 1));
  }


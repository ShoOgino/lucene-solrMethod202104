  /**
   * Compares two {@link BytesRef}, element by element, and returns the number of elements common to
   * both arrays (from the start of each). This method assumes currentTerm comes after priorTerm.
   *
   * @param priorTerm The first {@link BytesRef} to compare
   * @param currentTerm The second {@link BytesRef} to compare
   * @return The number of common elements (from the start of each).
   */
  public static int bytesDifference(BytesRef priorTerm, BytesRef currentTerm) {
    int mismatch =
        Arrays.mismatch(
            priorTerm.bytes,
            priorTerm.offset,
            priorTerm.offset + priorTerm.length,
            currentTerm.bytes,
            currentTerm.offset,
            currentTerm.offset + currentTerm.length);
    if (mismatch < 0) {
      throw new IllegalArgumentException(
          "terms out of order: priorTerm=" + priorTerm + ",currentTerm=" + currentTerm);
    }
    return mismatch;
  }


  /**
   * Create a GeoCircle from a center and a cutoff angle. The resulting shape is a circle in
   * spherical planets, otherwise is an ellipse. It is the most efficient shape to represent a
   * circle on a sphere.
   *
   * @param planetModel is the planet model.
   * @param latitude is the center latitude.
   * @param longitude is the center longitude.
   * @param cutoffAngle is the cutoff angle.
   * @return a GeoCircle corresponding to what was specified.
   */
  public static GeoCircle makeGeoCircle(
      final PlanetModel planetModel,
      final double latitude,
      final double longitude,
      final double cutoffAngle) {
    if (cutoffAngle < Vector.MINIMUM_ANGULAR_RESOLUTION) {
      return new GeoDegeneratePoint(planetModel, latitude, longitude);
    }
    return new GeoStandardCircle(planetModel, latitude, longitude, cutoffAngle);
  }


  // [a,b,c] == [c,a,b] == [b,c,a] == [c,b,a] == [b,a,c] == [a,c,b]
  public void verifyEncodingPermutations(
      int ayEnc, int axEnc, int byEnc, int bxEnc, int cyEnc, int cxEnc) {
    // this is only valid when points are not co-planar
    assertTrue(GeoUtils.orient(ayEnc, axEnc, byEnc, bxEnc, cyEnc, cxEnc) != 0);
    byte[] b = new byte[7 * ShapeField.BYTES];
    // [a,b,c]
    ShapeField.encodeTriangle(b, ayEnc, axEnc, true, byEnc, bxEnc, true, cyEnc, cxEnc, false);
    ShapeField.DecodedTriangle encodedABC = new ShapeField.DecodedTriangle();
    ShapeField.decodeTriangle(b, encodedABC);
    // [c,a,b]
    ShapeField.encodeTriangle(b, cyEnc, cxEnc, false, ayEnc, axEnc, true, byEnc, bxEnc, true);
    ShapeField.DecodedTriangle encodedCAB = new ShapeField.DecodedTriangle();
    ShapeField.decodeTriangle(b, encodedCAB);
    assertEquals(encodedABC, encodedCAB);
    // [b,c,a]
    ShapeField.encodeTriangle(b, byEnc, bxEnc, true, cyEnc, cxEnc, false, ayEnc, axEnc, true);
    ShapeField.DecodedTriangle encodedBCA = new ShapeField.DecodedTriangle();
    ShapeField.decodeTriangle(b, encodedBCA);
    assertEquals(encodedABC, encodedBCA);
    // [c,b,a]
    ShapeField.encodeTriangle(b, cyEnc, cxEnc, true, byEnc, bxEnc, true, ayEnc, axEnc, false);
    ShapeField.DecodedTriangle encodedCBA = new ShapeField.DecodedTriangle();
    ShapeField.decodeTriangle(b, encodedCBA);
    assertEquals(encodedABC, encodedCBA);
    // [b,a,c]
    ShapeField.encodeTriangle(b, byEnc, bxEnc, true, ayEnc, axEnc, false, cyEnc, cxEnc, true);
    ShapeField.DecodedTriangle encodedBAC = new ShapeField.DecodedTriangle();
    ShapeField.decodeTriangle(b, encodedBAC);
    assertEquals(encodedABC, encodedBAC);
    // [a,c,b]
    ShapeField.encodeTriangle(b, ayEnc, axEnc, false, cyEnc, cxEnc, true, byEnc, bxEnc, true);
    ShapeField.DecodedTriangle encodedACB = new ShapeField.DecodedTriangle();
    ShapeField.decodeTriangle(b, encodedACB);
    assertEquals(encodedABC, encodedACB);
  }


    /**
     * Returns {@link IndexDeletionPolicyWrapper#getAndSaveLatestCommit} unless a particular commitName was requested.
     * <p>
     * Note:
     * <ul>
     *  <li>This method does error handling when the commit can't be found and wraps them in {@link SolrException}
     *  </li>
     *  <li>If this method returns, the result will be non null, and the caller <em>MUST</em>
     *      call {@link IndexDeletionPolicyWrapper#releaseCommitPoint} when finished
     *  </li>
     * </ul>
     */
    private IndexCommit getAndSaveIndexCommit() throws IOException {
        if (commitNameOption.isPresent()) {
            return SnapShooter.getAndSaveNamedIndexCommit(solrCore, commitNameOption.get());
        }

        final IndexDeletionPolicyWrapper delPolicy = solrCore.getDeletionPolicy();
        final IndexCommit commit = delPolicy.getAndSaveLatestCommit();
        if (null == commit) {
            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, "Index does not yet have any commits for core " +
                    solrCore.getName());
        }
        if (log.isDebugEnabled())   {
            log.debug("Using latest commit: generation={}", commit.getGeneration());
        }
        return commit;
    }


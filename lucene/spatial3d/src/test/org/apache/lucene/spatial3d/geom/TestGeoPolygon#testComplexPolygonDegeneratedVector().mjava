  @Test
  public void testComplexPolygonDegeneratedVector() {
    List<GeoPoint> points = new ArrayList<>();
    points.add(new GeoPoint(PlanetModel.SPHERE, -0.5, -0.5));
    points.add(new GeoPoint(PlanetModel.SPHERE, -0.5, 0.5));
    points.add(new GeoPoint(PlanetModel.SPHERE, 0.5, 0.5));
    points.add(new GeoPoint(PlanetModel.SPHERE,0.5, -0.5));
    final GeoPolygon polygon = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points);
    //Large polygon with test point in (0,0)
    final GeoPolygon largePolygon = new GeoComplexPolygon(PlanetModel.SPHERE, Collections.singletonList(points), new GeoPoint(PlanetModel.SPHERE, 0.0, 0), true);
    //Chooses Plane Z and succeed
    final GeoPoint point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-5);
    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));
    //Numerically identical
    final GeoPoint point2 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-13);
    assertTrue(polygon.isWithin(point2) == largePolygon.isWithin(point2));
    //Fails here, chooses plane X
    final GeoPoint point3 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-6);
    assertTrue(polygon.isWithin(point3) == largePolygon.isWithin(point3));
  }


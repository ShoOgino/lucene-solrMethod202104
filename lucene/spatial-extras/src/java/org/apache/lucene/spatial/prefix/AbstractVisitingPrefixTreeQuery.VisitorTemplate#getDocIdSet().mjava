    public DocIdSet getDocIdSet() throws IOException {
      assert curVNode == null : "Called more than once?";
      if (termsEnum == null) return null;
      if (!nextTerm()) { // advances
        return null;
      }

      curVNode = new VNode(null);
      curVNode.reset(grid.getWorldCell());

      start();

      addIntersectingChildren();

      main:
      while (thisTerm != null) { // terminates for other reasons too!

        // Advance curVNode pointer
        if (curVNode.children != null) {
          // -- HAVE CHILDREN: DESCEND
          assert curVNode.children.hasNext(); // if we put it there then it has something
          preSiblings(curVNode);
          curVNode = curVNode.children.next();
        } else {
          // -- NO CHILDREN: ADVANCE TO NEXT SIBLING
          VNode parentVNode = curVNode.parent;
          while (true) {
            if (parentVNode == null) {
              break main; // all done
            }
            if (parentVNode.children.hasNext()) {
              // advance next sibling
              curVNode = parentVNode.children.next();
              break;
            } else {
              // reached end of siblings; pop up
              postSiblings(parentVNode);
              parentVNode.children = null; // GC
              parentVNode = parentVNode.parent;
            }
          }
        }

        // Seek to curVNode's cell (or skip if termsEnum has moved beyond)
        final int compare = indexedCell.compareToNoLeaf(curVNode.cell);
        if (compare > 0) {
          // The indexed cell is after; continue loop to next query cell
          continue;
        }
        if (compare < 0) {
          // The indexed cell is before; seek ahead to query cell:
          //      Seek !
          curVNode.cell.getTokenBytesNoLeaf(curVNodeTerm);
          TermsEnum.SeekStatus seekStatus = termsEnum.seekCeil(curVNodeTerm);
          if (seekStatus == TermsEnum.SeekStatus.END) {
            break; // all done
          }
          thisTerm = termsEnum.term();
          indexedCell = grid.readCell(thisTerm, indexedCell);
          if (seekStatus == TermsEnum.SeekStatus.NOT_FOUND) {
            // Did we find a leaf of the cell we were looking for or something after?
            if (!indexedCell.isLeaf() || indexedCell.compareToNoLeaf(curVNode.cell) != 0) {
              continue; // The indexed cell is after; continue loop to next query cell
            }
          }
        }
        // indexedCell == queryCell (disregarding leaf).

        // If indexedCell is a leaf then there's no prefix (prefix sorts before) -- just visit and
        // continue
        if (indexedCell.isLeaf()) {
          visitLeaf(indexedCell); // TODO or query cell? Though shouldn't matter.
          if (!nextTerm()) break;
          continue;
        }
        // If a prefix (non-leaf) then visit; see if we descend.
        // need to use curVNode.cell not indexedCell
        final boolean descend = visitPrefix(curVNode.cell);
        if (!nextTerm()) break;
        // Check for adjacent leaf with the same prefix
        if (indexedCell.isLeaf() && indexedCell.getLevel() == curVNode.cell.getLevel()) {
          visitLeaf(indexedCell); // TODO or query cell? Though shouldn't matter.
          if (!nextTerm()) break;
        }

        if (descend) {
          addIntersectingChildren();
        }
      }

      return finish();
    }


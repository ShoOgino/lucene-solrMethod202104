  private void cache() throws IOException {
    count = 0;
    MatchesIterator mi = in.getSubMatches();
    if (mi == null) {
      count = 1;
      posAndOffsets[0] = in.startPosition();
      posAndOffsets[1] = in.endPosition();
      posAndOffsets[2] = in.startOffset();
      posAndOffsets[3] = in.endOffset();
      matchingQueries[0] = in.getQuery();
    } else {
      while (mi.next()) {
        if (count * 4 >= posAndOffsets.length) {
          posAndOffsets = ArrayUtil.grow(posAndOffsets, (count + 1) * 4);
          matchingQueries = ArrayUtil.grow(matchingQueries, (count + 1));
        }
        posAndOffsets[count * 4] = mi.startPosition();
        posAndOffsets[count * 4 + 1] = mi.endPosition();
        posAndOffsets[count * 4 + 2] = mi.startOffset();
        posAndOffsets[count * 4 + 3] = mi.endOffset();
        matchingQueries[count] = mi.getQuery();
        count++;
      }
    }
  }


  @Override
  public List<SortField> guessSortTypes(String name) {
    FieldInfo finfo = IndexUtils.getFieldInfo(reader, name);
    if (finfo == null) {
      throw new LukeException("No such field: " + name, new IllegalArgumentException());
    }

    DocValuesType dvType = finfo.getDocValuesType();

    switch (dvType) {
      case NONE:
        return Collections.emptyList();

      case NUMERIC:
        return Arrays.stream(
                new SortField[] {
                  new SortField(name, SortField.Type.INT),
                  new SortField(name, SortField.Type.LONG),
                  new SortField(name, SortField.Type.FLOAT),
                  new SortField(name, SortField.Type.DOUBLE)
                })
            .collect(Collectors.toList());

      case SORTED_NUMERIC:
        return Arrays.stream(
                new SortField[] {
                  new SortedNumericSortField(name, SortField.Type.INT),
                  new SortedNumericSortField(name, SortField.Type.LONG),
                  new SortedNumericSortField(name, SortField.Type.FLOAT),
                  new SortedNumericSortField(name, SortField.Type.DOUBLE)
                })
            .collect(Collectors.toList());

      case SORTED:
        return Arrays.stream(
                new SortField[] {
                  new SortField(name, SortField.Type.STRING),
                  new SortField(name, SortField.Type.STRING_VAL)
                })
            .collect(Collectors.toList());

      case SORTED_SET:
        return Collections.singletonList(new SortedSetSortField(name, false));

      default:
        return Collections.singletonList(new SortField(name, SortField.Type.DOC));
    }
  }


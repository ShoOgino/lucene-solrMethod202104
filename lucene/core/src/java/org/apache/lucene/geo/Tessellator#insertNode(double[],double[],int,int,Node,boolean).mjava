  /**
   * Creates a node and optionally links it with a previous node in a circular doubly-linked list
   */
  private static final Node insertNode(
      final double[] x,
      final double[] y,
      int index,
      int vertexIndex,
      final Node lastNode,
      boolean isGeo) {
    final Node node = new Node(x, y, index, vertexIndex, isGeo);
    if (lastNode == null) {
      node.previous = node;
      node.previousZ = node;
      node.next = node;
      node.nextZ = node;
    } else {
      node.next = lastNode.next;
      node.nextZ = lastNode.next;
      node.previous = lastNode;
      node.previousZ = lastNode;
      lastNode.next.previous = node;
      lastNode.nextZ.previousZ = node;
      lastNode.next = node;
      lastNode.nextZ = node;
    }
    return node;
  }


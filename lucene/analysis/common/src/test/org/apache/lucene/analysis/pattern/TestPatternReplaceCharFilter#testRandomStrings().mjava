  /** blast some random strings through the analyzer */
  public void testRandomStrings() throws Exception {
    int numPatterns = 5;
    Random random = new Random(random().nextLong());
    for (int i = 0; i < numPatterns; i++) {
      final Pattern p = TestUtil.randomPattern(random());

      final String replacement = TestUtil.randomSimpleString(random);
      Analyzer a =
          new Analyzer() {
            @Override
            protected TokenStreamComponents createComponents(String fieldName) {
              Tokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);
              return new TokenStreamComponents(tokenizer, tokenizer);
            }

            @Override
            protected Reader initReader(String fieldName, Reader reader) {
              return new PatternReplaceCharFilter(p, replacement, reader);
            }
          };

      /* max input length. don't make it longer -- exponential processing
       * time for certain patterns. */
      final int maxInputLength = 30;
      /* ASCII only input?: */
      final boolean asciiOnly = true;
      checkRandomData(random, a, 50 * RANDOM_MULTIPLIER, maxInputLength, asciiOnly);
      a.close();
    }
  }


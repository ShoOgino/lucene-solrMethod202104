    public void collapse(int collapseKey, int contextDoc, int globalDoc) throws IOException {
      float score = 0;

      if (needsScores4Collapsing) {
        score = scorer.score();
        this.collapseScore.score = score;
      }

      float currentVal = functionValues.floatVal(contextDoc);

      if(collapseKey != nullValue) {
        final int idx;
        if((idx = cmap.indexOf(collapseKey)) >= 0) {
          int pointer = cmap.indexGet(idx);
          if(comp.test(currentVal, testValues.get(pointer))) {
            testValues.put(pointer, currentVal);
            docs.put(pointer, globalDoc);
            if(needsScores){
              if (!needsScores4Collapsing) {
                score = scorer.score();
              }
              scores.put(pointer, score);
            }
          }
        } else {
          ++index;
          cmap.put(collapseKey, index);
          docs.put(index, globalDoc);
          testValues.put(index, currentVal);
          if(needsScores) {
            if (!needsScores4Collapsing) {
              score = scorer.score();
            }
            scores.put(index, score);
          }
        }
      } else if(this.nullPolicy == NullPolicy.COLLAPSE.getCode()) {
        if(comp.test(currentVal, nullCompVal)) {
          nullCompVal = currentVal;
          nullDoc = globalDoc;
          if(needsScores) {
            if (!needsScores4Collapsing) {
              score = scorer.score();
            }
            nullScore = score;
          }
        }
      } else if(this.nullPolicy == NullPolicy.EXPAND.getCode()) {
        this.collapsedSet.set(globalDoc);
        if(needsScores) {
          if (!needsScores4Collapsing) {
            score = scorer.score();
          }
          nullScores.add(score);
        }
      }
    }


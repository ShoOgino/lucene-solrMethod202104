  public void testMultipleSidePaths() throws Exception {
    // 0   1        2    3         4    5  6         7  8
    // the ny:4/new york wifi:5/wi fi:4 [] wifi:2/wi fi network
    TokenStream ts =
        new CannedTokenStream(
            token("the", 1, 1),
            token("ny", 1, 4),
            token("new", 0, 1),
            token("york", 1, 1),
            token("wifi", 1, 5),
            token("wi", 0, 1),
            token("fi", 1, 4),
            token("wifi", 2, 2),
            token("wi", 0, 1),
            token("fi", 1, 1),
            token("network", 1, 1));
    GraphTokenStreamFiniteStrings graph = new GraphTokenStreamFiniteStrings(ts);

    Iterator<TokenStream> it = graph.getFiniteStrings();
    assertTrue(it.hasNext());
    assertTokenStream(
        it.next(), new String[] {"the", "ny", "wifi", "network"}, new int[] {1, 1, 2, 1});
    assertTrue(it.hasNext());
    assertTokenStream(
        it.next(), new String[] {"the", "ny", "wi", "fi", "network"}, new int[] {1, 1, 2, 1, 1});
    assertTrue(it.hasNext());
    assertTokenStream(
        it.next(),
        new String[] {"the", "new", "york", "wifi", "network"},
        new int[] {1, 1, 1, 1, 1});
    assertTrue(it.hasNext());
    assertTokenStream(
        it.next(),
        new String[] {"the", "new", "york", "wi", "fi", "network"},
        new int[] {1, 1, 1, 1, 1, 1});
    assertFalse(it.hasNext());

    int[] points = graph.articulationPoints();
    assertArrayEquals(points, new int[] {1, 7});

    assertFalse(graph.hasSidePath(0));
    it = graph.getFiniteStrings(0, 1);
    assertTrue(it.hasNext());
    assertTokenStream(it.next(), new String[] {"the"}, new int[] {1});
    assertFalse(it.hasNext());
    Term[] terms = graph.getTerms("field", 0);
    assertArrayEquals(terms, new Term[] {new Term("field", "the")});

    assertTrue(graph.hasSidePath(1));
    it = graph.getFiniteStrings(1, 7);
    assertTrue(it.hasNext());
    assertTokenStream(it.next(), new String[] {"ny", "wifi"}, new int[] {1, 2});
    assertTrue(it.hasNext());
    assertTokenStream(it.next(), new String[] {"ny", "wi", "fi"}, new int[] {1, 2, 1});
    assertTrue(it.hasNext());
    assertTokenStream(it.next(), new String[] {"new", "york", "wifi"}, new int[] {1, 1, 1});
    assertTrue(it.hasNext());
    assertTokenStream(it.next(), new String[] {"new", "york", "wi", "fi"}, new int[] {1, 1, 1, 1});
    assertFalse(it.hasNext());

    assertFalse(graph.hasSidePath(7));
    it = graph.getFiniteStrings(7, -1);
    assertTrue(it.hasNext());
    assertTokenStream(it.next(), new String[] {"network"}, new int[] {1});
    assertFalse(it.hasNext());
    terms = graph.getTerms("field", 7);
    assertArrayEquals(terms, new Term[] {new Term("field", "network")});
  }


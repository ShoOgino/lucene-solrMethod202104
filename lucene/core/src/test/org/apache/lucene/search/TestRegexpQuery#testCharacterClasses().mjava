  public void testCharacterClasses() throws IOException {
    assertEquals(0, regexQueryNrHits("\\d"));
    assertEquals(1, regexQueryNrHits("\\d*"));
    assertEquals(1, regexQueryNrHits("\\d{6}"));
    assertEquals(1, regexQueryNrHits("[a\\d]{6}"));
    assertEquals(1, regexQueryNrHits("\\d{2,7}"));
    assertEquals(0, regexQueryNrHits("\\d{4}"));
    assertEquals(0, regexQueryNrHits("\\dog"));
    assertEquals(1, regexQueryNrHits("493\\d32"));

    assertEquals(1, regexQueryNrHits("\\wox"));
    assertEquals(1, regexQueryNrHits("493\\w32"));
    assertEquals(1, regexQueryNrHits("\\?\\?\\?"));
    assertEquals(1, regexQueryNrHits("\\?\\W\\?"));
    assertEquals(1, regexQueryNrHits("\\?\\S\\?"));

    assertEquals(1, regexQueryNrHits("\\[foo\\]"));
    assertEquals(1, regexQueryNrHits("\\[\\w{3}\\]"));

    assertEquals(0, regexQueryNrHits("\\s.*")); // no matches because all whitespace stripped
    assertEquals(1, regexQueryNrHits("\\S*ck")); // matches quick
    assertEquals(1, regexQueryNrHits("[\\d\\.]{3,10}")); // matches 12.3
    assertEquals(1, regexQueryNrHits("\\d{1,3}(\\.(\\d{1,2}))+")); // matches 12.3

    assertEquals(1, regexQueryNrHits("\\\\"));
    assertEquals(1, regexQueryNrHits("\\\\.*"));

    IllegalArgumentException expected =
        expectThrows(
            IllegalArgumentException.class,
            () -> {
              regexQueryNrHits("\\p");
            });
    assertTrue(expected.getMessage().contains("invalid character class"));
  }


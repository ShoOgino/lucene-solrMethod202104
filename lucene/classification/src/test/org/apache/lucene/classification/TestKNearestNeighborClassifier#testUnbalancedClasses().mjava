  /**
   * This test is for the scenario where in the first topK results from the MLT query, we have less
   * results for the expected class than the results for the bad class. But the results for the
   * expected class have a better score in comparison with the results of the second class. So we
   * would expect a greater score for the best ranked class.
   *
   * @throws Exception if any error happens
   */
  @Test
  public void testUnbalancedClasses() throws Exception {
    LeafReader leafReader = null;
    try {
      Analyzer analyzer = new EnglishAnalyzer();
      leafReader = getSampleIndex(analyzer);
      KNearestNeighborClassifier knnClassifier =
          new KNearestNeighborClassifier(
              leafReader, null, analyzer, null, 3, 1, 1, categoryFieldName, textFieldName);
      List<ClassificationResult<BytesRef>> classes =
          knnClassifier.getClasses(SUPER_STRONG_TECHNOLOGY_INPUT);
      assertTrue(classes.get(0).getScore() > classes.get(1).getScore());
      checkCorrectClassification(knnClassifier, SUPER_STRONG_TECHNOLOGY_INPUT, TECHNOLOGY_RESULT);
    } finally {
      if (leafReader != null) {
        leafReader.close();
      }
    }
  }


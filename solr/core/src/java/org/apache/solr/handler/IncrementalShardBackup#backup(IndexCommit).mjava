    // note: remember to reserve the indexCommit first so it won't get deleted concurrently
    @SuppressWarnings({"rawtypes"})
    protected NamedList backup(final IndexCommit indexCommit) throws Exception {
        assert indexCommit != null;
        URI backupLocation = incBackupFiles.getBackupLocation();
        log.info("Creating backup snapshot at {} shardBackupMetadataFile:{}", backupLocation, shardBackupId);
        NamedList<Object> details = new NamedList<>();
        details.add("startTime", Instant.now().toString());

        Collection<String> files = indexCommit.getFileNames();
        Directory dir = solrCore.getDirectoryFactory().get(solrCore.getIndexDir(),
                DirectoryFactory.DirContext.DEFAULT, solrCore.getSolrConfig().indexConfig.lockType);
        try {
            BackupStats stats = incrementalCopy(files, dir);
            details.add("indexFileCount", stats.fileCount);
            details.add("uploadedIndexFileCount", stats.uploadedFileCount);
            details.add("indexSizeMB", stats.getIndexSizeMB());
            details.add("uploadedIndexFileMB", stats.getTotalUploadedMB());
        } finally {
            solrCore.getDirectoryFactory().release(dir);
        }

        CloudDescriptor cd = solrCore.getCoreDescriptor().getCloudDescriptor();
        if (cd != null) {
            details.add("shard", cd.getShardId());
        }

        details.add("endTime", Instant.now().toString());
        details.add("shardBackupId", shardBackupId.getIdAsString());
        log.info("Done creating backup snapshot at {} shardBackupMetadataFile:{}", backupLocation, shardBackupId);
        return details;
    }


  /**
   * On the first call to {@link #next} or if {@link #accept} returns {@link
   * AcceptStatus#YES_AND_SEEK} or {@link AcceptStatus#NO_AND_SEEK}, this method will be called to
   * eventually seek the underlying TermsEnum to a new position. On the first call, {@code
   * currentTerm} will be {@code null}, later calls will provide the term the underlying enum is
   * positioned at. This method returns per default only one time the initial seek term and then
   * {@code null}, so no repositioning is ever done.
   *
   * <p>Override this method, if you want a more sophisticated TermsEnum, that repositions the
   * iterator during enumeration. If this method always returns {@code null} the enum is empty.
   *
   * <p><em>Please note:</em> This method should always provide a greater term than the last
   * enumerated term, else the behaviour of this enum violates the contract for TermsEnums.
   */
  protected BytesRef nextSeekTerm(final BytesRef currentTerm) throws IOException {
    final BytesRef t = initialSeekTerm;
    initialSeekTerm = null;
    return t;
  }


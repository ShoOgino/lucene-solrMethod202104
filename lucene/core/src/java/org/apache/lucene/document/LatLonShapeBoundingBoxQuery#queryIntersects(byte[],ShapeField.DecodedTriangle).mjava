  @Override
  protected boolean queryIntersects(byte[] t, ShapeField.DecodedTriangle scratchTriangle) {
    ShapeField.decodeTriangle(t, scratchTriangle);

    switch (scratchTriangle.type) {
      case POINT:
        {
          return encodedRectangle.contains(scratchTriangle.aX, scratchTriangle.aY);
        }
      case LINE:
        {
          int aY = scratchTriangle.aY;
          int aX = scratchTriangle.aX;
          int bY = scratchTriangle.bY;
          int bX = scratchTriangle.bX;
          return encodedRectangle.intersectsLine(aX, aY, bX, bY);
        }
      case TRIANGLE:
        {
          int aY = scratchTriangle.aY;
          int aX = scratchTriangle.aX;
          int bY = scratchTriangle.bY;
          int bX = scratchTriangle.bX;
          int cY = scratchTriangle.cY;
          int cX = scratchTriangle.cX;
          return encodedRectangle.intersectsTriangle(aX, aY, bX, bY, cX, cY);
        }
      default:
        throw new IllegalArgumentException(
            "Unsupported triangle type :[" + scratchTriangle.type + "]");
    }
  }


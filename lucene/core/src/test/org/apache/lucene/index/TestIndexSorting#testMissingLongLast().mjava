  public void testMissingLongLast() throws Exception {
    for (boolean reverse : new boolean[] {true, false}) {
      Directory dir = newDirectory();
      IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));
      SortField sortField = new SortField("foo", SortField.Type.LONG, reverse);
      sortField.setMissingValue(Long.valueOf(Long.MAX_VALUE));
      Sort indexSort = new Sort(sortField);
      iwc.setIndexSort(indexSort);
      IndexWriter w = new IndexWriter(dir, iwc);
      Document doc = new Document();
      doc.add(new NumericDocValuesField("foo", 18));
      w.addDocument(doc);
      // so we get more than one segment, so that forceMerge actually does merge, since we only get
      // a sorted segment by merging:
      w.commit();

      // missing
      w.addDocument(new Document());
      w.commit();

      doc = new Document();
      doc.add(new NumericDocValuesField("foo", 7));
      w.addDocument(doc);
      w.forceMerge(1);

      DirectoryReader r = DirectoryReader.open(w);
      LeafReader leaf = getOnlyLeafReader(r);
      assertEquals(3, leaf.maxDoc());
      NumericDocValues values = leaf.getNumericDocValues("foo");
      if (reverse) {
        // docID 0 is missing
        assertEquals(1, values.nextDoc());
        assertEquals(18, values.longValue());
        assertEquals(2, values.nextDoc());
        assertEquals(7, values.longValue());
      } else {
        assertEquals(0, values.nextDoc());
        assertEquals(7, values.longValue());
        assertEquals(1, values.nextDoc());
        assertEquals(18, values.longValue());
      }
      assertEquals(NO_MORE_DOCS, values.nextDoc());
      r.close();
      w.close();
      dir.close();
    }
  }


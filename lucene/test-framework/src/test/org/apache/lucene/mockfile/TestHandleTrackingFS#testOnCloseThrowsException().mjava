  /** Test that the delegate gets closed on exception in HandleTrackingFS#onClose */
  public void testOnCloseThrowsException() throws IOException {
    Path path =
        wrap(createTempDir()); // we are using LeakFS under the hood if we don't get closed the test
    // fails
    FileSystem fs =
        new HandleTrackingFS("test://", path.getFileSystem()) {
          @Override
          protected void onClose(Path path, Object stream) throws IOException {
            throw new IOException("boom");
          }

          @Override
          protected void onOpen(Path path, Object stream) throws IOException {
            //
          }
        }.getFileSystem(URI.create("file:///"));
    Path dir = new FilterPath(path, fs);

    OutputStream file = Files.newOutputStream(dir.resolve("somefile"));
    file.write(5);
    expectThrows(IOException.class, file::close);

    SeekableByteChannel channel = Files.newByteChannel(dir.resolve("somefile"));
    expectThrows(IOException.class, channel::close);

    InputStream stream = Files.newInputStream(dir.resolve("somefile"));
    expectThrows(IOException.class, stream::close);
    fs.close();

    DirectoryStream<Path> dirStream = Files.newDirectoryStream(dir);
    expectThrows(IOException.class, dirStream::close);
  }


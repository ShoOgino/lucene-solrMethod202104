  private void showSegmentDetails() {
    int selectedRow = segmentsTable.getSelectedRow();
    if (commitGenCombo.getSelectedItem() == null
        || selectedRow < 0
        || selectedRow >= segmentsTable.getRowCount()) {
      return;
    }

    diagRB.setEnabled(true);
    attrRB.setEnabled(true);
    codecRB.setEnabled(true);

    long commitGen = (long) commitGenCombo.getSelectedItem();
    String segName =
        (String) segmentsTable.getValueAt(selectedRow, SegmentsTableModel.Column.NAME.getIndex());
    ActionCommand command = ActionCommand.valueOf(rbGroup.getSelection().getActionCommand());

    final DefaultListModel<String> detailsModel = new DefaultListModel<>();
    switch (command) {
      case DIAGNOSTICS:
        commitsModel.getSegmentDiagnostics(commitGen, segName).entrySet().stream()
            .map(entry -> entry.getKey() + " = " + entry.getValue())
            .forEach(detailsModel::addElement);
        break;
      case ATTRIBUTES:
        commitsModel.getSegmentAttributes(commitGen, segName).entrySet().stream()
            .map(entry -> entry.getKey() + " = " + entry.getValue())
            .forEach(detailsModel::addElement);
        break;
      case CODEC:
        commitsModel
            .getSegmentCodec(commitGen, segName)
            .ifPresent(
                codec -> {
                  Map<String, String> map = new HashMap<>();
                  map.put("Codec name", codec.getName());
                  map.put("Codec class name", codec.getClass().getName());
                  map.put("Compound format", codec.compoundFormat().getClass().getName());
                  map.put("DocValues format", codec.docValuesFormat().getClass().getName());
                  map.put("FieldInfos format", codec.fieldInfosFormat().getClass().getName());
                  map.put("LiveDocs format", codec.liveDocsFormat().getClass().getName());
                  map.put("Norms format", codec.normsFormat().getClass().getName());
                  map.put("Points format", codec.pointsFormat().getClass().getName());
                  map.put("Postings format", codec.postingsFormat().getClass().getName());
                  map.put("SegmentInfo format", codec.segmentInfoFormat().getClass().getName());
                  map.put("StoredFields format", codec.storedFieldsFormat().getClass().getName());
                  map.put("TermVectors format", codec.termVectorsFormat().getClass().getName());
                  map.entrySet().stream()
                      .map(entry -> entry.getKey() + " = " + entry.getValue())
                      .forEach(detailsModel::addElement);
                });
        break;
    }
    segDetailList.setModel(detailsModel);
  }


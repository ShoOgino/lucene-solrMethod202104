  private void testMinRfOnRetries(NodeType nodeType) throws Exception {
    final HttpSolrClient solrclient = (HttpSolrClient) clients.get(0);
    final MockStreamingSolrClients streamingClients = new MockStreamingSolrClients(updateShardHandler);
    try (SolrCmdDistributor cmdDistrib = new SolrCmdDistributor(streamingClients, 0)) {
      streamingClients.setExp(Exp.CONNECT_EXCEPTION);
      ArrayList<Node> nodes = new ArrayList<>();

      final AtomicInteger retries = new AtomicInteger();
      ZkNodeProps nodeProps = new ZkNodeProps(ZkStateReader.BASE_URL_PROP, solrclient.getBaseURL(), ZkStateReader.CORE_NAME_PROP, "");
      if (nodeType == NodeType.FORWARD) {
        nodes.add(new ForwardNode(new ZkCoreNodeProps(nodeProps), null, "collection1", "shard1", 5) {
          @Override
          public boolean checkRetry(Error err) {
            if (retries.incrementAndGet() >= 3) {
              streamingClients.setExp(null);
            }
            return super.checkRetry(err);
          }
        });
      } else {
        nodes.add(new StdNode(new ZkCoreNodeProps(nodeProps), "collection1", "shard1", 5) {
          @Override
          public boolean checkRetry(Error err) {
            if (retries.incrementAndGet() >= 3) {
              streamingClients.setExp(null);
            }
            return super.checkRetry(err);
          }
        });
      }


      AddUpdateCommand cmd = new AddUpdateCommand(null);
      cmd.solrDoc = sdoc("id", id.incrementAndGet());
      ModifiableSolrParams params = new ModifiableSolrParams();
      RollupRequestReplicationTracker rollupReqTracker = new RollupRequestReplicationTracker();
      LeaderRequestReplicationTracker leaderReqTracker = new LeaderRequestReplicationTracker("shard1");

      cmdDistrib.distribAdd(cmd, nodes, params, false, rollupReqTracker, leaderReqTracker);
      cmdDistrib.finish();
      assertEquals(3, retries.get());
      assertEquals(2, leaderReqTracker.getAchievedRf());// "2" here is because one would be the leader, that creates the instance of LeaderRequestReplicationTracker, the second one is the node

      assertEquals(0, cmdDistrib.getErrors().size());
    }
  }


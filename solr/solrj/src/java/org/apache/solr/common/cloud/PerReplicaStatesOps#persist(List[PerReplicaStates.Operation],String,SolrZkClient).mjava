    /**
     * Persist a set of operations to Zookeeper
     */
    private void persist(List<PerReplicaStates.Operation> operations, String znode, SolrZkClient zkClient) throws KeeperException, InterruptedException {
        if (operations == null || operations.isEmpty()) return;
        if (log.isDebugEnabled()) {
            log.debug("Per-replica state being persisted for : '{}', ops: {}", znode, operations);
        }

        List<Op> ops = new ArrayList<>(operations.size());
        for (PerReplicaStates.Operation op : operations) {
            // the state of the replica is being updated
            String path = znode + "/" + op.state.asString;
            ops.add(op.typ == PerReplicaStates.Operation.Type.ADD ?
                    Op.create(path, null, zkClient.getZkACLProvider().getACLsToAdd(path), CreateMode.PERSISTENT) :
                    Op.delete(path, -1));
        }
        try {
            zkClient.multi(ops, true);
        } catch (KeeperException e) {
          log.error("Multi-op exception: {}", zkClient.getChildren(znode, null, true));
          throw e;
        }

    }


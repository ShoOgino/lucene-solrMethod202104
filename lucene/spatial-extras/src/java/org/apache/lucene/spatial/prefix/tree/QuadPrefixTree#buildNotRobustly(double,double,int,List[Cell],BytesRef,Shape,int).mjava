  private void buildNotRobustly(
      double x, double y, int level, List<Cell> matches, BytesRef str, Shape shape, int maxLevel) {
    assert str.length == level;
    double w = levelW[level] / 2;
    double h = levelH[level] / 2;

    // Z-Order
    // http://en.wikipedia.org/wiki/Z-order_%28curve%29
    checkBattenbergNotRobustly('A', x - w, y + h, level, matches, str, shape, maxLevel);
    checkBattenbergNotRobustly('B', x + w, y + h, level, matches, str, shape, maxLevel);
    checkBattenbergNotRobustly('C', x - w, y - h, level, matches, str, shape, maxLevel);
    checkBattenbergNotRobustly('D', x + w, y - h, level, matches, str, shape, maxLevel);

    // possibly consider hilbert curve
    // http://en.wikipedia.org/wiki/Hilbert_curve
    // http://blog.notdot.net/2009/11/Damn-Cool-Algorithms-Spatial-indexing-with-Quadtrees-and-Hilbert-Curves
    // if we actually use the range property in the query, this could be useful
  }


  /** In a single doc, for the same field, mix the term vectors up */
  public void testInconsistentTermVectorOptions() throws IOException {
    FieldType a, b;

    // no vectors + vectors
    a = new FieldType(TextField.TYPE_NOT_STORED);
    b = new FieldType(TextField.TYPE_NOT_STORED);
    b.setStoreTermVectors(true);
    doTestMixup(a, b);

    // vectors + vectors with pos
    a = new FieldType(TextField.TYPE_NOT_STORED);
    a.setStoreTermVectors(true);
    b = new FieldType(TextField.TYPE_NOT_STORED);
    b.setStoreTermVectors(true);
    b.setStoreTermVectorPositions(true);
    doTestMixup(a, b);

    // vectors + vectors with off
    a = new FieldType(TextField.TYPE_NOT_STORED);
    a.setStoreTermVectors(true);
    b = new FieldType(TextField.TYPE_NOT_STORED);
    b.setStoreTermVectors(true);
    b.setStoreTermVectorOffsets(true);
    doTestMixup(a, b);

    // vectors with pos + vectors with pos + off
    a = new FieldType(TextField.TYPE_NOT_STORED);
    a.setStoreTermVectors(true);
    a.setStoreTermVectorPositions(true);
    b = new FieldType(TextField.TYPE_NOT_STORED);
    b.setStoreTermVectors(true);
    b.setStoreTermVectorPositions(true);
    b.setStoreTermVectorOffsets(true);
    doTestMixup(a, b);

    // vectors with pos + vectors with pos + pay
    a = new FieldType(TextField.TYPE_NOT_STORED);
    a.setStoreTermVectors(true);
    a.setStoreTermVectorPositions(true);
    b = new FieldType(TextField.TYPE_NOT_STORED);
    b.setStoreTermVectors(true);
    b.setStoreTermVectorPositions(true);
    b.setStoreTermVectorPayloads(true);
    doTestMixup(a, b);
  }


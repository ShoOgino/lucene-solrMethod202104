  /**
   * shuffle underlying contents randomly with different seeds, and ensure shuffling that again with
   * the same seed is consistent.
   */
  public void testConsistentOrder() throws IOException {
    Path raw = createTempDir();
    for (int i = 0; i < 100; i++) {
      Files.createFile(raw.resolve("file" + i));
    }

    long seed = random().nextLong();
    Path dirExpected = wrap(raw, seed);

    // get the shuffled listing for the seed.
    List<String> expected = new ArrayList<>();
    try (DirectoryStream<Path> stream = Files.newDirectoryStream(dirExpected)) {
      for (Path path : stream) {
        expected.add(path.getFileName().toString());
      }
    }

    // shuffle wrapping a different scrambled ordering each time, it should always be the same.
    for (int i = 0; i < 100; i++) {
      Path scrambled = wrap(raw, random().nextLong());
      Path ordered = wrap(scrambled, seed);

      List<String> seen = new ArrayList<>();
      try (DirectoryStream<Path> stream = Files.newDirectoryStream(ordered)) {
        for (Path path : stream) {
          seen.add(path.getFileName().toString());
        }
      }

      // we should always see the same files in the same order
      assertEquals(expected, seen);
    }
  }


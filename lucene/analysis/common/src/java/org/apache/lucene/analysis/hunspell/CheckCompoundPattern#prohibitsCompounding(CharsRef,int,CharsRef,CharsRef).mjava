  boolean prohibitsCompounding(
      CharsRef word, int breakPos, CharsRef stemBefore, CharsRef stemAfter) {
    if (isNonAffixedPattern(endChars)) {
      if (!charsMatch(word, breakPos - stemBefore.length, stemBefore.chars)) {
        return false;
      }
    } else if (!charsMatch(word, breakPos - endChars.length, endChars)) {
      return false;
    }

    if (isNonAffixedPattern(beginChars)) {
      if (!charsMatch(word, breakPos, stemAfter.chars)) {
        return false;
      }
    } else if (!charsMatch(word, breakPos, beginChars)) {
      return false;
    }

    if (endFlags.length > 0 && !stemHasFlags(stemBefore, endFlags)) {
      return false;
    }
    //noinspection RedundantIfStatement
    if (beginFlags.length > 0 && !stemHasFlags(stemAfter, beginFlags)) {
      return false;
    }

    return true;
  }


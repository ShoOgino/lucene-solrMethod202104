  /**
   * Carefully determine if the file on the primary, identified by its {@code String fileName} along
   * with the {@link FileMetaData} "summarizing" its contents, is precisely the same file that we
   * have locally. If the file does not exist locally, or if its header (includes the segment id),
   * length, footer (including checksum) differ, then this returns false, else true.
   */
  private boolean fileIsIdentical(String fileName, FileMetaData srcMetaData) throws IOException {

    FileMetaData destMetaData = readLocalFileMetaData(fileName);
    if (destMetaData == null) {
      // Something went wrong in reading the file (it's corrupt, truncated, does not exist, etc.):
      return false;
    }

    if (Arrays.equals(destMetaData.header, srcMetaData.header) == false
        || Arrays.equals(destMetaData.footer, srcMetaData.footer) == false) {
      // Segment name was reused!  This is rare but possible and otherwise devastating:
      if (Node.VERBOSE_FILES) {
        message("file " + fileName + ": will copy [header/footer is different]");
      }
      return false;
    } else {
      return true;
    }
  }


  /**
   * Sorts the given random access {@link List} in natural order. The list must implement {@link
   * RandomAccess}. This method uses the Tim sort algorithm, but falls back to binary sort for small
   * lists.
   *
   * @throws IllegalArgumentException if list is e.g. a linked list without random access.
   */
  public static <T extends Comparable<? super T>> void timSort(List<T> list) {
    final int size = list.size();
    if (size <= 1) return;
    timSort(list, Comparator.naturalOrder());
  }


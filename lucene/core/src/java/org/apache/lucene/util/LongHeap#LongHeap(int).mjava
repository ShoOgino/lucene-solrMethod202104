  /**
   * Create an empty priority queue of the configured size.
   * @param maxSize the maximum size of the heap, or if negative, the initial size of an unbounded heap
   */
  LongHeap(int maxSize) {
    final int heapSize;
    if (maxSize < 0) {
      // initial size; this may grow
      heapSize = -maxSize;
      this.maxSize = UNBOUNDED;
    } else {
      if ((maxSize < 1) || (maxSize >= ArrayUtil.MAX_ARRAY_LENGTH)) {
        // Throw exception to prevent confusing OOME:
        throw new IllegalArgumentException("maxSize must be UNBOUNDED(-1) or > 0 and < " + (ArrayUtil.MAX_ARRAY_LENGTH) + "; got: " + maxSize);
      }
      // NOTE: we add +1 because all access to heap is 1-based not 0-based.  heap[0] is unused.
      heapSize = maxSize + 1;
      this.maxSize = maxSize;
    }
    this.heap = new long[heapSize];
  }


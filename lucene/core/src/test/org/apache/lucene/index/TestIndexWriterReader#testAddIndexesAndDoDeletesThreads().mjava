  @Slow
  public void testAddIndexesAndDoDeletesThreads() throws Throwable {
    final int numIter = TEST_NIGHTLY ? 2 : 1;
    int numDirs = TEST_NIGHTLY ? 3 : 2;

    Directory mainDir = getAssertNoDeletesDirectory(newDirectory());

    IndexWriter mainWriter =
        new IndexWriter(
            mainDir,
            newIndexWriterConfig(new MockAnalyzer(random()))
                .setMergePolicy(newLogMergePolicy())
                .setMaxFullFlushMergeWaitMillis(0));
    TestUtil.reduceOpenFiles(mainWriter);

    AddDirectoriesThreads addDirThreads = new AddDirectoriesThreads(numIter, mainWriter);
    addDirThreads.launchThreads(numDirs);
    addDirThreads.joinThreads();

    // assertEquals(100 + numDirs * (3 * numIter / 4) * addDirThreads.numThreads
    //    * addDirThreads.NUM_INIT_DOCS, addDirThreads.mainwriter.getDocStats().numDocs);
    assertEquals(addDirThreads.count.intValue(), addDirThreads.mainWriter.getDocStats().numDocs);

    addDirThreads.close(true);

    assertTrue(addDirThreads.failures.size() == 0);

    TestUtil.checkIndex(mainDir);

    IndexReader reader = DirectoryReader.open(mainDir);
    assertEquals(addDirThreads.count.intValue(), reader.numDocs());
    // assertEquals(100 + numDirs * (3 * numIter / 4) * addDirThreads.numThreads
    //    * addDirThreads.NUM_INIT_DOCS, reader.numDocs());
    reader.close();

    addDirThreads.closeDir();
    mainDir.close();
  }


  /**
   * Construct the named stemming filter.
   *
   * <p>Available stemmers are listed in {@link org.tartarus.snowball.ext}. The name of a stemmer is
   * the part of the class name before "Stemmer", e.g., the stemmer in {@link
   * org.tartarus.snowball.ext.EnglishStemmer} is named "English".
   *
   * @param in the input tokens to stem
   * @param name the name of a stemmer
   */
  public SnowballFilter(TokenStream in, String name) {
    super(in);
    // Class.forName is frowned upon in place of the ResourceLoader but in this case,
    // the factory will use the other constructor so that the program is already loaded.
    try {
      Class<? extends SnowballStemmer> stemClass =
          Class.forName("org.tartarus.snowball.ext." + name + "Stemmer")
              .asSubclass(SnowballStemmer.class);
      stemmer = stemClass.getConstructor().newInstance();
    } catch (Exception e) {
      throw new IllegalArgumentException("Invalid stemmer class specified: " + name, e);
    }
  }


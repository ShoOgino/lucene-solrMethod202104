    /**
     * When preparing the reranking queries for logging features various scenarios apply:
     * 
     * No Reranking 
     * There is the need of a logger model from the default feature store or the explicit feature store passed
     * to extract the feature vector
     * 
     * Re Ranking
     * 1) If no explicit feature store is passed, the models for each reranking query can be safely re-used
     * the feature vector can be fetched from the feature vector cache.
     * 2) If an explicit feature store is passed, and no reranking query uses a model with that feature store,
     * There is the need of a logger model to extract the feature vector
     * 3) If an explicit feature store is passed, and there is a reranking query that uses a model with that feature store,
     * the model can be re-used and there is no need for a logging model
     *
     * @param transformerFeatureStore explicit feature store for the transformer
     * @param transformerExternalFeatureInfo explicit efi for the transformer
     */
    private void setupRerankingQueriesForLogging(String transformerFeatureStore, Map<String, String[]> transformerExternalFeatureInfo, LoggingModel loggingModel) {
      if (docsWereNotReranked) { //no reranking query
        LTRScoringQuery loggingQuery = new LTRScoringQuery(loggingModel,
            transformerExternalFeatureInfo,
            true /* extractAllFeatures */,
            threadManager);
        rerankingQueries = new LTRScoringQuery[]{loggingQuery};
      } else {
        rerankingQueries = new LTRScoringQuery[rerankingQueriesFromContext.length];
        System.arraycopy(rerankingQueriesFromContext, 0, rerankingQueries, 0, rerankingQueriesFromContext.length);

        if (transformerFeatureStore != null) {// explicit feature store for the transformer
          LTRScoringModel matchingRerankingModel = loggingModel;
          for (LTRScoringQuery rerankingQuery : rerankingQueries) {
            if (!(rerankingQuery instanceof OriginalRankingLTRScoringQuery) &&
                transformerFeatureStore.equals(rerankingQuery.getScoringModel().getFeatureStoreName())) {
              matchingRerankingModel = rerankingQuery.getScoringModel();
            }
          }

          for (int i = 0; i < rerankingQueries.length; i++) {
            rerankingQueries[i] = new LTRScoringQuery(
                matchingRerankingModel,
                (!transformerExternalFeatureInfo.isEmpty() ? transformerExternalFeatureInfo : rerankingQueries[i].getExternalFeatureInfo()),
                true /* extractAllFeatures */,
                threadManager);
          }
        }
      }
    }


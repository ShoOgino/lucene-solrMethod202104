  public void testTimeoutLargeNumberOfMerges() throws IOException, InterruptedException {
    try (Directory dir = newDirectory()) {
      MergePolicy.MergeSpecification ms = createRandomMergeSpecification(dir, 10000);
      for (MergePolicy.OneMerge m : ms.merges) {
        assertFalse(m.hasCompletedSuccessfully().isPresent());
      }
      AtomicInteger i = new AtomicInteger(0);
      AtomicBoolean stop = new AtomicBoolean(false);
      Thread t =
          new Thread(
              () -> {
                while (stop.get() == false) {
                  try {
                    ms.merges.get(i.getAndIncrement()).close(true, false, mr -> {});
                    Thread.sleep(1);
                  } catch (IOException | InterruptedException e) {
                    throw new AssertionError(e);
                  }
                }
              });
      t.start();
      assertFalse(ms.await(10, TimeUnit.MILLISECONDS));
      stop.set(true);
      t.join();
      for (int j = 0; j < ms.merges.size(); j++) {
        if (j < i.get()) {
          assertTrue(ms.merges.get(j).hasCompletedSuccessfully().get());
        } else {
          assertFalse(ms.merges.get(j).hasCompletedSuccessfully().isPresent());
        }
      }
    }
  }


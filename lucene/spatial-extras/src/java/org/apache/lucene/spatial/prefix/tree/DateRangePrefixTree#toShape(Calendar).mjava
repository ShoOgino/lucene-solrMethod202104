  /**
   * Converts the Calendar into a Shape. The isSet() state of the Calendar is re-instated when done.
   * If a Calendar is passed in, there might be problems if it is not created via {@link #newCal()}.
   */
  public UnitNRShape toShape(Calendar cal) {
    // Convert a Calendar into a stack of cell numbers
    final int calPrecField = getCalPrecisionField(cal); // must call first; getters set all fields
    try {
      int[] valStack = new int[maxLevels]; // starts at level 1, not 0
      int len = 0;
      if (calPrecField >= Calendar.YEAR) { // year or better precision
        int year = cal.get(Calendar.YEAR);
        int yearAdj = cal.get(Calendar.ERA) == 0 ? AD_YEAR_BASE - (year - 1) : AD_YEAR_BASE + year;

        valStack[len++] = yearAdj / 1000_000;
        yearAdj -= valStack[len - 1] * 1000_000;
        valStack[len++] = yearAdj / 1000;
        yearAdj -= valStack[len - 1] * 1000;
        valStack[len++] = yearAdj;
        for (int level = YEAR_LEVEL + 1; level < FIELD_BY_LEVEL.length; level++) {
          int field = FIELD_BY_LEVEL[level];
          if (field > calPrecField) break;
          valStack[len++] = cal.get(field) - cal.getActualMinimum(field);
        }
      }

      return toShape(valStack, len);
    } finally {
      clearFieldsAfter(cal, calPrecField); // restore precision state modified by get()
    }
  }


  /**
   * Report statistics as a string, aggregate for tasks named the same, and from the same round.
   *
   * @return the report
   */
  protected Report reportSumByNameRound(List<TaskStats> taskStats) {
    // aggregate by task name and round
    LinkedHashMap<String, TaskStats> p2 = new LinkedHashMap<>();
    int reported = 0;
    for (final TaskStats stat1 : taskStats) {
      if (stat1.getElapsed() >= 0) { // consider only tasks that ended
        reported++;
        String name = stat1.getTask().getName();
        String rname = stat1.getRound() + "." + name; // group by round
        TaskStats stat2 = p2.get(rname);
        if (stat2 == null) {
          try {
            stat2 = stat1.clone();
          } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
          }
          p2.put(rname, stat2);
        } else {
          stat2.add(stat1);
        }
      }
    }
    // now generate report from secondary list p2
    return genPartialReport(reported, p2, taskStats.size());
  }


  // malformed rule causes ParseException
  public void testInvalidData() throws Exception {
    InputStream affixStream = getClass().getResourceAsStream("broken.aff");
    InputStream dictStream = getClass().getResourceAsStream("simple.dic");
    Directory tempDir = getDirectory();

    ParseException expected =
        expectThrows(
            ParseException.class,
            () -> {
              new Dictionary(tempDir, "dictionary", affixStream, dictStream);
            });
    assertTrue(
        expected
            .getMessage()
            .startsWith("The affix file contains a rule with less than four elements"));
    assertEquals(24, expected.getErrorOffset());

    affixStream.close();
    dictStream.close();
    tempDir.close();
  }


  @Test
  public void testIntervalQueries() throws IOException {
    String field = FLD_TEXT_POS_OFFS;

    new IndexBuilder(this::toField)
        .doc(field, "foo baz foo")
        .doc(field, "bas baz foo")
        .doc(field, "bar baz foo xyz")
        .build(
            analyzer,
            reader -> {
              assertThat(
                  highlights(
                      reader,
                      new IntervalQuery(
                          field,
                          Intervals.unordered(
                              Intervals.term("foo"),
                              Intervals.term("bas"),
                              Intervals.term("baz")))),
                  containsInAnyOrder(fmt("1: (field_text_offs: '>bas baz foo<')", field)));

              assertThat(
                  highlights(
                      reader,
                      new IntervalQuery(
                          field,
                          Intervals.maxgaps(
                              1,
                              Intervals.unordered(Intervals.term("foo"), Intervals.term("bar"))))),
                  containsInAnyOrder(fmt("2: (field_text_offs: '>bar baz foo< xyz')", field)));

              assertThat(
                  highlights(
                      reader,
                      new IntervalQuery(
                          field,
                          Intervals.containing(
                              Intervals.unordered(Intervals.term("foo"), Intervals.term("bar")),
                              Intervals.term("foo")))),
                  containsInAnyOrder(fmt("2: (field_text_offs: '>bar baz foo< xyz')", field)));

              assertThat(
                  highlights(
                      reader,
                      new IntervalQuery(
                          field,
                          Intervals.containedBy(
                              Intervals.term("foo"),
                              Intervals.unordered(Intervals.term("foo"), Intervals.term("bar"))))),
                  containsInAnyOrder(fmt("2: (field_text_offs: '>bar baz foo< xyz')", field)));

              assertThat(
                  highlights(
                      reader,
                      new IntervalQuery(
                          field,
                          Intervals.overlapping(
                              Intervals.unordered(Intervals.term("foo"), Intervals.term("bar")),
                              Intervals.term("foo")))),
                  containsInAnyOrder(fmt("2: (field_text_offs: '>bar baz foo< xyz')", field)));
            });
  }


  private void buildAnalyzer() {
    List<String> charFilters = ListUtils.getAllItems(selectedCfList);
    assert charFilters.size() == cfParamsList.size();

    List<String> tokenFilters = ListUtils.getAllItems(selectedTfList);
    assert tokenFilters.size() == tfParamsList.size();

    String tokenizerName = selectedTokTF.getText();
    CustomAnalyzerConfig.Builder builder =
        new CustomAnalyzerConfig.Builder(tokenizerName, tokParams).configDir(confDirTF.getText());
    IntStream.range(0, charFilters.size())
        .forEach(i -> builder.addCharFilterConfig(charFilters.get(i), cfParamsList.get(i)));
    IntStream.range(0, tokenFilters.size())
        .forEach(i -> builder.addTokenFilterConfig(tokenFilters.get(i), tfParamsList.get(i)));
    CustomAnalyzerConfig config = builder.build();

    operatorRegistry
        .get(AnalysisTabOperator.class)
        .ifPresent(
            operator -> {
              operator.setAnalyzerByCustomConfiguration(config);
              messageBroker.showStatusMessage(
                  MessageUtils.getLocalizedMessage("analysis.message.build_success"));
              buildBtn.setEnabled(false);
            });
  }


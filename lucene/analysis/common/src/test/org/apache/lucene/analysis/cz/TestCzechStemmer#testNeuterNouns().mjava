  /** Test showing how neuter noun forms conflate */
  public void testNeuterNouns() throws IOException {
    CzechAnalyzer cz = new CzechAnalyzer();

    /* ending with o */
    assertAnalyzesTo(cz, "město", new String[] {"měst"});
    assertAnalyzesTo(cz, "města", new String[] {"měst"});
    assertAnalyzesTo(cz, "měst", new String[] {"měst"});
    assertAnalyzesTo(cz, "městu", new String[] {"měst"});
    assertAnalyzesTo(cz, "městům", new String[] {"měst"});
    assertAnalyzesTo(cz, "městě", new String[] {"měst"});
    assertAnalyzesTo(cz, "městech", new String[] {"měst"});
    assertAnalyzesTo(cz, "městem", new String[] {"měst"});
    assertAnalyzesTo(cz, "městy", new String[] {"měst"});

    /* ending with e */
    assertAnalyzesTo(cz, "moře", new String[] {"moř"});
    assertAnalyzesTo(cz, "moří", new String[] {"moř"});
    assertAnalyzesTo(cz, "mořím", new String[] {"moř"});
    assertAnalyzesTo(cz, "moři", new String[] {"moř"});
    assertAnalyzesTo(cz, "mořích", new String[] {"moř"});
    assertAnalyzesTo(cz, "mořem", new String[] {"moř"});

    /* ending with ě */
    assertAnalyzesTo(cz, "kuře", new String[] {"kuř"});
    assertAnalyzesTo(cz, "kuřata", new String[] {"kuř"});
    assertAnalyzesTo(cz, "kuřete", new String[] {"kuř"});
    assertAnalyzesTo(cz, "kuřat", new String[] {"kuř"});
    assertAnalyzesTo(cz, "kuřeti", new String[] {"kuř"});
    assertAnalyzesTo(cz, "kuřatům", new String[] {"kuř"});
    assertAnalyzesTo(cz, "kuřatech", new String[] {"kuř"});
    assertAnalyzesTo(cz, "kuřetem", new String[] {"kuř"});
    assertAnalyzesTo(cz, "kuřaty", new String[] {"kuř"});

    /* ending with í */
    assertAnalyzesTo(cz, "stavení", new String[] {"stavn"});
    assertAnalyzesTo(cz, "stavením", new String[] {"stavn"});
    assertAnalyzesTo(cz, "staveních", new String[] {"stavn"});
    assertAnalyzesTo(cz, "staveními", new String[] {"stavn"});

    cz.close();
  }


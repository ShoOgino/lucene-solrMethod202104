  /**
   * Converts {@link SortedDocValues} into the ord for each document as an {@code
   * Iterable&lt;Number&gt;}.
   *
   * @deprecated Consume {@link SortedDocValues} instead.
   */
  @Deprecated
  public static Iterable<Number> sortedOrdIterable(
      final DocValuesProducer valuesProducer, FieldInfo fieldInfo, int maxDoc) {
    return new Iterable<Number>() {
      @Override
      public Iterator<Number> iterator() {

        final SortedDocValues values;
        try {
          values = valuesProducer.getSorted(fieldInfo);
        } catch (IOException ioe) {
          throw new RuntimeException(ioe);
        }

        return new Iterator<Number>() {
          private int nextDocID;

          @Override
          public boolean hasNext() {
            return nextDocID < maxDoc;
          }

          @Override
          public Number next() {
            try {
              if (nextDocID > values.docID()) {
                values.nextDoc();
              }
              int result;
              if (nextDocID == values.docID()) {
                result = values.ordValue();
              } else {
                result = -1;
              }
              nextDocID++;
              return result;
            } catch (IOException ioe) {
              throw new RuntimeException(ioe);
            }
          }
        };
      }
    };
  }


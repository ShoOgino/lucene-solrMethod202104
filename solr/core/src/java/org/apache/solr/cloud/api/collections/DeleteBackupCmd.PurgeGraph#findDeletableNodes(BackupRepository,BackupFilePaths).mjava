        public void findDeletableNodes(BackupRepository repository, BackupFilePaths backupPaths) {
            // mark nodes as existing
            visitExistingNodes(repository.listAllOrEmpty(backupPaths.getShardBackupMetadataDir()),
                    shardBackupMetadataNodeMap, shardBackupMetadataDeletes);
            // this may be a long running commands
            visitExistingNodes(repository.listAllOrEmpty(backupPaths.getIndexDir()),
                    indexFileNodeMap, indexFileDeletes);

            // for nodes which are not existing, propagate that information to other nodes
            shardBackupMetadataNodeMap.values().forEach(Node::propagateNotExisting);
            indexFileNodeMap.values().forEach(Node::propagateNotExisting);

            addDeleteNodesToQueue(backupIdNodeMap, backupIdDeletes);
            addDeleteNodesToQueue(shardBackupMetadataNodeMap, shardBackupMetadataDeletes);
            addDeleteNodesToQueue(indexFileNodeMap, indexFileDeletes);
        }


    synchronized void verifyConsistentDimensions(
        Integer number,
        String name,
        int dataDimensionCount,
        int indexDimensionCount,
        int dimensionNumBytes) {
      if (name.equals(numberToName.get(number)) == false) {
        throw new IllegalArgumentException(
            "field number "
                + number
                + " is already mapped to field name \""
                + numberToName.get(number)
                + "\", not \""
                + name
                + "\"");
      }
      if (number.equals(nameToNumber.get(name)) == false) {
        throw new IllegalArgumentException(
            "field name \""
                + name
                + "\" is already mapped to field number \""
                + nameToNumber.get(name)
                + "\", not \""
                + number
                + "\"");
      }
      FieldDimensions dim = dimensions.get(name);
      if (dim != null) {
        if (dim.dimensionCount != dataDimensionCount) {
          throw new IllegalArgumentException(
              "cannot change point dimension count from "
                  + dim.dimensionCount
                  + " to "
                  + dataDimensionCount
                  + " for field=\""
                  + name
                  + "\"");
        }
        if (dim.indexDimensionCount != indexDimensionCount) {
          throw new IllegalArgumentException(
              "cannot change point index dimension count from "
                  + dim.indexDimensionCount
                  + " to "
                  + indexDimensionCount
                  + " for field=\""
                  + name
                  + "\"");
        }
        if (dim.dimensionNumBytes != dimensionNumBytes) {
          throw new IllegalArgumentException(
              "cannot change point numBytes from "
                  + dim.dimensionNumBytes
                  + " to "
                  + dimensionNumBytes
                  + " for field=\""
                  + name
                  + "\"");
        }
      }
    }


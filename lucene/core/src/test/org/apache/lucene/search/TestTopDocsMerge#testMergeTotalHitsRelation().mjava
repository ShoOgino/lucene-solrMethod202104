  public void testMergeTotalHitsRelation() {
    TopDocs topDocs1 =
        new TopDocs(
            new TotalHits(2, TotalHits.Relation.EQUAL_TO),
            new ScoreDoc[] {new ScoreDoc(42, 2f, 0)});
    TopDocs topDocs2 =
        new TopDocs(
            new TotalHits(1, TotalHits.Relation.EQUAL_TO),
            new ScoreDoc[] {new ScoreDoc(42, 2f, 1)});
    TopDocs topDocs3 =
        new TopDocs(
            new TotalHits(1, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO),
            new ScoreDoc[] {new ScoreDoc(42, 2f, 2)});
    TopDocs topDocs4 =
        new TopDocs(
            new TotalHits(3, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO),
            new ScoreDoc[] {new ScoreDoc(42, 2f, 3)});

    TopDocs merged1 = TopDocs.merge(1, new TopDocs[] {topDocs1, topDocs2});
    assertEquals(new TotalHits(3, TotalHits.Relation.EQUAL_TO), merged1.totalHits);

    TopDocs merged2 = TopDocs.merge(1, new TopDocs[] {topDocs1, topDocs3});
    assertEquals(new TotalHits(3, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), merged2.totalHits);

    TopDocs merged3 = TopDocs.merge(1, new TopDocs[] {topDocs3, topDocs4});
    assertEquals(new TotalHits(4, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), merged3.totalHits);

    TopDocs merged4 = TopDocs.merge(1, new TopDocs[] {topDocs4, topDocs2});
    assertEquals(new TotalHits(4, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), merged4.totalHits);
  }


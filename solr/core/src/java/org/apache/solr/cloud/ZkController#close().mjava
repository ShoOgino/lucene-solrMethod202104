  /**
   * Closes the underlying ZooKeeper client.
   */
  public void close() {
    if (!this.isClosed)
      preClose();

    ExecutorService customThreadPool = ExecutorUtil.newMDCAwareCachedThreadPool(new SolrNamedThreadFactory("closeThreadPool"));

    customThreadPool.submit(() -> IOUtils.closeQuietly(overseerElector.getContext()));

    customThreadPool.submit(() -> IOUtils.closeQuietly(overseer));

    try {
      customThreadPool.submit(() -> {
        Collection<ElectionContext> values = electionContexts.values();
        synchronized (electionContexts) {
          values.forEach(IOUtils::closeQuietly);
        }
      });

    } finally {

      sysPropsCacher.close();
      customThreadPool.submit(() -> IOUtils.closeQuietly(cloudSolrClient));
      customThreadPool.submit(() -> IOUtils.closeQuietly(cloudManager));

      try {
        try {
          zkStateReader.close();
        } catch (Exception e) {
          log.error("Error closing zkStateReader", e);
        }
      } finally {
        try {
          zkClient.close();
        } catch (Exception e) {
          log.error("Error closing zkClient", e);
        } finally {

          // just in case the OverseerElectionContext managed to start another Overseer
          IOUtils.closeQuietly(overseer);

          ExecutorUtil.shutdownAndAwaitTermination(customThreadPool);
        }

      }

    }
    assert ObjectReleaseTracker.release(this);
  }


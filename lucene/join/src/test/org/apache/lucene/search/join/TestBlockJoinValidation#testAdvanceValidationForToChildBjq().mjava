  public void testAdvanceValidationForToChildBjq() throws Exception {
    Query parentQuery = new MatchAllDocsQuery();
    ToChildBlockJoinQuery blockJoinQuery = new ToChildBlockJoinQuery(parentQuery, parentsFilter);

    final LeafReaderContext context = indexSearcher.getIndexReader().leaves().get(0);
    Weight weight =
        indexSearcher.createWeight(
            indexSearcher.rewrite(blockJoinQuery), org.apache.lucene.search.ScoreMode.COMPLETE, 1);
    Scorer scorer = weight.scorer(context);
    final Bits parentDocs = parentsFilter.getBitSet(context);

    int target;
    do {
      // make the parent scorer advance to a doc ID which is not a parent
      target = TestUtil.nextInt(random(), 0, context.reader().maxDoc() - 2);
    } while (parentDocs.get(target + 1));

    final int illegalTarget = target;
    IllegalStateException expected =
        expectThrows(
            IllegalStateException.class,
            () -> {
              scorer.iterator().advance(illegalTarget);
            });
    assertTrue(
        expected.getMessage() != null
            && expected.getMessage().contains(ToChildBlockJoinQuery.INVALID_QUERY_MESSAGE));
  }


  /** parses a POLYGON */
  private static Polygon parsePolygon(StreamTokenizer stream) throws IOException, ParseException {
    if (nextEmptyOrOpen(stream).equals(EMPTY)) {
      return null;
    }
    nextOpener(stream);
    ArrayList<Double> lats = new ArrayList<>();
    ArrayList<Double> lons = new ArrayList<>();
    parseCoordinates(stream, lats, lons);
    ArrayList<Polygon> holes = new ArrayList<>();
    while (nextCloserOrComma(stream).equals(COMMA)) {
      holes.add(parsePolygonHole(stream));
    }

    if (holes.isEmpty() == false) {
      return new Polygon(
          lats.stream().mapToDouble(i -> i).toArray(),
          lons.stream().mapToDouble(i -> i).toArray(),
          holes.toArray(new Polygon[holes.size()]));
    }
    return new Polygon(
        lats.stream().mapToDouble(i -> i).toArray(), lons.stream().mapToDouble(i -> i).toArray());
  }


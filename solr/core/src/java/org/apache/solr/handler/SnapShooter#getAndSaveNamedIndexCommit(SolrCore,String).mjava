  public static IndexCommit getAndSaveNamedIndexCommit(SolrCore solrCore, String commitName) throws IOException {
    final IndexDeletionPolicyWrapper delPolicy = solrCore.getDeletionPolicy();
    final SolrSnapshotMetaDataManager snapshotMgr = solrCore.getSnapshotMetaDataManager();
    // We're going to tell the delPolicy to "save" this commit -- even though it's a named snapshot
    // that will already be protected -- just in case another thread deletes the name.
    // Because of this, we want to sync on the delPolicy to ensure there is no window of time after
    // snapshotMgr confirms commitName exists, but before we have a chance to 'save' it, when
    // the commitName might be deleted *and* the IndexWriter might call onCommit()
    synchronized (delPolicy) {
      final Optional<IndexCommit> namedCommit = snapshotMgr.getIndexCommitByName(commitName);
      if (namedCommit.isPresent()) {
        final IndexCommit commit = namedCommit.get();
        if (log.isDebugEnabled()) {
          log.debug("Using named commit: name={}, generation={}", commitName, commit.getGeneration());
        }
        delPolicy.saveCommitPoint(commit.getGeneration());
        return commit;
      }
    } // else...
    throw new SolrException(ErrorCode.BAD_REQUEST, "Unable to find an index commit with name " +
            commitName + " for core " + solrCore.getName());
  }


  @Test
  public void testName() throws IOException {
    // Test name that normalises to number
    assertAnalyzesTo(
        analyzer,
        "田中京一",
        new String[] {"田中", "10000000000000001"}, // 京一 is normalized to a number
        new int[] {0, 2},
        new int[] {2, 4},
        new int[] {1, 1});

    // An analyzer that marks 京一 as a keyword
    Analyzer keywordMarkingAnalyzer =
        new Analyzer() {
          @Override
          protected TokenStreamComponents createComponents(String fieldName) {
            CharArraySet set = new CharArraySet(1, false);
            set.add("京一");

            Tokenizer tokenizer =
                new JapaneseTokenizer(
                    newAttributeFactory(), null, false, JapaneseTokenizer.Mode.SEARCH);
            return new TokenStreamComponents(
                tokenizer, new JapaneseNumberFilter(new SetKeywordMarkerFilter(tokenizer, set)));
          }
        };

    assertAnalyzesTo(
        keywordMarkingAnalyzer,
        "田中京一",
        new String[] {"田中", "京一"}, // 京一 is not normalized
        new int[] {0, 2},
        new int[] {2, 4},
        new int[] {1, 1});
    keywordMarkingAnalyzer.close();
  }


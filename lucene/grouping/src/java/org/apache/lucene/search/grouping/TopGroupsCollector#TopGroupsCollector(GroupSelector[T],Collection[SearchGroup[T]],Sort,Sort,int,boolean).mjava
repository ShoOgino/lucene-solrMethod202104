  /**
   * Create a new TopGroupsCollector
   *
   * @param groupSelector the group selector used to define groups
   * @param groups the groups to collect TopDocs for
   * @param groupSort the order in which groups are returned
   * @param withinGroupSort the order in which documents are sorted in each group
   * @param maxDocsPerGroup the maximum number of docs to collect for each group
   * @param getMaxScores if true, record the maximum score for each group
   */
  public TopGroupsCollector(
      GroupSelector<T> groupSelector,
      Collection<SearchGroup<T>> groups,
      Sort groupSort,
      Sort withinGroupSort,
      int maxDocsPerGroup,
      boolean getMaxScores) {
    super(
        groupSelector,
        groups,
        new TopDocsReducer<>(withinGroupSort, maxDocsPerGroup, getMaxScores));
    this.groupSort = Objects.requireNonNull(groupSort);
    this.withinGroupSort = Objects.requireNonNull(withinGroupSort);
    this.maxDocsPerGroup = maxDocsPerGroup;
  }


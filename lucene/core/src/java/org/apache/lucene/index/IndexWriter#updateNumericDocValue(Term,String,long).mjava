  /**
   * Updates a document's {@link NumericDocValues} for <code>field</code> to the given <code>value
   * </code>. You can only update fields that already exist in the index, not add new fields through
   * this method.
   *
   * @param term the term to identify the document(s) to be updated
   * @param field field name of the {@link NumericDocValues} field
   * @param value new value for the field
   * @return The <a href="#sequence_number">sequence number</a> for this operation
   * @throws CorruptIndexException if the index is corrupt
   * @throws IOException if there is a low-level IO error
   */
  public long updateNumericDocValue(Term term, String field, long value) throws IOException {
    ensureOpen();
    if (!globalFieldNumberMap.contains(field, DocValuesType.NUMERIC)) {
      throw new IllegalArgumentException("can only update existing numeric-docvalues fields!");
    }
    if (config.getIndexSortFields().contains(field)) {
      throw new IllegalArgumentException(
          "cannot update docvalues field involved in the index sort, field="
              + field
              + ", sort="
              + config.getIndexSort());
    }
    try {
      return maybeProcessEvents(
          docWriter.updateDocValues(new NumericDocValuesUpdate(term, field, value)));
    } catch (VirtualMachineError tragedy) {
      tragicEvent(tragedy, "updateNumericDocValue");
      throw tragedy;
    }
  }


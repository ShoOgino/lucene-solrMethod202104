  public void testCacheScoresIfNecessary() throws IOException {
    Directory dir = newDirectory();
    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);
    iw.addDocument(new Document());
    iw.commit();
    DirectoryReader reader = iw.getReader();
    iw.close();

    final LeafReaderContext ctx = reader.leaves().get(0);

    expectThrows(
        AssertionError.class,
        () -> {
          collector(ScoreMode.COMPLETE_NO_SCORES, ScoreCachingWrappingScorer.class)
              .getLeafCollector(ctx)
              .setScorer(new ScoreAndDoc());
        });

    // no collector needs scores => no caching
    Collector c1 = collector(ScoreMode.COMPLETE_NO_SCORES, ScoreAndDoc.class);
    Collector c2 = collector(ScoreMode.COMPLETE_NO_SCORES, ScoreAndDoc.class);
    MultiCollector.wrap(c1, c2).getLeafCollector(ctx).setScorer(new ScoreAndDoc());

    // only one collector needs scores => no caching
    c1 = collector(ScoreMode.COMPLETE, ScoreAndDoc.class);
    c2 = collector(ScoreMode.COMPLETE_NO_SCORES, ScoreAndDoc.class);
    MultiCollector.wrap(c1, c2).getLeafCollector(ctx).setScorer(new ScoreAndDoc());

    // several collectors need scores => caching
    c1 = collector(ScoreMode.COMPLETE, ScoreCachingWrappingScorer.class);
    c2 = collector(ScoreMode.COMPLETE, ScoreCachingWrappingScorer.class);
    MultiCollector.wrap(c1, c2).getLeafCollector(ctx).setScorer(new ScoreAndDoc());

    reader.close();
    dir.close();
  }


  public void testMissingValue() throws IOException {
    Directory dir = newDirectory();
    RandomIndexWriter w =
        new RandomIndexWriter(
            random(),
            dir,
            newIndexWriterConfig().setMergePolicy(newLogMergePolicy(random().nextBoolean())));
    Document doc = new Document();
    LatLonPoint point = new LatLonPoint("foo", 0, 0);
    doc.add(point);
    LatLonDocValuesField docValue = new LatLonDocValuesField("foo", 0, 0);
    doc.add(docValue);

    point.setLocationValue(3, 3);
    docValue.setLocationValue(3, 3);
    w.addDocument(doc);

    w.addDocument(new Document());

    point.setLocationValue(7, 7);
    docValue.setLocationValue(7, 7);
    w.addDocument(doc);

    DirectoryReader reader = w.getReader();
    IndexSearcher searcher = newSearcher(reader);

    Query q = LatLonPoint.newDistanceFeatureQuery("foo", 3, 10, 10, 5);
    TopScoreDocCollector collector = TopScoreDocCollector.create(3, null, 1);
    searcher.search(q, collector);
    TopDocs topHits = collector.topDocs();
    assertEquals(2, topHits.scoreDocs.length);

    double distance1 =
        SloppyMath.haversinMeters(
            GeoEncodingUtils.decodeLatitude(GeoEncodingUtils.encodeLatitude(7)),
            GeoEncodingUtils.decodeLongitude(GeoEncodingUtils.encodeLongitude(7)),
            10,
            10);
    double distance2 =
        SloppyMath.haversinMeters(
            GeoEncodingUtils.decodeLatitude(GeoEncodingUtils.encodeLatitude(3)),
            GeoEncodingUtils.decodeLongitude(GeoEncodingUtils.encodeLongitude(3)),
            10,
            10);

    CheckHits.checkEqual(
        q,
        new ScoreDoc[] {
          new ScoreDoc(2, (float) (3f * (5. / (5. + distance1)))),
          new ScoreDoc(0, (float) (3f * (5. / (5. + distance2))))
        },
        topHits.scoreDocs);

    CheckHits.checkExplanations(q, "", searcher);

    reader.close();
    w.close();
    dir.close();
  }


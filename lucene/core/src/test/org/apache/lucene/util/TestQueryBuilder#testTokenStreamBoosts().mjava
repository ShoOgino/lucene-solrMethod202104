  public void testTokenStreamBoosts() {
    Analyzer msa = new MockSynonymAnalyzer();
    Analyzer a =
        new AnalyzerWrapper(msa.getReuseStrategy()) {
          @Override
          protected Analyzer getWrappedAnalyzer(String fieldName) {
            return msa;
          }

          @Override
          protected TokenStreamComponents wrapComponents(
              String fieldName, TokenStreamComponents components) {
            return new TokenStreamComponents(
                components.getSource(), new MockBoostTokenFilter(components.getTokenStream()));
          }
        };

    QueryBuilder builder = new QueryBuilder(a);
    Query q = builder.createBooleanQuery("field", "hot dogs");
    Query expected =
        new BooleanQuery.Builder()
            .add(
                new BoostQuery(new TermQuery(new Term("field", "hot")), 0.5f),
                BooleanClause.Occur.SHOULD)
            .add(
                new SynonymQuery.Builder("field")
                    .addTerm(new Term("field", "dogs"))
                    .addTerm(new Term("field", "dog"), 0.5f)
                    .build(),
                BooleanClause.Occur.SHOULD)
            .build();

    assertEquals(expected, q);
  }


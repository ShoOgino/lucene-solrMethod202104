  @Test
  public void testNestedNearQuery() throws Exception {

    // (one OR hundred) NEAR (twenty two) ~ 1
    //  2    4        4    4
    // one hundred twenty two
    // two hundred twenty two

    SpanNearQuery q =
        new SpanNearQuery(
            new SpanQuery[] {
              new SpanOrQuery(
                  new SpanTermQuery(new Term("field", "one")),
                  new SpanTermQuery(new Term("field", "hundred"))),
              new SpanNearQuery(
                  new SpanQuery[] {
                    new SpanTermQuery(new Term("field", "twenty")),
                    new SpanTermQuery(new Term("field", "two"))
                  },
                  0,
                  true)
            },
            1,
            true);

    // check includeSpanScore makes a difference here
    searcher.setSimilarity(new ClassicSimilarity());
    try {
      checkQuery(
          q,
          new MaxPayloadFunction(),
          new int[] {122, 222},
          new float[] {20.901256561279297f, 17.06580352783203f});
      checkQuery(
          q,
          new MinPayloadFunction(),
          new int[] {222, 122},
          new float[] {17.06580352783203f, 10.450628280639648f});
      checkQuery(
          q,
          new AveragePayloadFunction(),
          new int[] {122, 222},
          new float[] {19.15948486328125f, 17.06580352783203f});
      checkQuery(
          q, new MaxPayloadFunction(), false, new int[] {122, 222}, new float[] {4.0f, 4.0f});
      checkQuery(
          q, new MinPayloadFunction(), false, new int[] {222, 122}, new float[] {4.0f, 2.0f});
      checkQuery(
          q,
          new AveragePayloadFunction(),
          false,
          new int[] {222, 122},
          new float[] {4.0f, 3.666666f});
    } finally {
      searcher.setSimilarity(similarity);
    }
  }


  /**
   * Returns a new iterator that iterates all unique Attribute implementations. This iterator may
   * contain less entries that {@link #getAttributeClassesIterator}, if one instance implements more
   * than one Attribute interface.
   */
  public final Iterator<AttributeImpl> getAttributeImplsIterator() {
    final State initState = getCurrentState();
    if (initState != null) {
      return new Iterator<AttributeImpl>() {
        private State state = initState;

        @Override
        public void remove() {
          throw new UnsupportedOperationException();
        }

        @Override
        public AttributeImpl next() {
          if (state == null) throw new NoSuchElementException();
          final AttributeImpl att = state.attribute;
          state = state.next;
          return att;
        }

        @Override
        public boolean hasNext() {
          return state != null;
        }
      };
    } else {
      return Collections.<AttributeImpl>emptySet().iterator();
    }
  }


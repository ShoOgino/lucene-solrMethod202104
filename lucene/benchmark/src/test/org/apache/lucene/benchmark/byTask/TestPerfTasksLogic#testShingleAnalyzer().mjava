  /** Test that we can create shingle analyzers using AnalyzerFactory. */
  public void testShingleAnalyzer() throws Exception {
    String text = "one,two,three, four five six";

    // StandardTokenizer, maxShingleSize, and outputUnigrams
    Benchmark benchmark =
        execBenchmark(
            getAnalyzerFactoryConfig("shingle-analyzer", "StandardTokenizer,ShingleFilter"));
    benchmark.getRunData().getAnalyzer().tokenStream("bogus", text).close();
    BaseTokenStreamTestCase.assertAnalyzesTo(
        benchmark.getRunData().getAnalyzer(),
        text,
        new String[] {
          "one", "one two", "two", "two three",
          "three", "three four", "four", "four five",
          "five", "five six", "six"
        });
    // StandardTokenizer, maxShingleSize = 3, and outputUnigrams = false
    benchmark =
        execBenchmark(
            getAnalyzerFactoryConfig(
                "shingle-analyzer",
                "StandardTokenizer,ShingleFilter(maxShingleSize:3,outputUnigrams:false)"));
    BaseTokenStreamTestCase.assertAnalyzesTo(
        benchmark.getRunData().getAnalyzer(),
        text,
        new String[] {
          "one two",
          "one two three",
          "two three",
          "two three four",
          "three four",
          "three four five",
          "four five",
          "four five six",
          "five six"
        });
    // WhitespaceTokenizer, default maxShingleSize and outputUnigrams
    benchmark =
        execBenchmark(
            getAnalyzerFactoryConfig("shingle-analyzer", "WhitespaceTokenizer,ShingleFilter"));
    BaseTokenStreamTestCase.assertAnalyzesTo(
        benchmark.getRunData().getAnalyzer(),
        text,
        new String[] {
          "one,two,three,", "one,two,three, four", "four", "four five", "five", "five six", "six"
        });

    // WhitespaceTokenizer, maxShingleSize=3 and outputUnigrams=false
    benchmark =
        execBenchmark(
            getAnalyzerFactoryConfig(
                "shingle-factory",
                "WhitespaceTokenizer,ShingleFilter(outputUnigrams:false,maxShingleSize:3)"));
    BaseTokenStreamTestCase.assertAnalyzesTo(
        benchmark.getRunData().getAnalyzer(),
        text,
        new String[] {
          "one,two,three, four",
          "one,two,three, four five",
          "four five",
          "four five six",
          "five six"
        });
  }


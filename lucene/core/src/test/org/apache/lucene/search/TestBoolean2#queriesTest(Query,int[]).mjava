  public void queriesTest(Query query, int[] expDocNrs) throws Exception {

    // adjust the expected doc numbers according to our filler docs
    if (0 < NUM_FILLER_DOCS) {
      expDocNrs = ArrayUtil.copyOfSubArray(expDocNrs, 0, expDocNrs.length);
      for (int i = 0; i < expDocNrs.length; i++) {
        expDocNrs[i] = PRE_FILLER_DOCS + ((NUM_FILLER_DOCS + 1) * expDocNrs[i]);
      }
    }

    final int topDocsToCheck = atLeast(1000);
    // The asserting searcher will sometimes return the bulk scorer and
    // sometimes return a default impl around the scorer so that we can
    // compare BS1 and BS2
    TopScoreDocCollector collector = TopScoreDocCollector.create(topDocsToCheck, Integer.MAX_VALUE);
    searcher.search(query, collector);
    ScoreDoc[] hits1 = collector.topDocs().scoreDocs;
    collector = TopScoreDocCollector.create(topDocsToCheck, Integer.MAX_VALUE);
    searcher.search(query, collector);
    ScoreDoc[] hits2 = collector.topDocs().scoreDocs;

    CheckHits.checkHitsQuery(query, hits1, hits2, expDocNrs);

    // Since we have no deleted docs, we should also be able to verify identical matches &
    // scores against an single segment copy of our index
    collector = TopScoreDocCollector.create(topDocsToCheck, Integer.MAX_VALUE);
    singleSegmentSearcher.search(query, collector);
    hits2 = collector.topDocs().scoreDocs;
    CheckHits.checkHitsQuery(query, hits1, hits2, expDocNrs);

    // sanity check expected num matches in bigSearcher
    assertEquals(mulFactor * collector.totalHits, bigSearcher.count(query));

    // now check 2 diff scorers from the bigSearcher as well
    collector = TopScoreDocCollector.create(topDocsToCheck, Integer.MAX_VALUE);
    bigSearcher.search(query, collector);
    hits1 = collector.topDocs().scoreDocs;
    collector = TopScoreDocCollector.create(topDocsToCheck, Integer.MAX_VALUE);
    bigSearcher.search(query, collector);
    hits2 = collector.topDocs().scoreDocs;

    // NOTE: just comparing results, not vetting against expDocNrs
    // since we have dups in bigSearcher
    CheckHits.checkEqual(query, hits1, hits2);
  }


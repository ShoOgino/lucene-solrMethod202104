  public void testDeleteDoc() throws IOException {
    Directory dir = new ByteBuffersDirectory();
    SegmentInfo si =
        new SegmentInfo(
            dir,
            Version.LATEST,
            Version.LATEST,
            "test",
            10,
            false,
            Codec.getDefault(),
            Collections.emptyMap(),
            StringHelper.randomId(),
            new HashMap<>(),
            null);
    SegmentCommitInfo commitInfo =
        new SegmentCommitInfo(si, 0, 0, -1, -1, -1, StringHelper.randomId());
    PendingDeletes deletes = newPendingDeletes(commitInfo);
    assertNull(deletes.getLiveDocs());
    int docToDelete = TestUtil.nextInt(random(), 0, 7);
    assertTrue(deletes.delete(docToDelete));
    assertNotNull(deletes.getLiveDocs());
    assertEquals(1, deletes.numPendingDeletes());

    Bits liveDocs = deletes.getLiveDocs();
    assertFalse(liveDocs.get(docToDelete));
    assertFalse(deletes.delete(docToDelete)); // delete again

    assertTrue(liveDocs.get(8));
    assertTrue(deletes.delete(8));
    assertTrue(liveDocs.get(8)); // we have a snapshot
    assertEquals(2, deletes.numPendingDeletes());

    assertTrue(liveDocs.get(9));
    assertTrue(deletes.delete(9));
    assertTrue(liveDocs.get(9));

    // now make sure new live docs see the deletions
    liveDocs = deletes.getLiveDocs();
    assertFalse(liveDocs.get(9));
    assertFalse(liveDocs.get(8));
    assertFalse(liveDocs.get(docToDelete));
    assertEquals(3, deletes.numPendingDeletes());
    dir.close();
  }


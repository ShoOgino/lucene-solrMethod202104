  /**
   * Creates a new byte slice with the given starting size and returns the slices offset in the
   * pool.
   */
  public int allocSlice(final byte[] slice, final int upto) {

    final int level = slice[upto] & 15;
    final int newLevel = NEXT_LEVEL_ARRAY[level];
    final int newSize = LEVEL_SIZE_ARRAY[newLevel];

    // Maybe allocate another block
    if (byteUpto > BYTE_BLOCK_SIZE - newSize) {
      nextBuffer();
    }

    final int newUpto = byteUpto;
    final int offset = newUpto + byteOffset;
    byteUpto += newSize;

    // Copy forward the past 3 bytes (which we are about
    // to overwrite with the forwarding address):
    buffer[newUpto] = slice[upto - 3];
    buffer[newUpto + 1] = slice[upto - 2];
    buffer[newUpto + 2] = slice[upto - 1];

    // Write forwarding address at end of last slice:
    slice[upto - 3] = (byte) (offset >>> 24);
    slice[upto - 2] = (byte) (offset >>> 16);
    slice[upto - 1] = (byte) (offset >>> 8);
    slice[upto] = (byte) offset;

    // Write new level:
    buffer[byteUpto - 1] = (byte) (16 | newLevel);

    return newUpto + 3;
  }


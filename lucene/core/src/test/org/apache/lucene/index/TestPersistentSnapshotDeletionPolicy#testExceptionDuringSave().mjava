  public void testExceptionDuringSave() throws Exception {
    MockDirectoryWrapper dir = newMockDirectory();
    dir.failOn(
        new MockDirectoryWrapper.Failure() {
          @Override
          public void eval(MockDirectoryWrapper dir) throws IOException {
            if (callStackContains(PersistentSnapshotDeletionPolicy.class, "persist")) {
              throw new IOException("now fail on purpose");
            }
          }
        });
    IndexWriter writer =
        new IndexWriter(
            dir,
            getConfig(
                random(),
                new PersistentSnapshotDeletionPolicy(
                    new KeepOnlyLastCommitDeletionPolicy(), dir, OpenMode.CREATE_OR_APPEND)));
    writer.addDocument(new Document());
    writer.commit();

    PersistentSnapshotDeletionPolicy psdp =
        (PersistentSnapshotDeletionPolicy) writer.getConfig().getIndexDeletionPolicy();
    try {
      psdp.snapshot();
    } catch (IOException ioe) {
      if (ioe.getMessage().equals("now fail on purpose")) {
        // ok
      } else {
        throw ioe;
      }
    }
    assertEquals(0, psdp.getSnapshotCount());
    writer.close();
    assertEquals(1, DirectoryReader.listCommits(dir).size());
    dir.close();
  }


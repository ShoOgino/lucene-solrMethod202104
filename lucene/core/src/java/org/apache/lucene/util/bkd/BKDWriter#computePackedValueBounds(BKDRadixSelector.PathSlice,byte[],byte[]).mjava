  private void computePackedValueBounds(
      BKDRadixSelector.PathSlice slice, byte[] minPackedValue, byte[] maxPackedValue)
      throws IOException {
    try (PointReader reader = slice.writer.getReader(slice.start, slice.count)) {
      if (reader.next() == false) {
        return;
      }
      BytesRef value = reader.pointValue().packedValue();
      System.arraycopy(value.bytes, value.offset, minPackedValue, 0, config.packedIndexBytesLength);
      System.arraycopy(value.bytes, value.offset, maxPackedValue, 0, config.packedIndexBytesLength);
      while (reader.next()) {
        value = reader.pointValue().packedValue();
        for (int dim = 0; dim < config.numIndexDims; dim++) {
          final int startOffset = dim * config.bytesPerDim;
          final int endOffset = startOffset + config.bytesPerDim;
          if (Arrays.compareUnsigned(
                  value.bytes,
                  value.offset + startOffset,
                  value.offset + endOffset,
                  minPackedValue,
                  startOffset,
                  endOffset)
              < 0) {
            System.arraycopy(
                value.bytes,
                value.offset + startOffset,
                minPackedValue,
                startOffset,
                config.bytesPerDim);
          } else if (Arrays.compareUnsigned(
                  value.bytes,
                  value.offset + startOffset,
                  value.offset + endOffset,
                  maxPackedValue,
                  startOffset,
                  endOffset)
              > 0) {
            System.arraycopy(
                value.bytes,
                value.offset + startOffset,
                maxPackedValue,
                startOffset,
                config.bytesPerDim);
          }
        }
      }
    }
  }


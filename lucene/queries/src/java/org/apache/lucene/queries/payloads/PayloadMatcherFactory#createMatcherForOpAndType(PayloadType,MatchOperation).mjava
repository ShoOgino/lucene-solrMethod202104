  /**
   * Return a payload matcher for use in the SpanPayloadCheckQuery that will decode the ByteRef from
   * a payload based on the payload type, and apply a matching inequality operations
   * (eq,lt,lte,gt,and gte)
   *
   * @param payloadType the type of the payload to decode, STRING, INT, FLOAT
   * @param op and inequalit operation as the test (example: eq for equals, gt for greater than)
   * @return a payload matcher that decodes the payload and applies the operation inequality test.
   */
  public static PayloadMatcher createMatcherForOpAndType(
      PayloadType payloadType, MatchOperation op) {

    // special optimization, binary/byte comparison
    if (op == null || MatchOperation.EQ.equals(op)) {
      return new EQPayloadMatcher();
    }
    // otherwise, we need to pay attention to the payload type and operation
    EnumMap<MatchOperation, PayloadMatcher> opMap = payloadCheckerOpTypeMap.get(payloadType);
    if (opMap != null) {
      return opMap.get(op);
    } else {
      // Unknown op and payload type gets you an equals operator.
      return new EQPayloadMatcher();
    }
  }


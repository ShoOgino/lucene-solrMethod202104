    /**
     * Adds a multi-term at the next position in the phrase.
     * Any of the terms returned by the provided {@link MultiTermQuery} enumeration
     * may match (expansion as a disjunction).
     */
    public Builder addMultiTerm(MultiTermQuery multiTermQuery) {
      if (!multiTermQuery.getField().equals(field)) {
        throw new IllegalArgumentException(multiTermQuery.getClass().getSimpleName()
            + " field \"" + multiTermQuery.getField() + "\" cannot be different from the "
            + PhraseWildcardQuery.class.getSimpleName() + " field \"" + field + "\"");
      }
      phraseTerms.add(new MultiTerm(multiTermQuery, phraseTerms.size()));
      return this;
    }


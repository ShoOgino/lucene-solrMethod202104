  /**
   * Iterative path search through ordered list of points. The method merges together all
   * consecutive coplanar points and builds the plane using the first and the last point. It does
   * not converge if the starting point is coplanar with the last and next point of the path.
   *
   * @param points is the ordered raw list of points under consideration.
   * @param startIndex is index of the point that starts the current path, so that we can know when
   *     we are done.
   * @param leniencyValue is the allowed distance of a point from the plane to be considered
   *     coplanar.
   * @return null if the starting point is coplanar with the last and next point of the path.
   */
  private static SafePath findSafePath(
      final List<GeoPoint> points, final int startIndex, final double leniencyValue) {
    SafePath safePath = null;
    for (int i = startIndex; i < startIndex + points.size(); i++) {
      // get start point, always the same for an iteration
      final int startPointIndex = getLegalIndex(i - 1, points.size());
      final GeoPoint startPoint = points.get(startPointIndex);
      // get end point, can be coplanar and therefore change
      int endPointIndex = getLegalIndex(i, points.size());
      GeoPoint endPoint = points.get(endPointIndex);

      if (startPoint.isNumericallyIdentical(endPoint)) {
        // go to next if identical
        continue;
      }
      // Check if nextPoints are co-planar, if so advance to next point.
      // if we go over the start index then we have no succeed.
      while (true) {
        int nextPointIndex = getLegalIndex(endPointIndex + 1, points.size());
        final GeoPoint nextPoint = points.get(nextPointIndex);
        if (startPoint.isNumericallyIdentical(nextPoint)) {
          // all coplanar
          return null;
        }
        if (!Plane.arePointsCoplanar(startPoint, endPoint, nextPoint)) {
          // no coplanar.
          break;
        }
        if (endPointIndex == startIndex) {
          // we are over the path, we fail.
          return null;
        }
        // advance
        endPointIndex = nextPointIndex;
        endPoint = nextPoint;
        i++;
      }

      if (safePath != null && endPointIndex == startIndex) {
        // We are already at the start, current point is coplanar with
        // start point, no need to add this node.
        break;
      }
      // Create node and move to next one
      Plane currentPlane = new Plane(startPoint, endPoint);
      safePath = new SafePath(safePath, endPoint, endPointIndex, currentPlane);
    }
    return safePath;
  }


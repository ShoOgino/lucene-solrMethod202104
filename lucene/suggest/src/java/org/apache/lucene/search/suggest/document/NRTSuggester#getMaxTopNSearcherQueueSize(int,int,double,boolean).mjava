  /**
   * Simple heuristics to try to avoid over-pruning potential suggestions by the TopNSearcher. Since
   * suggestion entries can be rejected if they belong to a deleted document, the length of the
   * TopNSearcher queue has to be increased by some factor, to account for the filtered out
   * suggestions. This heuristic will try to make the searcher admissible, but the search can still
   * lead to over-pruning
   *
   * <p>If a <code>filter</code> is applied, the queue size is increased by half the number of live
   * documents.
   *
   * <p>The maximum queue size is {@link #MAX_TOP_N_QUEUE_SIZE}
   */
  private int getMaxTopNSearcherQueueSize(
      int topN, int numDocs, double liveDocsRatio, boolean filterEnabled) {
    long maxQueueSize = topN * maxAnalyzedPathsPerOutput;
    // liveDocRatio can be at most 1.0 (if no docs were deleted)
    assert liveDocsRatio <= 1.0d;
    maxQueueSize = (long) (maxQueueSize / liveDocsRatio);
    if (filterEnabled) {
      maxQueueSize = maxQueueSize + (numDocs / 2);
    }
    return (int) Math.min(MAX_TOP_N_QUEUE_SIZE, maxQueueSize);
  }


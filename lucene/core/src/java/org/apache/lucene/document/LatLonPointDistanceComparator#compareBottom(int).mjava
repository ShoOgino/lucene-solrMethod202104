  @Override
  public int compareBottom(int doc) throws IOException {
    if (doc > currentDocs.docID()) {
      currentDocs.advance(doc);
    }
    if (doc < currentDocs.docID()) {
      return Double.compare(bottom, Double.POSITIVE_INFINITY);
    }

    setValues();

    int numValues = currentDocs.docValueCount();

    int cmp = -1;
    for (int i = 0; i < numValues; i++) {
      long encoded = currentValues[i];

      // test bounding box
      int latitudeBits = (int) (encoded >> 32);
      if (latitudeBits < minLat || latitudeBits > maxLat) {
        continue;
      }
      int longitudeBits = (int) (encoded & 0xFFFFFFFF);
      if ((longitudeBits < minLon || longitudeBits > maxLon) && (longitudeBits < minLon2)) {
        continue;
      }

      // only compute actual distance if its inside "competitive bounding box"
      double docLatitude = decodeLatitude(latitudeBits);
      double docLongitude = decodeLongitude(longitudeBits);
      cmp =
          Math.max(
              cmp,
              Double.compare(
                  bottom,
                  SloppyMath.haversinSortKey(latitude, longitude, docLatitude, docLongitude)));
      // once we compete in the PQ, no need to continue.
      if (cmp > 0) {
        return cmp;
      }
    }
    return cmp;
  }


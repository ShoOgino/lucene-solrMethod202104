  private static MergePolicy.MergeSpecification createRandomMergeSpecification(
      Directory dir, int numMerges) {
    MergePolicy.MergeSpecification ms = new MergePolicy.MergeSpecification();
    for (int ii = 0; ii < numMerges; ++ii) {
      final SegmentInfo si =
          new SegmentInfo(
              dir, // dir
              Version.LATEST, // version
              Version.LATEST, // min version
              TestUtil.randomSimpleString(random()), // name
              random().nextInt(1000), // maxDoc
              random().nextBoolean(), // isCompoundFile
              null, // codec
              Collections.emptyMap(), // diagnostics
              TestUtil.randomSimpleString( // id
                      random(), StringHelper.ID_LENGTH, StringHelper.ID_LENGTH)
                  .getBytes(StandardCharsets.US_ASCII),
              Collections.emptyMap(), // attributes
              null /* indexSort */);
      final List<SegmentCommitInfo> segments = new LinkedList<SegmentCommitInfo>();
      segments.add(new SegmentCommitInfo(si, 0, 0, 0, 0, 0, StringHelper.randomId()));
      ms.add(new MergePolicy.OneMerge(segments));
    }
    return ms;
  }


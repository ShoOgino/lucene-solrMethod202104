  /**
   * Sole constructor
   *
   * @param planetModel is the planet model.
   * @param minX is the minimum X value.
   * @param maxX is the maximum X value.
   * @param Y is the Y value.
   * @param Z is the Z value.
   */
  public XdYdZSolid(
      final PlanetModel planetModel,
      final double minX,
      final double maxX,
      final double Y,
      final double Z) {
    super(planetModel);
    // Argument checking
    if (maxX - minX < Vector.MINIMUM_RESOLUTION)
      throw new IllegalArgumentException("X values in wrong order or identical");

    this.minX = minX;
    this.maxX = maxX;
    this.Y = Y;
    this.Z = Z;

    // Build the planes and intersect them.
    final Plane yPlane = new Plane(yUnitVector, -Y);
    final Plane zPlane = new Plane(zUnitVector, -Z);
    final SidedPlane minXPlane = new SidedPlane(maxX, 0.0, 0.0, xUnitVector, -minX);
    final SidedPlane maxXPlane = new SidedPlane(minX, 0.0, 0.0, xUnitVector, -maxX);
    surfacePoints = yPlane.findIntersections(planetModel, zPlane, minXPlane, maxXPlane);
  }


  @Override
  public Lock obtainLock(String lockName) throws IOException {
    LockObtainFailedException failureReason = null;
    long maxSleepCount = lockWaitTimeout / pollInterval;
    long sleepCount = 0;

    do {
      try {
        return in.obtainLock(lockName);
      } catch (LockObtainFailedException failed) {
        if (failureReason == null) {
          failureReason = failed;
        }
      }
      try {
        Thread.sleep(pollInterval);
      } catch (InterruptedException ie) {
        throw new ThreadInterruptedException(ie);
      }
    } while (sleepCount++ < maxSleepCount || lockWaitTimeout == LOCK_OBTAIN_WAIT_FOREVER);

    // we failed to obtain the lock in the required time
    String reason = "Lock obtain timed out: " + this.toString();
    if (failureReason != null) {
      reason += ": " + failureReason;
    }
    throw new LockObtainFailedException(reason, failureReason);
  }


  // Tests that advanceExact does not change the outcome
  private void assertDVAdvance(Directory dir, int jumpStep) throws IOException {
    DirectoryReader ir = DirectoryReader.open(dir);
    TestUtil.checkReader(ir);
    for (LeafReaderContext context : ir.leaves()) {
      LeafReader r = context.reader();


      for (int jump = jumpStep; jump < r.maxDoc(); jump += jumpStep) {
        // Create a new instance each time to ensure jumps from the beginning
        NumericDocValues docValues = DocValues.getNumeric(r, "dv");
        for (int docID = 0; docID < r.maxDoc(); docID += jump) {
          String base = "document #" + docID + "/" + r.maxDoc() + ", jumping " + jump + " from #" + (docID-jump);
          String storedValue = r.document(docID).get("stored");
          if (storedValue == null) {
            assertFalse("There should be no DocValue for " + base,
                docValues.advanceExact(docID));
          } else {
            assertTrue("There should be a DocValue for " + base,
                docValues.advanceExact(docID));
            assertEquals("The doc value should be correct for " + base,
                Long.parseLong(storedValue), docValues.longValue());
          }
        }
      }
    }
    ir.close();
  }


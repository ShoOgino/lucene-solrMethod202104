    public ReindexingReader(Path root) throws IOException {
      this.root = root;

      // Normal index is stored under "index":
      indexDir = openDirectory(root.resolve("index"));

      // Per-segment parallel indices are stored under subdirs "segs":
      segsPath = root.resolve("segs");
      Files.createDirectories(segsPath);

      IndexWriterConfig iwc = getIndexWriterConfig();
      iwc.setMergePolicy(new ReindexingMergePolicy(iwc.getMergePolicy()));
      if (DEBUG) {
        System.out.println("TEST: use IWC:\n" + iwc);
      }
      w = new IndexWriter(indexDir, iwc);

      w.getConfig()
          .setMergedSegmentWarmer(
              (reader) -> {
                // This will build the parallel index for the merged segment before the merge
                // becomes visible, so reopen delay is only due to
                // newly flushed segments:
                if (DEBUG)
                  System.out.println(
                      Thread.currentThread().getName() + ": TEST: now warm " + reader);
                // TODO: it's not great that we pass false here; it means we close the reader &
                // reopen again for NRT reader; still we did "warm" by
                // building the parallel index, if necessary
                getParallelLeafReader(reader, false, getCurrentSchemaGen());
              });

      // start with empty commit:
      w.commit();
      mgr = new ReaderManager(new ParallelLeafDirectoryReader(DirectoryReader.open(w)));
    }


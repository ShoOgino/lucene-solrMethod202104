  @Override
  public long getChecksum() throws IOException {
    ensureOpen();

    if (checksum == null) {
      throw new IOException("This index output has no checksum computing ability: " + toString());
    }

    // Compute checksum on the current content of the delegate.
    //
    // This way we can override more methods and pass them directly to the delegate for efficiency
    // of writing,
    // while allowing the checksum to be correctly computed on the current content of the output
    // buffer (IndexOutput
    // is per-thread, so no concurrent changes).
    if (lastChecksumPosition != delegate.size()) {
      lastChecksumPosition = delegate.size();
      checksum.reset();
      for (ByteBuffer bb : delegate.toBufferList()) {
        checksum.update(bb);
      }
      lastChecksum = checksum.getValue();
    }
    return lastChecksum;
  }


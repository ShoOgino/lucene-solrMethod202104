  public void testMergeAllDeleted() throws IOException {
    Directory dir = newDirectory();
    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));
    AtomicBoolean keepFullyDeletedSegments = new AtomicBoolean();
    iwc.setMergePolicy(
        new FilterMergePolicy(iwc.getMergePolicy()) {
          @Override
          public boolean keepFullyDeletedSegment(IOSupplier<CodecReader> readerIOSupplier)
              throws IOException {
            return keepFullyDeletedSegments.get();
          }
        });
    final SetOnce<IndexWriter> iwRef = new SetOnce<>();
    IndexWriter evilWriter =
        RandomIndexWriter.mockIndexWriter(
            random(),
            dir,
            iwc,
            new RandomIndexWriter.TestPoint() {
              @Override
              public void apply(String message) {
                if ("startCommitMerge".equals(message)) {
                  keepFullyDeletedSegments.set(false);
                } else if ("startMergeInit".equals(message)) {
                  keepFullyDeletedSegments.set(true);
                }
              }
            });
    iwRef.set(evilWriter);
    for (int i = 0; i < 1000; i++) {
      addDoc(evilWriter);
      if (random().nextInt(17) == 0) {
        evilWriter.commit();
      }
    }
    evilWriter.deleteDocuments(new MatchAllDocsQuery());
    evilWriter.forceMerge(1);
    evilWriter.close();
    dir.close();
  }


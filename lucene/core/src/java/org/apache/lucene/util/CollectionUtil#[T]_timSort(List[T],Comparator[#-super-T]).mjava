  /**
   * Sorts the given random access {@link List} using the {@link Comparator}. The list must
   * implement {@link RandomAccess}. This method uses the Tim sort algorithm, but falls back to
   * binary sort for small lists.
   *
   * @throws IllegalArgumentException if list is e.g. a linked list without random access.
   */
  public static <T> void timSort(List<T> list, Comparator<? super T> comp) {
    final int size = list.size();
    if (size <= 1) return;
    new ListTimSorter<>(list, comp, list.size() / 64).sort(0, size);
  }


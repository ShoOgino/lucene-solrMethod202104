  // constructor
  public PerfRunData(Config config) throws Exception {
    this.config = config;
    // analyzer (default is standard analyzer)
    analyzer =
        NewAnalyzerTask.createAnalyzer(
            config.get("analyzer", "org.apache.lucene.analysis.standard.StandardAnalyzer"));

    // content source
    String sourceClass =
        config.get("content.source", "org.apache.lucene.benchmark.byTask.feeds.SingleDocSource");
    contentSource =
        Class.forName(sourceClass).asSubclass(ContentSource.class).getConstructor().newInstance();
    contentSource.setConfig(config);

    // doc maker
    docMaker =
        Class.forName(config.get("doc.maker", "org.apache.lucene.benchmark.byTask.feeds.DocMaker"))
            .asSubclass(DocMaker.class)
            .getConstructor()
            .newInstance();
    docMaker.setConfig(config, contentSource);
    // facet source
    facetSource =
        Class.forName(
                config.get(
                    "facet.source", "org.apache.lucene.benchmark.byTask.feeds.RandomFacetSource"))
            .asSubclass(FacetSource.class)
            .getConstructor()
            .newInstance();
    facetSource.setConfig(config);
    // query makers
    readTaskQueryMaker = new HashMap<>();
    qmkrClass =
        Class.forName(
                config.get(
                    "query.maker", "org.apache.lucene.benchmark.byTask.feeds.SimpleQueryMaker"))
            .asSubclass(QueryMaker.class);

    // index stuff
    reinit(false);

    // statistic points
    points = new Points(config);

    if (Boolean.valueOf(config.get("log.queries", "false")).booleanValue()) {
      System.out.println("------------> queries:");
      System.out.println(getQueryMaker(new SearchTask(this)).printQueries());
    }
  }


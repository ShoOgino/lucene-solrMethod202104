  protected static String processPathHierarchyQueryString(String queryString) {
    // if the filter includes a path string, build a lucene query string to match those specific child documents.
    // e.g. /toppings/ingredients/name_s:cocoa -> +_nest_path_:/toppings/ingredients +(name_s:cocoa)
    // ingredients/name_s:cocoa -> +_nest_path_:*/ingredients +(name_s:cocoa)
    int indexOfFirstColon = queryString.indexOf(':');
    if (indexOfFirstColon <= 0) {
      return queryString; // regular filter, not hierarchy based.
    }
    int indexOfLastPathSepChar = queryString.lastIndexOf(PATH_SEP_CHAR, indexOfFirstColon);
    if (indexOfLastPathSepChar < 0) {
      return queryString; // regular filter, not hierarchy based.
    }
    final boolean isAbsolutePath = queryString.charAt(0) == PATH_SEP_CHAR;
    String path = ClientUtils.escapeQueryChars(queryString.substring(0, indexOfLastPathSepChar));
    String remaining = queryString.substring(indexOfLastPathSepChar + 1); // last part of path hierarchy

    return
        "+" + NEST_PATH_FIELD_NAME + (isAbsolutePath? ":": ":*\\/") + path
        + " +(" + remaining + ")";
  }


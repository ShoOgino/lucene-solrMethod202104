  /** @see #testEmptyIndex */
  private void doTestEmptyIndex() throws Exception {
    for (String opt : Arrays.asList(// no block collapse logic used (sanity checks)
                                    "field=block_s1",            
                                    "field=block_i",             
                                    // block collapse used implicitly (ord)
                                    "field=_root_",
                                    "field=_root_ hint=top_fc",             // top_fc hint shouldn't matter
                                    // block collapse used explicitly (ord)
                                    "field=_root_ hint=block",
                                    "field=block_s1 hint=block",
                                    // block collapse used explicitly (int)
                                    "field=block_i  hint=block"  
                                    )) {
      for (String nullPolicy : Arrays.asList("", // ignore is default
                                             " nullPolicy=ignore",
                                             " nullPolicy=expand")) {

        for (String suffix : SELECTOR_FIELD_SUFFIXES) {
          for (String headSelector : Arrays.asList("", // score is default
                                                   " max=asc" + suffix,
                                                   " min=desc" + suffix,
                                                   " sort='asc" + suffix + " desc'",
                                                   " sort='desc" +suffix + " asc'",
                                                   " max=sum(42,asc" + suffix + ")",
                                                   " min=sum(42,desc" + suffix + ")",
                                                   " max=sub(0,desc" + suffix + ")",
                                                   " min=sub(0,asc" + suffix + ")")) {
            
            if (headSelector.endsWith("_l") && opt.endsWith("_i")) {
              // NOTE: this limitation doesn't apply to block collapse on int,
              // so we only check 'opt.endsWith' (if ends with block hint we're ok)
              assertQEx("expected known limitation of using long for min/max selector when doing numeric collapse",
                        "min/max must be Int or Float",
                        req("q", "*:*",
                            "fq", "{!collapse " + opt + nullPolicy + headSelector + "}"),
                        SolrException.ErrorCode.BAD_REQUEST);
              continue;
            }

            assertQ(req("q", "*:*",
                        "fq", "{!collapse " + opt + nullPolicy + headSelector + "}",
                        "sort", "score desc, num_i asc")
                    , "*[count(//doc)=0]"
                    );
          }
        }
      }
    }
  }


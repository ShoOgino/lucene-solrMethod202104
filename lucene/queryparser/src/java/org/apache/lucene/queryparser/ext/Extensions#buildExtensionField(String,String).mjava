  /**
   * Builds an extension field string from a given extension key and the extensions field. The field
   * and the key are delimited with the extension field delimiter character. This method makes no
   * assumption about the order of the extension key and the field. By default the extension key is
   * appended to the end of the returned string while the field is added to the beginning. Special
   * Query characters are escaped in the result.
   *
   * <p>Note: {@link Extensions} subclasses must maintain the contract between {@link
   * #buildExtensionField(String, String)} and {@link #splitExtensionField(String, String)} where
   * the latter inverts the former.
   *
   * @param extensionKey the extension key
   * @param field the field to apply the extension on.
   * @return escaped extension field identifier
   * @see #buildExtensionField(String) to use the default query field
   */
  public String buildExtensionField(String extensionKey, String field) {
    StringBuilder builder = new StringBuilder(field);
    builder.append(this.extensionFieldDelimiter);
    builder.append(extensionKey);
    return escapeExtensionField(builder.toString());
  }


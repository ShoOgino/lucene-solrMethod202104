  /**
   * Returns a (possibly reused) {@link TokenStream} which tokenizes all the text in the provided
   * {@link Reader}.
   *
   * @return A {@link TokenStream} built from a {@link StandardTokenizer} filtered with {@link
   *     LowerCaseFilter}, {@link StopFilter}, {@link SetKeywordMarkerFilter} if a stem exclusion
   *     set is provided, {@link StemmerOverrideFilter}, and {@link SnowballFilter}
   */
  @Override
  protected TokenStreamComponents createComponents(String fieldName) {
    final Tokenizer source = new StandardTokenizer();
    TokenStream result = new LowerCaseFilter(source);
    result = new StopFilter(result, stoptable);
    if (!excltable.isEmpty()) result = new SetKeywordMarkerFilter(result, excltable);
    if (stemdict != null) result = new StemmerOverrideFilter(result, stemdict);
    result = new SnowballFilter(result, new org.tartarus.snowball.ext.DutchStemmer());
    return new TokenStreamComponents(source, result);
  }


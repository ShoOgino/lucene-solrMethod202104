  // This duel gives compareBottom and compareTop some coverage
  public void testDuelFloat() throws IOException {
    Directory dir = newDirectory();
    RandomIndexWriter w = new RandomIndexWriter(random(), dir);
    int numDocs = atLeast(100);
    for (int d = 0; d < numDocs; ++d) {
      Document doc = new Document();
      if (random().nextBoolean()) {
        float f;
        do {
          int freq = TestUtil.nextInt(random(), 1, FeatureField.MAX_FREQ);
          f = FeatureField.decodeFeatureValue(freq);
        } while (f < Float.MIN_NORMAL);
        doc.add(new NumericDocValuesField("float", Float.floatToIntBits(f)));
        doc.add(new FeatureField("feature", "foo", f));
      }
      w.addDocument(doc);
    }

    IndexReader r = w.getReader();
    w.close();
    IndexSearcher searcher = newSearcher(r);

    TopDocs topDocs = null;
    TopDocs featureTopDocs = null;
    do {
      if (topDocs == null) {
        topDocs =
            searcher.search(
                new MatchAllDocsQuery(),
                10,
                new Sort(new SortField("float", SortField.Type.FLOAT, true)));
        featureTopDocs =
            searcher.search(
                new MatchAllDocsQuery(),
                10,
                new Sort(FeatureField.newFeatureSort("feature", "foo")));
      } else {
        topDocs =
            searcher.searchAfter(
                topDocs.scoreDocs[topDocs.scoreDocs.length - 1],
                new MatchAllDocsQuery(),
                10,
                new Sort(new SortField("float", SortField.Type.FLOAT, true)));
        featureTopDocs =
            searcher.searchAfter(
                featureTopDocs.scoreDocs[featureTopDocs.scoreDocs.length - 1],
                new MatchAllDocsQuery(),
                10,
                new Sort(FeatureField.newFeatureSort("feature", "foo")));
      }

      CheckHits.checkEqual(new MatchAllDocsQuery(), topDocs.scoreDocs, featureTopDocs.scoreDocs);
    } while (topDocs.scoreDocs.length > 0);

    r.close();
    dir.close();
  }


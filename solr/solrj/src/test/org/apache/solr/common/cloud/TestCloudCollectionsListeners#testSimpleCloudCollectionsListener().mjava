  @Test
  // commented out on: 24-Dec-2018   @BadApple(bugUrl="https://issues.apache.org/jira/browse/SOLR-12028") // added 17-Aug-2018
  public void testSimpleCloudCollectionsListener() throws Exception {

    CloudSolrClient client = cluster.getSolrClient();

    Map<Integer, Set<String>> oldResults = new HashMap<>();
    Map<Integer, Set<String>> newResults = new HashMap<>();

    CloudCollectionsListener watcher1 = (oldCollections, newCollections) -> {
      log.info("New set of collections: {}, {}", oldCollections, newCollections);
      oldResults.put(1, oldCollections);
      newResults.put(1, newCollections);
    };
    client.getZkStateReader().registerCloudCollectionsListener(watcher1);
    CloudCollectionsListener watcher2 = (oldCollections, newCollections) -> {
      log.info("New set of collections: {}, {}", oldCollections, newCollections);
      oldResults.put(2, oldCollections);
      newResults.put(2, newCollections);
    };
    client.getZkStateReader().registerCloudCollectionsListener(watcher2);

    assertFalse("CloudCollectionsListener not triggered after registration", oldResults.get(1).contains("testcollection1"));
    assertFalse("CloudCollectionsListener not triggered after registration", oldResults.get(2).contains("testcollection1"));

    assertFalse("CloudCollectionsListener not triggered after registration", newResults.get(1).contains("testcollection1"));
    assertFalse("CloudCollectionsListener not triggered after registration", newResults.get(2).contains("testcollection1"));

    CollectionAdminRequest.createCollection("testcollection1", "config", 4, 1)
        .setPerReplicaState(SolrCloudTestCase.USE_PER_REPLICA_STATE)
        .processAndWait(client, MAX_WAIT_TIMEOUT);
    client.waitForState("testcollection1", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS,
        (n, c) -> DocCollection.isFullyActive(n, c, 4, 1));

    assertFalse("CloudCollectionsListener has new collection in old set of collections", oldResults.get(1).contains("testcollection1"));
    assertFalse("CloudCollectionsListener has new collection in old set of collections", oldResults.get(2).contains("testcollection1"));

    assertTrue("CloudCollectionsListener doesn't have new collection in new set of collections", newResults.get(1).contains("testcollection1"));
    assertTrue("CloudCollectionsListener doesn't have new collection in new set of collections", newResults.get(2).contains("testcollection1"));

    client.getZkStateReader().removeCloudCollectionsListener(watcher1);

    CollectionAdminRequest.createCollection("testcollection2", "config", 4, 1)
        .setPerReplicaState(SolrCloudTestCase.USE_PER_REPLICA_STATE)
        .processAndWait(client, MAX_WAIT_TIMEOUT);
    cluster.waitForActiveCollection("testcollection2", 4, 4);


    assertFalse("CloudCollectionsListener notified after removal", oldResults.get(1).contains("testcollection1"));
    assertTrue("CloudCollectionsListener does not contain old collection in list of old collections", oldResults.get(2).contains("testcollection1"));
    assertFalse("CloudCollectionsListener contains new collection in old collection set", oldResults.get(1).contains("testcollection2"));
    assertFalse("CloudCollectionsListener contains new collection in old collection set", oldResults.get(2).contains("testcollection2"));

    assertFalse("CloudCollectionsListener notified after removal", newResults.get(1).contains("testcollection2"));
    assertTrue("CloudCollectionsListener does not contain new collection in list of new collections", newResults.get(2).contains("testcollection2"));

    CollectionAdminRequest.deleteCollection("testcollection1").processAndWait(client, MAX_WAIT_TIMEOUT);

    CollectionAdminRequest.deleteCollection("testcollection2").processAndWait(client, MAX_WAIT_TIMEOUT);

    client.getZkStateReader().removeCloudCollectionsListener(watcher2);
  }


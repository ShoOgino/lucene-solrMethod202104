  /**
   * Randomly generate a document and a list of stopwords to apply
   *
   * @param numberOfTokens max number of tokens in the document
   * @param sb will contain the text at the end of the method
   * @param stopwords will contain the list of the stopwords at the end of the method
   * @param stopwordPositions will contain the position of the stopwords at the end of the method
   */
  private static void generateTestSetWithStopwordsAndStopwordPositions(
      int numberOfTokens,
      StringBuilder sb,
      List<String> stopwords,
      List<Integer> stopwordPositions) {
    Random rand = random();
    for (int i = 0; i < numberOfTokens; i++) {
      String token = English.intToEnglish(i).trim();
      sb.append(token).append(' ');
      if (i == 0 || rand.nextBoolean()) {
        // with probability 0.5 will tell if this is a stopword or
        // no - adding always the first token to make sure that the
        // list of stopwords is not empty;
        stopwords.add(token);
        stopwordPositions.add(i);
      }
    }
    log("Number of tokens : " + numberOfTokens);
    log("Document : " + sb.toString());
    logStopwords("Stopwords", stopwords);
  }


  @Override
  public Optional<Term> seekTerm(String termText) {
    Objects.requireNonNull(termText);

    if (curField == null) {
      // field is not selected
      log.warn("Field not selected.");
      return Optional.empty();
    }

    try {
      Terms terms = IndexUtils.getTerms(reader, curField);
      setTermsIterator(terms.iterator());

      if (tenum.seekCeil(new BytesRef(termText)) == TermsEnum.SeekStatus.END) {
        // reached to the end of the iterator
        resetTermsIterator();
        log.info("Reached the end of the term iterator for field: {}.", curField);
        return Optional.empty();
      } else {
        return Optional.of(new Term(curField, tenum.term()));
      }
    } catch (IOException e) {
      resetTermsIterator();
      throw new LukeException(
          String.format(Locale.ENGLISH, "Terms not available for field: %s.", curField), e);
    } finally {
      // discard current postings enum
      resetPostingsIterator();
    }
  }


  @Override
  public void inform(ResourceLoader loader) throws IOException {
    assert tailored != null : "init must be called first!";
    if (tailored.isEmpty()) {
      config = new DefaultICUTokenizerConfig(cjkAsWords, myanmarAsWords);
    } else {
      final BreakIterator breakers[] =
          new BreakIterator[1 + UCharacter.getIntPropertyMaxValue(UProperty.SCRIPT)];
      for (Map.Entry<Integer, String> entry : tailored.entrySet()) {
        int code = entry.getKey();
        String resourcePath = entry.getValue();
        breakers[code] = parseRules(resourcePath, loader);
      }
      config =
          new DefaultICUTokenizerConfig(cjkAsWords, myanmarAsWords) {

            @Override
            public RuleBasedBreakIterator getBreakIterator(int script) {
              if (breakers[script] != null) {
                return (RuleBasedBreakIterator) breakers[script].clone();
              } else {
                return super.getBreakIterator(script);
              }
            }
            // TODO: we could also allow codes->types mapping
          };
    }
  }


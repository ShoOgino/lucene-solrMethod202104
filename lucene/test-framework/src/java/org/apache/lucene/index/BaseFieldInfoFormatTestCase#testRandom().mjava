  /** Test field infos read/write with random fields, with different values. */
  public void testRandom() throws Exception {
    Directory dir = newDirectory();
    Codec codec = getCodec();
    SegmentInfo segmentInfo = newSegmentInfo(dir, "_123");

    // generate a bunch of fields
    int numFields = atLeast(2000);
    Set<String> fieldNames = new HashSet<>();
    for (int i = 0; i < numFields; i++) {
      fieldNames.add(TestUtil.randomUnicodeString(random()));
    }

    String softDeletesField =
        random().nextBoolean() ? TestUtil.randomUnicodeString(random()) : null;
    FieldInfos.Builder builder =
        new FieldInfos.Builder(new FieldInfos.FieldNumbers(softDeletesField));

    for (String field : fieldNames) {
      IndexableFieldType fieldType = randomFieldType(random());
      FieldInfo fi = builder.getOrAdd(field);
      IndexOptions indexOptions = fieldType.indexOptions();
      if (indexOptions != IndexOptions.NONE) {
        fi.setIndexOptions(indexOptions);
        if (fieldType.omitNorms()) {
          fi.setOmitsNorms();
        }
      }
      fi.setDocValuesType(fieldType.docValuesType());
      if (fieldType.indexOptions() != IndexOptions.NONE
          && fieldType.indexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0) {
        if (random().nextBoolean()) {
          fi.setStorePayloads();
        }
      }

      if (fieldType.pointDimensionCount() > 0) {
        fi.setPointDimensions(
            fieldType.pointDimensionCount(),
            fieldType.pointIndexDimensionCount(),
            fieldType.pointNumBytes());
      }

      if (fieldType.vectorDimension() > 0) {
        fi.setVectorDimensionAndSearchStrategy(
            fieldType.vectorDimension(), fieldType.vectorSearchStrategy());
      }

      addAttributes(fi);
    }
    FieldInfos infos = builder.finish();
    codec.fieldInfosFormat().write(dir, segmentInfo, "", infos, IOContext.DEFAULT);
    FieldInfos infos2 = codec.fieldInfosFormat().read(dir, segmentInfo, "", IOContext.DEFAULT);
    assertEquals(infos, infos2);
    dir.close();
  }


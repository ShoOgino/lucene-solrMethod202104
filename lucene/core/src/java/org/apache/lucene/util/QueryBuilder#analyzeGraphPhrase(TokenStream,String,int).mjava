  /** Creates graph phrase query from the tokenstream contents */
  protected Query analyzeGraphPhrase(TokenStream source, String field, int phraseSlop)
      throws IOException {
    source.reset();
    GraphTokenStreamFiniteStrings graph = new GraphTokenStreamFiniteStrings(source);

    // Creates a boolean query from the graph token stream by extracting all the
    // finite strings from the graph and using them to create phrase queries with
    // the appropriate slop.
    BooleanQuery.Builder builder = new BooleanQuery.Builder();
    Iterator<TokenStream> it = graph.getFiniteStrings();
    while (it.hasNext()) {
      Query query = createFieldQuery(it.next(), BooleanClause.Occur.MUST, field, true, phraseSlop);
      if (query != null) {
        builder.add(query, BooleanClause.Occur.SHOULD);
      }
    }
    return builder.build();
  }


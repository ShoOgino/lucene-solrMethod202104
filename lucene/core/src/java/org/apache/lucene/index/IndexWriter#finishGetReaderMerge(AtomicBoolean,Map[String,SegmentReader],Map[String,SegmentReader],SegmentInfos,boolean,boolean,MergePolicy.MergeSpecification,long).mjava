  private StandardDirectoryReader finishGetReaderMerge(
      AtomicBoolean stopCollectingMergedReaders,
      Map<String, SegmentReader> mergedReaders,
      Map<String, SegmentReader> openedReadOnlyClones,
      SegmentInfos openingSegmentInfos,
      boolean applyAllDeletes,
      boolean writeAllDeletes,
      MergePolicy.MergeSpecification pointInTimeMerges,
      long maxCommitMergeWaitMillis)
      throws IOException {
    assert openingSegmentInfos != null;
    mergeScheduler.merge(mergeSource, MergeTrigger.GET_READER);
    pointInTimeMerges.await(maxCommitMergeWaitMillis, TimeUnit.MILLISECONDS);
    synchronized (this) {
      stopCollectingMergedReaders.set(true);
      StandardDirectoryReader reader =
          maybeReopenMergedNRTReader(
              mergedReaders,
              openedReadOnlyClones,
              openingSegmentInfos,
              applyAllDeletes,
              writeAllDeletes);
      IOUtils.close(mergedReaders.values());
      mergedReaders.clear();
      return reader;
    }
  }


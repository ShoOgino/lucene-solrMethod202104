  /**
   * Compute a GeoPoint that's based on (x,y,z) values, but is scaled to actually be on the planet
   * surface.
   *
   * @param x is the x value.
   * @param y is the y value.
   * @param z is the z value.
   * @return the scaled point.
   */
  public GeoPoint createSurfacePoint(final double x, final double y, final double z) {
    // The equation of the surface is:
    // (x^2 / a^2 + y^2 / b^2 + z^2 / zScaling^2) = 1
    // We will need to scale the passed-in x, y, z values:
    // ((tx)^2 / a^2 + (ty)^2 / b^2 + (tz)^2 / zScaling^2) = 1
    // t^2 * (x^2 / a^2 + y^2 / b^2 + z^2 / zScaling^2)  = 1
    // t = sqrt ( 1 / (x^2 / a^2 + y^2 / b^2 + z^2 / zScaling^2))
    final double t =
        Math.sqrt(
            1.0
                / (x * x * inverseXYScalingSquared
                    + y * y * inverseXYScalingSquared
                    + z * z * inverseZScalingSquared));
    return new GeoPoint(t * x, t * y, t * z);
  }


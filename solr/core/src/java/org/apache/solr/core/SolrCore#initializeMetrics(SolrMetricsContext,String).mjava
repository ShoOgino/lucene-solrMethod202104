  @Override
  public void initializeMetrics(SolrMetricsContext parentContext, String scope) {
    newSearcherCounter = parentContext.counter("new", Category.SEARCHER.toString());
    newSearcherTimer = parentContext.timer("time", Category.SEARCHER.toString(), "new");
    newSearcherWarmupTimer = parentContext.timer("warmup", Category.SEARCHER.toString(), "new");
    newSearcherMaxReachedCounter = parentContext.counter("maxReached", Category.SEARCHER.toString(), "new");
    newSearcherOtherErrorsCounter = parentContext.counter("errors", Category.SEARCHER.toString(), "new");

    parentContext.gauge(() -> name == null ? parentContext.nullString() : name, true, "coreName", Category.CORE.toString());
    parentContext.gauge(() -> startTime, true, "startTime", Category.CORE.toString());
    parentContext.gauge(() -> getOpenCount(), true, "refCount", Category.CORE.toString());
    parentContext.gauge(() -> getInstancePath().toString(), true, "instanceDir", Category.CORE.toString());
    parentContext.gauge(() -> isClosed() ? parentContext.nullString() : getIndexDir(), true, "indexDir", Category.CORE.toString());
    parentContext.gauge(() -> isClosed() ? parentContext.nullNumber() : getIndexSize(), true, "sizeInBytes", Category.INDEX.toString());
    parentContext.gauge(() -> isClosed() ? parentContext.nullString() : NumberUtils.readableSize(getIndexSize()), true, "size", Category.INDEX.toString());
    if (coreContainer != null) {
      final CloudDescriptor cd = getCoreDescriptor().getCloudDescriptor();
      if (cd != null) {
        parentContext.gauge(() -> {
          if (cd.getCollectionName() != null) {
            return cd.getCollectionName();
          } else {
            return parentContext.nullString();
          }
        }, true, "collection", Category.CORE.toString());

        parentContext.gauge(() -> {
          if (cd.getShardId() != null) {
            return cd.getShardId();
          } else {
            return parentContext.nullString();
          }
        }, true, "shard", Category.CORE.toString());
      }
    }
    // initialize disk total / free metrics
    Path dataDirPath = Paths.get(dataDir);
    File dataDirFile = dataDirPath.toFile();
    parentContext.gauge(() -> dataDirFile.getTotalSpace(), true, "totalSpace", Category.CORE.toString(), "fs");
    parentContext.gauge(() -> dataDirFile.getUsableSpace(), true, "usableSpace", Category.CORE.toString(), "fs");
    parentContext.gauge(() -> dataDirPath.toAbsolutePath().toString(), true, "path", Category.CORE.toString(), "fs");
  }


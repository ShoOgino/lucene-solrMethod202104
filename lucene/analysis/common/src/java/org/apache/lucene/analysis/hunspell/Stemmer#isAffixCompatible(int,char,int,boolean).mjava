  private boolean isAffixCompatible(
      int affix, char prevFlag, int recursionDepth, boolean previousWasPrefix) {
    int append = dictionary.affixData(affix, Dictionary.AFFIX_APPEND);

    if (recursionDepth == 0) {
      // check if affix is allowed in a non-compound word
      return !dictionary.hasFlag(append, dictionary.onlyincompound, scratch);
    }

    if (isCrossProduct(affix)) {
      // cross check incoming continuation class (flag of previous affix) against list.
      char[] appendFlags = dictionary.decodeFlags(append, scratch);
      if (!Dictionary.hasFlag(appendFlags, dictionary.onlyincompound)) {
        return previousWasPrefix || Dictionary.hasFlag(appendFlags, prevFlag);
      }
    }

    return false;
  }


  protected void checkBattenbergNotRobustly(
      char c,
      double cx,
      double cy,
      int level,
      List<Cell> matches,
      BytesRef str,
      Shape shape,
      int maxLevel) {
    assert str.length == level;
    assert str.offset == 0;
    double w = levelW[level] / 2;
    double h = levelH[level] / 2;

    int strlen = str.length;
    Rectangle rectangle = ctx.getShapeFactory().rect(cx - w, cx + w, cy - h, cy + h);
    SpatialRelation v = shape.relate(rectangle);
    if (SpatialRelation.CONTAINS == v) {
      str.bytes[str.length++] = (byte) c; // append
      // str.append(SpatialPrefixGrid.COVER);
      matches.add(new QuadCell(BytesRef.deepCopyOf(str), v.transpose()));
    } else if (SpatialRelation.DISJOINT == v) {
      // nothing
    } else { // SpatialRelation.WITHIN, SpatialRelation.INTERSECTS
      str.bytes[str.length++] = (byte) c; // append

      int nextLevel = level + 1;
      if (nextLevel >= maxLevel) {
        // str.append(SpatialPrefixGrid.INTERSECTS);
        matches.add(new QuadCell(BytesRef.deepCopyOf(str), v.transpose()));
      } else {
        buildNotRobustly(cx, cy, nextLevel, matches, str, shape, maxLevel);
      }
    }
    str.length = strlen;
  }


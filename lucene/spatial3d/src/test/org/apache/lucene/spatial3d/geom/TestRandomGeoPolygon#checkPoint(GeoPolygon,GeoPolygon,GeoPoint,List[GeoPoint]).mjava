  private void checkPoint(final GeoPolygon polygon, final GeoPolygon largePolygon, final GeoPoint point, final List<GeoPoint> orderedPoints) {
    final boolean withIn1 = polygon.isWithin(point);
    final boolean withIn2 = largePolygon.isWithin(point);
    StringBuilder buffer = new StringBuilder();
    if (withIn1 != withIn2) {
      //NOTE: Standard and large polygon are mathematically slightly different
      //close to the edges (due to bounding planes). Nothing we can do about that
      //so we filter the differences.
      final double d1 = polygon.computeOutsideDistance(DistanceStyle.ARC, point);
      final double d2  = largePolygon.computeOutsideDistance(DistanceStyle.ARC, point);
      if (d1 == 0 && d2 == 0) {
        return;
      }
      buffer = buffer.append("\nStandard polygon: " + polygon.toString() +"\n");
      buffer = buffer.append("\nLarge polygon: " + largePolygon.toString() +"\n");
      buffer = buffer.append("\nPoint: " + point.toString() +"\n");
      buffer.append("\nWKT: " + getWKT(orderedPoints));
      buffer.append("\nWKT: POINT(" + Geo3DUtil.toDegrees(point.getLongitude()) + " " + Geo3DUtil.toDegrees(point.getLatitude()) + ")\n");
      buffer.append("normal polygon: " +withIn1 + "\n");
      buffer.append("large polygon: " + withIn2 + "\n");
    }
    assertTrue(buffer.toString(), withIn1 == withIn2);
  }


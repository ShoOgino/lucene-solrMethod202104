  private int spanCount(String include, int slop, String exclude, int pre, int post)
      throws IOException {
    String[] includeTerms = include.split(" +");
    SpanQuery iq =
        includeTerms.length == 1
            ? spanTermQuery(field, include)
            : spanNearOrderedQuery(field, slop, includeTerms);
    SpanQuery eq = spanTermQuery(field, exclude);
    SpanQuery snq = spanNotQuery(iq, eq, pre, post);
    Spans spans =
        snq.createWeight(searcher, ScoreMode.COMPLETE_NO_SCORES, 1f)
            .getSpans(searcher.getIndexReader().leaves().get(0), SpanWeight.Postings.POSITIONS);

    int i = 0;
    if (spans != null) {
      while (spans.nextDoc() != Spans.NO_MORE_DOCS) {
        while (spans.nextStartPosition() != Spans.NO_MORE_POSITIONS) {
          i++;
        }
      }
    }
    return i;
  }


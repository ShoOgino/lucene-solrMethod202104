  /**
   * Constructs new <code>Automaton</code> from this <code>RegExp</code>. The constructed automaton
   * is minimal and deterministic and has no transitions to dead states.
   *
   * @param maxDeterminizedStates maximum number of states in the resulting automata. If the
   *     automata would need more than this many states TooComplextToDeterminizeException is thrown.
   *     Higher number require more space but can process more complex regexes.
   * @exception IllegalArgumentException if this regular expression uses a named identifier that is
   *     not available from the automaton provider
   * @exception TooComplexToDeterminizeException if determinizing this regexp requires more than
   *     maxDeterminizedStates states
   */
  public Automaton toAutomaton(int maxDeterminizedStates)
      throws IllegalArgumentException, TooComplexToDeterminizeException {
    return toAutomaton(null, null, maxDeterminizedStates);
  }


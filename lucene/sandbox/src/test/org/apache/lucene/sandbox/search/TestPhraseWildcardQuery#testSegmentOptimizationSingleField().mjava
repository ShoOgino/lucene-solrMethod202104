  public void testSegmentOptimizationSingleField() throws Exception {
    searchAndCheckResults(field(0), 100, 0, true, "b*", "e*");
    // Both multi-terms are present in both segments.
    // So expecting 4 segment accesses.
    assertCounters().multiTermAnalysis(2).segmentUse(4).segmentSkip(0).queryEarlyStop(0);

    searchAndCheckResults(field(0), 100, 0, true, "t?e", "b*", "e*");
    // "t?e" matches only in the first segment. This term adds 2 segment accesses and 1 segment skip.
    // The other multi-terms match in the first segment. Each one adds 1 segment access.
    // So expecting 3 segment accesses and 1 segment skips.
    assertCounters().multiTermAnalysis(3).segmentUse(4).segmentSkip(1).queryEarlyStop(0);

    searchAndCheckResults(field(0), 100, 0, true, "t?e", "blind", "e*");
    assertCounters().multiTermAnalysis(1).segmentUse(3).segmentSkip(2).queryEarlyStop(1);

    expectDifferentScoreForSpanNearQueryWithMultiTermSubset(() -> {
      searchAndCheckResults(field(2), 100, 0, true, "tim*", "t*");
      assertCounters().multiTermAnalysis(2).segmentUse(2).segmentSkip(1).queryEarlyStop(0);
    });
  }


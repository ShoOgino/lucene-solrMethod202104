  private void collapseTokens(int tokenType) throws IOException {
    // collapse
    StringBuilder buffer = new StringBuilder(32);
    int numAdded = scanner.setText(buffer);
    // TODO: how to know how much whitespace to add
    int theStart = scanner.yychar();
    int lastPos = theStart + numAdded;
    int tmpTokType;
    int numSeen = 0;
    // while we can get a token and that token is the same type and we have not transitioned to a
    // new wiki-item of the same type
    while ((tmpTokType = scanner.getNextToken()) != WikipediaTokenizerImpl.YYEOF
        && tmpTokType == tokenType
        && scanner.getNumWikiTokensSeen() > numSeen) {
      int currPos = scanner.yychar();
      // append whitespace
      for (int i = 0; i < (currPos - lastPos); i++) {
        buffer.append(' ');
      }
      numAdded = scanner.setText(buffer);
      numSeen++;
      lastPos = currPos + numAdded;
    }
    // trim the buffer
    // TODO: this is inefficient
    String s = buffer.toString().trim();
    termAtt.setEmpty().append(s);
    offsetAtt.setOffset(correctOffset(theStart), correctOffset(theStart + s.length()));
    flagsAtt.setFlags(UNTOKENIZED_TOKEN_FLAG);
    // The way the loop is written, we will have proceeded to the next token.  We need to pushback
    // the scanner to lastPos
    if (tmpTokType != WikipediaTokenizerImpl.YYEOF) {
      scanner.yypushback(scanner.yylength());
    } else {
      tokens = null;
    }
  }


  /** Copies the segment files as-is into the IndexWriter's directory. */
  private SegmentCommitInfo copySegmentAsIs(
      SegmentCommitInfo info, String segName, IOContext context) throws IOException {

    // Same SI as before but we change directory and name
    SegmentInfo newInfo =
        new SegmentInfo(
            directoryOrig,
            info.info.getVersion(),
            info.info.getMinVersion(),
            segName,
            info.info.maxDoc(),
            info.info.getUseCompoundFile(),
            info.info.getCodec(),
            info.info.getDiagnostics(),
            info.info.getId(),
            info.info.getAttributes(),
            info.info.getIndexSort());
    SegmentCommitInfo newInfoPerCommit =
        new SegmentCommitInfo(
            newInfo,
            info.getDelCount(),
            info.getSoftDelCount(),
            info.getDelGen(),
            info.getFieldInfosGen(),
            info.getDocValuesGen(),
            info.getId());

    newInfo.setFiles(info.info.files());
    newInfoPerCommit.setFieldInfosFiles(info.getFieldInfosFiles());
    newInfoPerCommit.setDocValuesUpdatesFiles(info.getDocValuesUpdatesFiles());

    boolean success = false;

    Set<String> copiedFiles = new HashSet<>();
    try {
      // Copy the segment's files
      for (String file : info.files()) {
        final String newFileName = newInfo.namedForThisSegment(file);
        directory.copyFrom(info.info.dir, file, newFileName, context);
        copiedFiles.add(newFileName);
      }
      success = true;
    } finally {
      if (!success) {
        // Safe: these files must exist
        deleteNewFiles(copiedFiles);
      }
    }

    assert copiedFiles.equals(newInfoPerCommit.files())
        : "copiedFiles=" + copiedFiles + " vs " + newInfoPerCommit.files();

    return newInfoPerCommit;
  }


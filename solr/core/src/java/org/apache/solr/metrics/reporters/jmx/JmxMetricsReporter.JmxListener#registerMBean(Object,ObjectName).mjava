    private void registerMBean(Object mBean, ObjectName objectName) throws InstanceAlreadyExistsException, JMException {
      // remove previous bean if exists
      if (mBeanServer.isRegistered(objectName)) {
        if (log.isDebugEnabled()) {
          Set<ObjectInstance> objects = mBeanServer.queryMBeans(objectName, null);
          if (log.isDebugEnabled()) {
            log.debug("## removing existing {} bean(s) for {}, current tag={}:", objects.size(), objectName.getCanonicalName(), tag);
          }
          for (ObjectInstance inst : objects) {
            if (log.isDebugEnabled()) {
              log.debug("## - tag={}", mBeanServer.getAttribute(inst.getObjectName(), INSTANCE_TAG));
            }
          }
        }
        mBeanServer.unregisterMBean(objectName);
      }
      ObjectInstance objectInstance = mBeanServer.registerMBean(mBean, objectName);
      if (objectInstance != null) {
        // the websphere mbeanserver rewrites the objectname to include
        // cell, node & server info
        // make sure we capture the new objectName for unregistration
        registered.put(objectName, objectInstance.getObjectName());
      } else {
        registered.put(objectName, objectName);
      }
      if (log.isDebugEnabled()) {
        log.debug("## registered {}, tag={}", objectInstance.getObjectName().getCanonicalName(), tag);
      }
    }


  // Adds this state to the set
  public void incr(int num) {
    if (useTreeMap) {
      map.merge(num, 1, Integer::sum);
      return;
    }

    if (upto == values.length) {
      values = ArrayUtil.grow(values, 1 + upto);
      counts = ArrayUtil.grow(counts, 1 + upto);
    }

    for (int i = 0; i < upto; i++) {
      if (values[i] == num) {
        counts[i]++;
        return;
      } else if (num < values[i]) {
        // insert here
        int j = upto - 1;
        while (j >= i) {
          values[1 + j] = values[j];
          counts[1 + j] = counts[j];
          j--;
        }
        values[i] = num;
        counts[i] = 1;
        upto++;
        return;
      }
    }

    // append
    values[upto] = num;
    counts[upto] = 1;
    upto++;

    if (upto == TREE_MAP_CUTOVER) {
      useTreeMap = true;
      for (int i = 0; i < upto; i++) {
        map.put(values[i], counts[i]);
      }
    }
  }


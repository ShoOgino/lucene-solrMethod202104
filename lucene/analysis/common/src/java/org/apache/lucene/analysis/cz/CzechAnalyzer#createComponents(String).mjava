  /**
   * Creates {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents} used to tokenize all
   * the text in the provided {@link Reader}.
   *
   * @return {@link org.apache.lucene.analysis.Analyzer.TokenStreamComponents} built from a {@link
   *     StandardTokenizer} filtered with {@link LowerCaseFilter}, {@link StopFilter}, and {@link
   *     CzechStemFilter} (only if version is &gt;= LUCENE_31). If a stem exclusion set is provided
   *     via {@link #CzechAnalyzer(CharArraySet, CharArraySet)} a {@link SetKeywordMarkerFilter} is
   *     added before {@link CzechStemFilter}.
   */
  @Override
  protected TokenStreamComponents createComponents(String fieldName) {
    final Tokenizer source = new StandardTokenizer();
    TokenStream result = new LowerCaseFilter(source);
    result = new StopFilter(result, stopwords);
    if (!this.stemExclusionTable.isEmpty())
      result = new SetKeywordMarkerFilter(result, stemExclusionTable);
    result = new CzechStemFilter(result);
    return new TokenStreamComponents(source, result);
  }


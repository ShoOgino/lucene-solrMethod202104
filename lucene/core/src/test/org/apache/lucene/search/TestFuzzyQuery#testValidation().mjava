  public void testValidation() {
    IllegalArgumentException expected =
        expectThrows(
            IllegalArgumentException.class,
            () -> {
              new FuzzyQuery(new Term("field", "foo"), -1, 0, 1, false);
            });
    assertTrue(expected.getMessage().contains("maxEdits"));

    expected =
        expectThrows(
            IllegalArgumentException.class,
            () -> {
              new FuzzyQuery(
                  new Term("field", "foo"),
                  LevenshteinAutomata.MAXIMUM_SUPPORTED_DISTANCE + 1,
                  0,
                  1,
                  false);
            });
    assertTrue(expected.getMessage().contains("maxEdits must be between"));

    expected =
        expectThrows(
            IllegalArgumentException.class,
            () -> {
              new FuzzyQuery(new Term("field", "foo"), 1, -1, 1, false);
            });
    assertTrue(expected.getMessage().contains("prefixLength cannot be negative"));

    expected =
        expectThrows(
            IllegalArgumentException.class,
            () -> {
              new FuzzyQuery(new Term("field", "foo"), 1, 0, -1, false);
            });
    assertTrue(expected.getMessage().contains("maxExpansions must be positive"));

    expected =
        expectThrows(
            IllegalArgumentException.class,
            () -> {
              new FuzzyQuery(new Term("field", "foo"), 1, 0, -1, false);
            });
    assertTrue(expected.getMessage().contains("maxExpansions must be positive"));
  }


  public void testBlendedInfixSuggesterDedupsOnWeightTitleAndPayload() throws Exception {

    // exactly same inputs
    Input[] inputDocuments =
        new Input[] {
          new Input("lend me your ear", 7, new BytesRef("uid1")),
          new Input("lend me your ear", 7, new BytesRef("uid1")),
        };
    duplicateCheck(inputDocuments, 1);

    // inputs differ on payload
    inputDocuments =
        new Input[] {
          new Input("lend me your ear", 7, new BytesRef("uid1")),
          new Input("lend me your ear", 7, new BytesRef("uid2")),
        };
    duplicateCheck(inputDocuments, 2);

    // exactly same input without payloads
    inputDocuments =
        new Input[] {
          new Input("lend me your ear", 7), new Input("lend me your ear", 7),
        };
    duplicateCheck(inputDocuments, 1);

    // Same input with first has payloads, second does not
    inputDocuments =
        new Input[] {
          new Input("lend me your ear", 7, new BytesRef("uid1")), new Input("lend me your ear", 7),
        };
    duplicateCheck(inputDocuments, 2);

    /**
     * same input, first not having a payload, the second having payload we would expect 2 entries
     * out but we are getting only 1 because the InputArrayIterator#hasPayloads() returns false
     * because the first item has no payload, therefore, when ingested, none of the 2 input has
     * payload and become 1
     */
    inputDocuments =
        new Input[] {
          new Input("lend me your ear", 7), new Input("lend me your ear", 7, new BytesRef("uid2")),
        };
    List<Lookup.LookupResult> results = duplicateCheck(inputDocuments, 1);
    assertNull(results.get(0).payload);

    // exactly same inputs but different weight
    inputDocuments =
        new Input[] {
          new Input("lend me your ear", 1, new BytesRef("uid1")),
          new Input("lend me your ear", 7, new BytesRef("uid1")),
        };
    duplicateCheck(inputDocuments, 2);

    // exactly same inputs but different text
    inputDocuments =
        new Input[] {
          new Input("lend me your earings", 7, new BytesRef("uid1")),
          new Input("lend me your ear", 7, new BytesRef("uid1")),
        };
    duplicateCheck(inputDocuments, 2);
  }


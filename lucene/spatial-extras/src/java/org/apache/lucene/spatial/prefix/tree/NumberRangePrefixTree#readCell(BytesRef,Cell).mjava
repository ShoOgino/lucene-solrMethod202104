  @Override
  public Cell readCell(BytesRef term, Cell scratch) {
    if (scratch == null) scratch = getWorldCell();

    // We decode level #, leaf boolean, and populate bytes by reference. We don't decode the stack.

    // reverse lookup term length to the level and hence the cell
    NRCell[] cellsByLevel = ((NRCell) scratch).cellsByLevel;
    boolean isLeaf = term.bytes[term.offset + term.length - 1] == 0;
    int lenNoLeaf = isLeaf ? term.length - 1 : term.length;

    NRCell result = cellsByLevel[levelByTermLen[lenNoLeaf]];
    if (cellsByLevel[0].termBuf == null)
      cellsByLevel[0].termBuf = result.term.bytes; // a kluge; see cell.ensureOwnTermBytes()
    result.term.bytes = term.bytes;
    result.term.offset = term.offset;
    result.term.length = lenNoLeaf; // technically this isn't used but may help debugging
    result.reset();
    if (isLeaf) result.setLeaf();

    result.cellNumber = -1; // lazy decode flag

    return result;
  }


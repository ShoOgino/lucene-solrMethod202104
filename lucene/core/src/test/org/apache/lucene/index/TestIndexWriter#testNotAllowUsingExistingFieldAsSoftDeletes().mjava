  public void testNotAllowUsingExistingFieldAsSoftDeletes() throws Exception {
    Directory dir = newDirectory();
    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());
    for (int i = 0; i < 2; i++) {
      Document d = new Document();
      d.add(new StringField("id", "1", Field.Store.YES));
      if (random().nextBoolean()) {
        d.add(new NumericDocValuesField("dv_field", 1));
        w.updateDocument(new Term("id", "1"), d);
      } else {
        w.softUpdateDocument(new Term("id", "1"), d, new NumericDocValuesField("dv_field", 1));
      }
    }
    w.commit();
    w.close();
    String softDeletesField = random().nextBoolean() ? "id" : "dv_field";
    IllegalArgumentException error =
        expectThrows(
            IllegalArgumentException.class,
            () -> {
              IndexWriterConfig config =
                  newIndexWriterConfig().setSoftDeletesField(softDeletesField);
              new IndexWriter(dir, config);
            });
    assertEquals(
        "cannot configure ["
            + softDeletesField
            + "] as soft-deletes;"
            + " this index uses ["
            + softDeletesField
            + "] as non-soft-deletes already",
        error.getMessage());
    IndexWriterConfig config = newIndexWriterConfig().setSoftDeletesField("non-existing-field");
    w = new IndexWriter(dir, config);
    w.close();
    dir.close();
  }


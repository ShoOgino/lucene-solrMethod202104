  protected void searchAndCheckSameResults(Query testQuery, Query referenceQuery,
                                           boolean compareScores) throws IOException {
    ScoreDoc[] testResults = searcher.search(testQuery, MAX_DOCS).scoreDocs;
    ScoreDoc[] referenceResults = searcher.search(referenceQuery, MAX_DOCS).scoreDocs;
    assertEquals("Number of results differ when comparing to " + referenceQuery.getClass().getSimpleName(),
        referenceResults.length, testResults.length);
    if (compareScores) {
      for (int i = 0; i < testResults.length; i++) {
        ScoreDoc testResult = testResults[i];
        ScoreDoc referenceResult = referenceResults[i];
        assertTrue("Result " + i + " differ when comparing to " + referenceQuery.getClass().getSimpleName()
                + "\ntestResults=" + Arrays.toString(testResults) + "\nreferenceResults=" + Arrays.toString(referenceResults),
            equals(testResult, referenceResult));
      }
    } else {
      Set<Integer> testResultDocIds = Arrays.stream(testResults).map(scoreDoc -> scoreDoc.doc).collect(Collectors.toSet());
      Set<Integer> referenceResultDocIds = Arrays.stream(referenceResults).map(scoreDoc -> scoreDoc.doc).collect(Collectors.toSet());
      assertEquals("Results differ when comparing to " + referenceQuery.getClass().getSimpleName()
              + " ignoring score\ntestResults=" + Arrays.toString(testResults) + "\nreferenceResults=" + Arrays.toString(referenceResults),
          referenceResultDocIds, testResultDocIds);
    }
  }


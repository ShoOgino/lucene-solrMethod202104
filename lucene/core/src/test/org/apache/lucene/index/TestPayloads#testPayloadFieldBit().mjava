  // Tests whether the DocumentWriter and SegmentMerger correctly enable the
  // payload bit in the FieldInfo
  public void testPayloadFieldBit() throws Exception {
    Directory ram = newDirectory();
    PayloadAnalyzer analyzer = new PayloadAnalyzer();
    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(analyzer));
    Document d = new Document();
    // this field won't have any payloads
    d.add(newTextField("f1", "This field has no payloads", Field.Store.NO));
    // this field will have payloads in all docs, however not for all term positions,
    // so this field is used to check if the DocumentWriter correctly enables the payloads bit
    // even if only some term positions have payloads
    d.add(newTextField("f2", "This field has payloads in all docs", Field.Store.NO));
    d.add(newTextField("f2", "This field has payloads in all docs NO PAYLOAD", Field.Store.NO));
    // this field is used to verify if the SegmentMerger enables payloads for a field if it has
    // payloads
    // enabled in only some documents
    d.add(newTextField("f3", "This field has payloads in some docs", Field.Store.NO));
    // only add payload data for field f2
    analyzer.setPayloadData("f2", "somedata".getBytes(StandardCharsets.UTF_8), 0, 1);
    writer.addDocument(d);
    // flush
    writer.close();

    LeafReader reader = getOnlyLeafReader(DirectoryReader.open(ram));
    FieldInfos fi = reader.getFieldInfos();
    assertFalse("Payload field bit should not be set.", fi.fieldInfo("f1").hasPayloads());
    assertTrue("Payload field bit should be set.", fi.fieldInfo("f2").hasPayloads());
    assertFalse("Payload field bit should not be set.", fi.fieldInfo("f3").hasPayloads());
    reader.close();

    // now we add another document which has payloads for field f3 and verify if the SegmentMerger
    // enabled payloads for that field
    analyzer = new PayloadAnalyzer(); // Clear payload state for each field
    writer = new IndexWriter(ram, newIndexWriterConfig(analyzer).setOpenMode(OpenMode.CREATE));
    d = new Document();
    d.add(newTextField("f1", "This field has no payloads", Field.Store.NO));
    d.add(newTextField("f2", "This field has payloads in all docs", Field.Store.NO));
    d.add(newTextField("f2", "This field has payloads in all docs", Field.Store.NO));
    d.add(newTextField("f3", "This field has payloads in some docs", Field.Store.NO));
    // add payload data for field f2 and f3
    analyzer.setPayloadData("f2", "somedata".getBytes(StandardCharsets.UTF_8), 0, 1);
    analyzer.setPayloadData("f3", "somedata".getBytes(StandardCharsets.UTF_8), 0, 3);
    writer.addDocument(d);

    // force merge
    writer.forceMerge(1);
    // flush
    writer.close();

    reader = getOnlyLeafReader(DirectoryReader.open(ram));
    fi = reader.getFieldInfos();
    assertFalse("Payload field bit should not be set.", fi.fieldInfo("f1").hasPayloads());
    assertTrue("Payload field bit should be set.", fi.fieldInfo("f2").hasPayloads());
    assertTrue("Payload field bit should be set.", fi.fieldInfo("f3").hasPayloads());
    reader.close();
    ram.close();
  }


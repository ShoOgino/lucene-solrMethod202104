  public void testIncludeOrig() throws Exception {
    SynonymMap.Builder b = new SynonymMap.Builder(true);
    final boolean keepOrig = true;
    add(b, "a b", "ab", keepOrig);
    add(b, "a c", "ac", keepOrig);
    add(b, "a", "aa", keepOrig);
    add(b, "b", "bb", keepOrig);
    add(b, "z x c v", "zxcv", keepOrig);
    add(b, "x c", "xc", keepOrig);

    Analyzer a = getFlattenAnalyzer(b, true);

    assertAnalyzesTo(a, "$", new String[] {"$"}, new int[] {1});
    assertAnalyzesTo(a, "a", new String[] {"aa", "a"}, new int[] {1, 0});
    assertAnalyzesTo(a, "a", new String[] {"aa", "a"}, new int[] {1, 0});
    assertAnalyzesTo(a, "$ a", new String[] {"$", "aa", "a"}, new int[] {1, 1, 0});
    assertAnalyzesTo(a, "a $", new String[] {"aa", "a", "$"}, new int[] {1, 0, 1});
    assertAnalyzesTo(a, "$ a !", new String[] {"$", "aa", "a", "!"}, new int[] {1, 1, 0, 1});
    assertAnalyzesTo(a, "a a", new String[] {"aa", "a", "aa", "a"}, new int[] {1, 0, 1, 0});
    assertAnalyzesTo(a, "b", new String[] {"bb", "b"}, new int[] {1, 0});
    assertAnalyzesTo(
        a, "z x c v", new String[] {"zxcv", "z", "x", "c", "v"}, new int[] {1, 0, 1, 1, 1});
    assertAnalyzesTo(
        a, "z x c $", new String[] {"z", "xc", "x", "c", "$"}, new int[] {1, 1, 0, 1, 1});
    a.close();
  }


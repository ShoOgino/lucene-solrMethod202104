  /**
   * Stem an input buffer of Bulgarian text.
   *
   * @param s input buffer
   * @param len length of input buffer
   * @return length of input buffer after normalization
   */
  public int stem(final char s[], int len) {
    if (len < 4) // do not stem
    return len;

    if (len > 5 && endsWith(s, len, "ища")) {
      return len - 3;
    }

    len = removeArticle(s, len);
    len = removePlural(s, len);

    if (len > 3) {
      if (endsWith(s, len, "я")) {
        len--;
      }
      if (endsWith(s, len, "а") || endsWith(s, len, "о") || endsWith(s, len, "е")) {
        len--;
      }
    }

    // the rule to rewrite ен -> н is duplicated in the paper.
    // in the perl implementation referenced by the paper, this is fixed.
    // (it is fixed here as well)
    if (len > 4 && endsWith(s, len, "ен")) {
      s[len - 2] = 'н'; // replace with н
      len--;
    }

    if (len > 5 && s[len - 2] == 'ъ') {
      s[len - 2] = s[len - 1]; // replace ъN with N
      len--;
    }

    return len;
  }


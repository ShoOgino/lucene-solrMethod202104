  @SuppressWarnings("unchecked")
  @Test
  public void replicaTypeAndReplicaBase() {
    RequestReplicaListTransformerGenerator generator = new RequestReplicaListTransformerGenerator();
    ModifiableSolrParams params = new ModifiableSolrParams();
    List<Replica> replicas = getBasicReplicaList();

    // Add a replica so that sorting by replicaType:TLOG can cause a tie
    replicas.add(
        new Replica(
            "node4",
            map(
                ZkStateReader.NODE_NAME_PROP, "node4:8983_solr",
                ZkStateReader.CORE_NAME_PROP, "collection1",
                ZkStateReader.REPLICA_TYPE, "TLOG"
            ), "c1","s1"
        )
    );

    // Add a PULL replica so that there's a tie for "last place"
    replicas.add(
        new Replica(
            "node5",
            map(
                ZkStateReader.NODE_NAME_PROP, "node5:8983_solr",
                ZkStateReader.CORE_NAME_PROP, "collection1",
                ZkStateReader.REPLICA_TYPE, "PULL"
            ), "c1","s1"
        )
    );

    // replicaType and replicaBase combined rule param
    String rulesParam = ShardParams.SHARDS_PREFERENCE_REPLICA_TYPE + ":NRT," +
        ShardParams.SHARDS_PREFERENCE_REPLICA_TYPE + ":TLOG," +
        ShardParams.SHARDS_PREFERENCE_REPLICA_BASE + ":stable:dividend:routingPreference";

    params.add("routingPreference", "0");
    params.add(ShardParams.SHARDS_PREFERENCE, rulesParam);
    ReplicaListTransformer rlt = generator.getReplicaListTransformer(params);
    rlt.transform(replicas);
    assertEquals("node1", getHost(replicas.get(0).getNodeName()));
    assertEquals("node2", getHost(replicas.get(1).getNodeName()));
    assertEquals("node4", getHost(replicas.get(2).getNodeName()));
    assertEquals("node3", getHost(replicas.get(3).getNodeName()));
    assertEquals("node5", getHost(replicas.get(4).getNodeName()));

    params.set("routingPreference", "1");
    rlt = generator.getReplicaListTransformer(params);
    rlt.transform(replicas);
    assertEquals("node1", getHost(replicas.get(0).getNodeName()));
    assertEquals("node4", getHost(replicas.get(1).getNodeName()));
    assertEquals("node2", getHost(replicas.get(2).getNodeName()));
    assertEquals("node5", getHost(replicas.get(3).getNodeName()));
    assertEquals("node3", getHost(replicas.get(4).getNodeName()));
  }


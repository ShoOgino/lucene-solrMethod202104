  // LUCENE-1255
  public void testNegativePositions() throws Throwable {
    final TokenStream tokens =
        new TokenStream() {
          final CharTermAttribute termAtt = addAttribute(CharTermAttribute.class);
          final PositionIncrementAttribute posIncrAtt =
              addAttribute(PositionIncrementAttribute.class);

          final Iterator<String> terms = Arrays.asList("a", "b", "c").iterator();
          boolean first = true;

          @Override
          public boolean incrementToken() {
            if (!terms.hasNext()) return false;
            clearAttributes();
            termAtt.append(terms.next());
            posIncrAtt.setPositionIncrement(first ? 0 : 1);
            first = false;
            return true;
          }
        };

    Directory dir = newDirectory();
    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));
    Document doc = new Document();
    doc.add(new TextField("field", tokens));
    expectThrows(
        IllegalArgumentException.class,
        () -> {
          w.addDocument(doc);
        });

    w.close();
    dir.close();
  }


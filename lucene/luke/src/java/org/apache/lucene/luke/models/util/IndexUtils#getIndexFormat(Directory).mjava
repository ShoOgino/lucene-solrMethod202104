  /**
   * Returns the string representation for Lucene codec version when the index was written.
   *
   * @param dir - index directory
   * @throws IOException - if there is a low level IO error.
   */
  public static String getIndexFormat(Directory dir) throws IOException {
    Objects.requireNonNull(dir);

    return new SegmentInfos.FindSegmentsFile<String>(dir) {
      @Override
      protected String doBody(String segmentFileName) throws IOException {
        String format = "unknown";
        try (IndexInput in = dir.openInput(segmentFileName, IOContext.READ)) {
          if (CodecUtil.CODEC_MAGIC == in.readInt()) {
            int actualVersion =
                CodecUtil.checkHeaderNoMagic(
                    in, "segments", SegmentInfos.VERSION_70, Integer.MAX_VALUE);
            if (actualVersion == SegmentInfos.VERSION_70) {
              format = "Lucene 7.0 or later";
            } else if (actualVersion == SegmentInfos.VERSION_72) {
              format = "Lucene 7.2 or later";
            } else if (actualVersion == SegmentInfos.VERSION_74) {
              format = "Lucene 7.4 or later";
            } else if (actualVersion == SegmentInfos.VERSION_86) {
              format = "Lucene 8.6 or later";
            } else if (actualVersion > SegmentInfos.VERSION_86) {
              format = "Lucene 8.6 or later (UNSUPPORTED)";
            }
          } else {
            format = "Lucene 6.x or prior (UNSUPPORTED)";
          }
        }
        return format;
      }
    }.run();
  }


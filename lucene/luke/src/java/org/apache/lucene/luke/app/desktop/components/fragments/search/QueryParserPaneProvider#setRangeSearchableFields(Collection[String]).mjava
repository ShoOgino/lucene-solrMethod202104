  @Override
  public void setRangeSearchableFields(Collection<String> rangeSearchableFields) {
    pointRangeQueryTable.setModel(new PointTypesTableModel(rangeSearchableFields));
    pointRangeQueryTable.setShowGrid(true);
    String[] numTypes =
        Arrays.stream(PointTypesTableModel.NumType.values())
            .map(PointTypesTableModel.NumType::name)
            .toArray(String[]::new);
    JComboBox<String> numTypesCombo = new JComboBox<>(numTypes);
    numTypesCombo.setRenderer((list, value, index, isSelected, cellHasFocus) -> new JLabel(value));
    pointRangeQueryTable
        .getColumnModel()
        .getColumn(PointTypesTableModel.Column.TYPE.getIndex())
        .setCellEditor(new DefaultCellEditor(numTypesCombo));
    pointRangeQueryTable
        .getColumnModel()
        .getColumn(PointTypesTableModel.Column.TYPE.getIndex())
        .setCellRenderer(
            (table, value, isSelected, hasFocus, row, column) -> new JLabel((String) value));
    pointRangeQueryTable
        .getColumnModel()
        .getColumn(PointTypesTableModel.Column.FIELD.getIndex())
        .setPreferredWidth(PointTypesTableModel.Column.FIELD.getColumnWidth());
    pointRangeQueryTable.setPreferredScrollableViewportSize(
        pointRangeQueryTable.getPreferredSize());

    // set default type to Integer
    for (int i = 0; i < rangeSearchableFields.size(); i++) {
      pointRangeQueryTable.setValueAt(
          PointTypesTableModel.NumType.INT.name(), i, PointTypesTableModel.Column.TYPE.getIndex());
    }
  }


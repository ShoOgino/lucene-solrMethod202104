  public ClusterEventProducerFactory(CoreContainer cc) {
    super(cc);
    // this initial listener is used only for capturing plugin registrations
    // done by other nodes while this CoreContainer is still loading
    initialPluginListener = new ContainerPluginsRegistry.PluginRegistryListener() {
      @Override
      public void added(ContainerPluginsRegistry.ApiInfo plugin) {
        if (plugin == null || plugin.getInstance() == null) {
          return;
        }
        Object instance = plugin.getInstance();
        if (instance instanceof ClusterEventListener) {
          registerListener((ClusterEventListener) instance);
        }
      }

      @Override
      public void deleted(ContainerPluginsRegistry.ApiInfo plugin) {
        if (plugin == null || plugin.getInstance() == null) {
          return;
        }
        Object instance = plugin.getInstance();
        if (instance instanceof ClusterEventListener) {
          unregisterListener((ClusterEventListener) instance);
        }
      }

      @Override
      public void modified(ContainerPluginsRegistry.ApiInfo old, ContainerPluginsRegistry.ApiInfo replacement) {
        added(replacement);
        deleted(old);
      }
    };
  }


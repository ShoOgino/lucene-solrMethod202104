  /**
   * Converts values from {@link BinaryDocValues} into {@code Iterable&lt;BytesRef&gt;}.
   *
   * @deprecated Consume {@link BinaryDocValues} instead.
   */
  @Deprecated
  public static Iterable<BytesRef> binaryIterable(
      final FieldInfo field, final DocValuesProducer valuesProducer, final int maxDoc) {
    return new Iterable<BytesRef>() {
      @Override
      public Iterator<BytesRef> iterator() {

        final BinaryDocValues values;
        try {
          values = valuesProducer.getBinary(field);
        } catch (IOException ioe) {
          throw new RuntimeException(ioe);
        }

        return new Iterator<BytesRef>() {
          private int docIDUpto = -1;

          @Override
          public boolean hasNext() {
            return docIDUpto + 1 < maxDoc;
          }

          @Override
          public BytesRef next() {
            docIDUpto++;
            if (docIDUpto > values.docID()) {
              try {
                values.nextDoc();
              } catch (IOException ioe) {
                throw new RuntimeException(ioe);
              }
            }
            BytesRef result;
            if (docIDUpto == values.docID()) {
              try {
                result = values.binaryValue();
              } catch (IOException e) {
                throw new RuntimeException(e);
              }
            } else {
              result = null;
            }
            return result;
          }
        };
      }
    };
  }


  // tests a "complex" analyzer that produces multiple
  // overlapping tokens
  public void testOverlapAnalyzer() throws Exception {
    TestHighlightRunner helper = new TestHighlightRunner() {

      @Override
      public void run() throws Exception {
        HashMap<String,String> synonyms = new HashMap<>();
        synonyms.put("football", "soccer,footie");
        try (Analyzer analyzer = new SynonymAnalyzer(synonyms)) {

          String s = "football-soccer in the euro 2004 footie competition";

          BooleanQuery.Builder query = new BooleanQuery.Builder();
          query.add(new TermQuery(new Term("bookid", "football")), Occur.SHOULD);
          query.add(new TermQuery(new Term("bookid", "soccer")), Occur.SHOULD);
          query.add(new TermQuery(new Term("bookid", "footie")), Occur.SHOULD);

          Highlighter highlighter = getHighlighter(query.build(), null, TestHighlighter.this);

          // Get 3 best fragments and separate with a "..."
          TokenStream tokenStream = analyzer.tokenStream(null, s);

          String result = highlighter.getBestFragments(tokenStream, s, 3, "...");
          String expectedResult = "<B>football</B>-<B>soccer</B> in the euro 2004 <B>footie</B> competition";
          assertTrue("overlapping analyzer should handle highlights OK, expected:" + expectedResult
              + " actual:" + result, expectedResult.equals(result));
        }
      }

    };

    helper.start();

  }


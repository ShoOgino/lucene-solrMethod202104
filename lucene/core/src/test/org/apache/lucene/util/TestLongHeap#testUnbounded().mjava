  public void testUnbounded() {
    LongHeap pq = LongHeap.create(MAX, -1);
    int num = random().nextInt(100) + 1;
    long maxValue = Long.MIN_VALUE;
    for (int i = 0; i < num; i++) {
      long value = random().nextLong();
      if (random().nextBoolean()) {
        pq.push(value);
      } else {
        pq.insertWithOverflow(value);
      }
      maxValue = Math.max(maxValue, value);
    }
    assertEquals(num, pq.size());
    assertEquals(maxValue, pq.top());
    long last = maxValue;
    int count = 0;
    while (pq.size() > 0) {
      long next = pq.pop();
      ++ count;
      assertTrue(next <= last);
      last = next;
    }
    assertEquals(num, count);
  }


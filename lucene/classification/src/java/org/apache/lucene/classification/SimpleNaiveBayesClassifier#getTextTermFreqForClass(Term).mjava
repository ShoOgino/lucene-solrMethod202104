  /**
   * Returns the average number of unique terms times the number of docs belonging to the input
   * class
   *
   * @param term the term representing the class
   * @return the average number of unique terms
   * @throws IOException if a low level I/O problem happens
   */
  private double getTextTermFreqForClass(Term term) throws IOException {
    double avgNumberOfUniqueTerms = 0;
    for (String textFieldName : textFieldNames) {
      Terms terms = MultiTerms.getTerms(indexReader, textFieldName);
      long numPostings = terms.getSumDocFreq(); // number of term/doc pairs
      avgNumberOfUniqueTerms +=
          numPostings / (double) terms.getDocCount(); // avg # of unique terms per doc
    }
    int docsWithC = indexReader.docFreq(term);
    return avgNumberOfUniqueTerms
        * docsWithC; // avg # of unique terms in text fields per doc * # docs with c
  }


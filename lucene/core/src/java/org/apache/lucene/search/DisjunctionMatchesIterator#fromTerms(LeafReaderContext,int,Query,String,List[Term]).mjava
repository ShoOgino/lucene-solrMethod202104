  /**
   * Create a {@link DisjunctionMatchesIterator} over a list of terms
   *
   * <p>Only terms that have at least one match in the given document will be included
   */
  static MatchesIterator fromTerms(
      LeafReaderContext context, int doc, Query query, String field, List<Term> terms)
      throws IOException {
    Objects.requireNonNull(field);
    for (Term term : terms) {
      if (Objects.equals(field, term.field()) == false) {
        throw new IllegalArgumentException(
            "Tried to generate iterator from terms in multiple fields: expected ["
                + field
                + "] but got ["
                + term.field()
                + "]");
      }
    }
    return fromTermsEnum(context, doc, query, field, asBytesRefIterator(terms));
  }


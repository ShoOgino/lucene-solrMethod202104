    public BlockImpactsDocsEnum(FieldInfo fieldInfo, IntBlockTermState termState)
        throws IOException {
      indexHasFreqs = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;
      final boolean indexHasPositions =
          fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;
      final boolean indexHasOffsets =
          fieldInfo
                  .getIndexOptions()
                  .compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS)
              >= 0;
      final boolean indexHasPayloads = fieldInfo.hasPayloads();

      this.docIn = Lucene90PostingsReader.this.docIn.clone();

      docFreq = termState.docFreq;
      docIn.seek(termState.docStartFP);

      doc = -1;
      accum = 0;
      blockUpto = 0;
      docBufferUpto = BLOCK_SIZE;

      skipper =
          new Lucene90ScoreSkipReader(
              docIn.clone(), MAX_SKIP_LEVELS, indexHasPositions, indexHasOffsets, indexHasPayloads);
      skipper.init(
          termState.docStartFP + termState.skipOffset,
          termState.docStartFP,
          termState.posStartFP,
          termState.payStartFP,
          docFreq);

      // We set the last element of docBuffer to NO_MORE_DOCS, it helps save conditionals in
      // advance()
      docBuffer[BLOCK_SIZE] = NO_MORE_DOCS;
      this.isFreqsRead = true;
      if (indexHasFreqs == false) {
        Arrays.fill(freqBuffer, 1L);
      }
    }


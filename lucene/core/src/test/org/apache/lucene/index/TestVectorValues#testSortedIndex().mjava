  public void testSortedIndex() throws Exception {
    IndexWriterConfig iwc = createIndexWriterConfig();
    iwc.setIndexSort(new Sort(new SortField("sortkey", SortField.Type.INT)));
    String fieldName = "field";
    try (Directory dir = newDirectory();
        IndexWriter iw = new IndexWriter(dir, iwc)) {
      add(iw, fieldName, 1, 1, new float[] {-1, 0});
      add(iw, fieldName, 4, 4, new float[] {0, 1});
      add(iw, fieldName, 3, 3, null);
      add(iw, fieldName, 2, 2, new float[] {1, 0});
      iw.forceMerge(1);
      try (IndexReader reader = iw.getReader()) {
        LeafReader leaf = getOnlyLeafReader(reader);

        VectorValues vectorValues = leaf.getVectorValues(fieldName);
        assertEquals(2, vectorValues.dimension());
        assertEquals(3, vectorValues.size());
        assertEquals("1", leaf.document(vectorValues.nextDoc()).get("id"));
        assertEquals(-1f, vectorValues.vectorValue()[0], 0);
        assertEquals("2", leaf.document(vectorValues.nextDoc()).get("id"));
        assertEquals(1, vectorValues.vectorValue()[0], 0);
        assertEquals("4", leaf.document(vectorValues.nextDoc()).get("id"));
        assertEquals(0, vectorValues.vectorValue()[0], 0);
        assertEquals(NO_MORE_DOCS, vectorValues.nextDoc());

        RandomAccessVectorValues ra =
            ((RandomAccessVectorValuesProducer) vectorValues).randomAccess();
        assertEquals(-1f, ra.vectorValue(0)[0], 0);
        assertEquals(1f, ra.vectorValue(1)[0], 0);
        assertEquals(0f, ra.vectorValue(2)[0], 0);
      }
    }
  }


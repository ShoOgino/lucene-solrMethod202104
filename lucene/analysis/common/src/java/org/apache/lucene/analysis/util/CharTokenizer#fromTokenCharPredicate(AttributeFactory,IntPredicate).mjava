  /**
   * Creates a new instance of CharTokenizer with the supplied attribute factory using a custom
   * predicate, supplied as method reference or lambda expression. The predicate should return
   * {@code true} for all valid token characters.
   *
   * <p>This factory is intended to be used with lambdas or method references. E.g., an elegant way
   * to create an instance which behaves exactly as {@link LetterTokenizer} is:
   *
   * <pre class="prettyprint lang-java">
   * Tokenizer tok = CharTokenizer.fromTokenCharPredicate(factory, Character::isLetter);
   * </pre>
   */
  public static CharTokenizer fromTokenCharPredicate(
      AttributeFactory factory, final IntPredicate tokenCharPredicate) {
    Objects.requireNonNull(tokenCharPredicate, "predicate must not be null.");
    return new CharTokenizer(factory) {
      @Override
      protected boolean isTokenChar(int c) {
        return tokenCharPredicate.test(c);
      }
    };
  }


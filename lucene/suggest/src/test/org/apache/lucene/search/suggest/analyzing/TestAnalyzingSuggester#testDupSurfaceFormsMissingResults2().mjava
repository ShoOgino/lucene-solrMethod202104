  public void testDupSurfaceFormsMissingResults2() throws Exception {
    Analyzer a =
        new MultiCannedAnalyzer(
            new CannedTokenStream(
                token("p", 1, 1), token("q", 1, 1), token("r", 0, 1), token("s", 0, 1)),
            new CannedTokenStream(token("p", 1, 1)),
            new CannedTokenStream(token("p", 1, 1)),
            new CannedTokenStream(token("p", 1, 1)));

    Directory tempDir = getDirectory();
    AnalyzingSuggester suggester =
        new AnalyzingSuggester(tempDir, "suggest", a, a, 0, 256, -1, true);

    suggester.build(
        new InputArrayIterator(
            new Input[] {
              new Input("a", 6), new Input("b", 5),
            }));

    List<LookupResult> results = suggester.lookup("a", false, 2);
    assertEquals(2, results.size());
    assertEquals("a", results.get(0).key);
    assertEquals(6, results.get(0).value);
    assertEquals("b", results.get(1).key);
    assertEquals(5, results.get(1).value);

    // Try again after save/load:
    Path tmpDir = createTempDir("AnalyzingSuggesterTest");

    Path path = tmpDir.resolve("suggester");

    OutputStream os = Files.newOutputStream(path);
    suggester.store(os);
    os.close();

    InputStream is = Files.newInputStream(path);
    suggester.load(is);
    is.close();

    results = suggester.lookup("a", false, 2);
    assertEquals(2, results.size());
    assertEquals("a", results.get(0).key);
    assertEquals(6, results.get(0).value);
    assertEquals("b", results.get(1).key);
    assertEquals(5, results.get(1).value);
    IOUtils.close(a, tempDir);
  }


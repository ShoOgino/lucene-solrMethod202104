  /**
   * Read quality queries from trec format topics file.
   *
   * @param reader where queries are read from.
   * @return the result quality queries.
   * @throws IOException if cannot read the queries.
   */
  public QualityQuery[] readQueries(BufferedReader reader) throws IOException {
    ArrayList<QualityQuery> res = new ArrayList<>();
    StringBuilder sb;
    try {
      while (null != (sb = read(reader, "<top>", null, false, false))) {
        HashMap<String, String> fields = new HashMap<>();
        // id
        sb = read(reader, "<num>", null, true, false);
        int k = sb.indexOf(":");
        String id = sb.substring(k + 1).trim();
        // title
        sb = read(reader, "<title>", null, true, false);
        k = sb.indexOf(">");
        String title = sb.substring(k + 1).trim();
        // description
        read(reader, "<desc>", null, false, false);
        sb.setLength(0);
        String line = null;
        while ((line = reader.readLine()) != null) {
          if (line.startsWith("<narr>")) break;
          if (sb.length() > 0) sb.append(' ');
          sb.append(line);
        }
        String description = sb.toString().trim();
        // narrative
        sb.setLength(0);
        while ((line = reader.readLine()) != null) {
          if (line.startsWith("</top>")) break;
          if (sb.length() > 0) sb.append(' ');
          sb.append(line);
        }
        String narrative = sb.toString().trim();
        // we got a topic!
        fields.put("title", title);
        fields.put("description", description);
        fields.put("narrative", narrative);
        QualityQuery topic = new QualityQuery(id, fields);
        res.add(topic);
      }
    } finally {
      reader.close();
    }
    // sort result array (by ID)
    QualityQuery qq[] = res.toArray(new QualityQuery[0]);
    Arrays.sort(qq);
    return qq;
  }


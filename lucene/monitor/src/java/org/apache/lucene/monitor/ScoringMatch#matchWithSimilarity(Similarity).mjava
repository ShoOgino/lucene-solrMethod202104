  public static final MatcherFactory<ScoringMatch> matchWithSimilarity(Similarity similarity) {
    return searcher -> {
      searcher.setSimilarity(similarity);
      return new CollectingMatcher<ScoringMatch>(searcher, ScoreMode.COMPLETE) {
        @Override
        protected ScoringMatch doMatch(String queryId, int doc, Scorable scorer)
            throws IOException {
          float score = scorer.score();
          if (score > 0) return new ScoringMatch(queryId, score);
          return null;
        }

        @Override
        public ScoringMatch resolve(ScoringMatch match1, ScoringMatch match2) {
          return new ScoringMatch(match1.getQueryId(), match1.getScore() + match2.getScore());
        }
      };
    };
  }


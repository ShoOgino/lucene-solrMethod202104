  public void testPointValuesMemoryIndexVsNormalIndex() throws Exception {
    int size = atLeast(12);

    List<Integer> randomValues = new ArrayList<>();

    Document doc = new Document();
    for (Integer randomInteger : random().ints(size).toArray()) {
      doc.add(new IntPoint("int", randomInteger));
      randomValues.add(randomInteger);
      doc.add(new LongPoint("long", randomInteger));
      doc.add(new FloatPoint("float", randomInteger));
      doc.add(new DoublePoint("double", randomInteger));
    }

    MockAnalyzer mockAnalyzer = new MockAnalyzer(random());
    MemoryIndex memoryIndex = MemoryIndex.fromDocument(doc, mockAnalyzer);
    IndexSearcher memoryIndexSearcher = memoryIndex.createSearcher();

    Directory dir = newDirectory();
    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random(), mockAnalyzer));
    writer.addDocument(doc);
    writer.close();
    IndexReader controlIndexReader = DirectoryReader.open(dir);
    IndexSearcher controlIndexSearcher = new IndexSearcher(controlIndexReader);

    Supplier<Integer> valueSupplier = () -> randomValues.get(random().nextInt(randomValues.size()));
    Query[] queries =
        new Query[] {
          IntPoint.newExactQuery("int", valueSupplier.get()),
          LongPoint.newExactQuery("long", valueSupplier.get()),
          FloatPoint.newExactQuery("float", valueSupplier.get()),
          DoublePoint.newExactQuery("double", valueSupplier.get()),
          IntPoint.newSetQuery("int", valueSupplier.get(), valueSupplier.get()),
          LongPoint.newSetQuery("long", valueSupplier.get(), valueSupplier.get()),
          FloatPoint.newSetQuery("float", valueSupplier.get(), valueSupplier.get()),
          DoublePoint.newSetQuery("double", valueSupplier.get(), valueSupplier.get()),
          IntPoint.newRangeQuery("int", valueSupplier.get(), valueSupplier.get()),
          LongPoint.newRangeQuery("long", valueSupplier.get(), valueSupplier.get()),
          FloatPoint.newRangeQuery("float", valueSupplier.get(), valueSupplier.get()),
          DoublePoint.newRangeQuery("double", valueSupplier.get(), valueSupplier.get())
        };
    for (Query query : queries) {
      assertEquals(controlIndexSearcher.count(query), controlIndexSearcher.count(query));
    }

    memoryIndexSearcher.getIndexReader().close();
    controlIndexReader.close();
    dir.close();
  }


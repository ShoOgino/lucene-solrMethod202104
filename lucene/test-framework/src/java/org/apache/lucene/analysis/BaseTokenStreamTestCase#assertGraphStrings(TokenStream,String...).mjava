  /**
   * Enumerates all accepted strings in the token graph created by the already initialized {@link
   * TokenStream}.
   */
  public static void assertGraphStrings(TokenStream tokenStream, String... expectedStrings)
      throws IOException {
    Automaton automaton = new TokenStreamToAutomaton().toAutomaton(tokenStream);
    Set<IntsRef> actualStringPaths = AutomatonTestUtil.getFiniteStringsRecursive(automaton, -1);

    Set<String> expectedStringsSet = new HashSet<>(Arrays.asList(expectedStrings));

    BytesRefBuilder scratchBytesRefBuilder = new BytesRefBuilder();
    Set<String> actualStrings = new HashSet<>();
    for (IntsRef ir : actualStringPaths) {
      actualStrings.add(
          Util.toBytesRef(ir, scratchBytesRefBuilder)
              .utf8ToString()
              .replace((char) TokenStreamToAutomaton.POS_SEP, ' '));
    }
    for (String s : actualStrings) {
      assertTrue(
          "Analyzer created unexpected string path: "
              + s
              + "\nexpected:\n"
              + toString(expectedStringsSet)
              + "\nactual:\n"
              + toString(actualStrings),
          expectedStringsSet.contains(s));
    }
    for (String s : expectedStrings) {
      assertTrue(
          "Analyzer created unexpected string path: "
              + s
              + "\nexpected:\n"
              + toString(expectedStringsSet)
              + "\nactual:\n"
              + toString(actualStrings),
          actualStrings.contains(s));
    }
  }


    void createIndex(ActionEvent e) {
      Path path = Paths.get(locationTF.getText(), dirnameTF.getText());
      if (Files.exists(path)) {
        String message = "The directory " + path.toAbsolutePath().toString() + " already exists.";
        JOptionPane.showMessageDialog(
            dialog, message, "Empty index path", JOptionPane.ERROR_MESSAGE);
      } else {
        // create new index asynchronously
        ExecutorService executor =
            Executors.newFixedThreadPool(1, new NamedThreadFactory("create-index-dialog"));

        SwingWorker<Void, Void> task =
            new SwingWorker<Void, Void>() {

              @Override
              protected Void doInBackground() throws Exception {
                setProgress(0);
                indicatorLbl.setVisible(true);
                createBtn.setEnabled(false);

                try {
                  Directory dir = FSDirectory.open(path);
                  IndexTools toolsModel = new IndexToolsFactory().newInstance(dir);

                  if (dataDirTF.getText().isEmpty()) {
                    // without sample documents
                    toolsModel.createNewIndex();
                  } else {
                    // with sample documents
                    Path dataPath = Paths.get(dataDirTF.getText());
                    toolsModel.createNewIndex(dataPath.toAbsolutePath().toString());
                  }

                  indexHandler.open(path.toAbsolutePath().toString(), null, false, false, false);
                  prefs.addHistory(path.toAbsolutePath().toString());

                  dirnameTF.setText("");
                  closeDialog();
                } catch (Exception ex) {
                  // cleanup
                  try {
                    Files.walkFileTree(
                        path,
                        new SimpleFileVisitor<Path>() {
                          @Override
                          public FileVisitResult visitFile(Path file, BasicFileAttributes attrs)
                              throws IOException {
                            Files.delete(file);
                            return FileVisitResult.CONTINUE;
                          }
                        });
                    Files.deleteIfExists(path);
                  } catch (IOException ex2) {
                  }

                  log.error("Cannot create index", ex);
                  String message = "See Logs tab or log file for more details.";
                  JOptionPane.showMessageDialog(
                      dialog, message, "Cannot create index", JOptionPane.ERROR_MESSAGE);
                } finally {
                  setProgress(100);
                }
                return null;
              }

              @Override
              protected void done() {
                indicatorLbl.setVisible(false);
                createBtn.setEnabled(true);
              }
            };

        executor.submit(task);
        executor.shutdown();
      }
    }


    /**
     * state of a replica is changed
     *
     * @param newState the new state
     */
    public static PerReplicaStatesOps flipState(String replica, Replica.State newState, PerReplicaStates rs) {
        return new PerReplicaStatesOps(prs -> {
            List<PerReplicaStates.Operation> operations = new ArrayList<>(2);
            PerReplicaStates.State existing = rs.get(replica);
            if (existing == null) {
                operations.add(new PerReplicaStates.Operation(PerReplicaStates.Operation.Type.ADD, new PerReplicaStates.State(replica, newState, Boolean.FALSE, 0)));
            } else {
                operations.add(new PerReplicaStates.Operation(PerReplicaStates.Operation.Type.ADD, new PerReplicaStates.State(replica, newState, existing.isLeader, existing.version + 1)));
                addDeleteStaleNodes(operations, existing);
            }
            if (log.isDebugEnabled()) {
                log.debug("flipState on {}, {} -> {}, ops :{}", rs.path, replica, newState, operations);
            }
            return operations;
        }).init(rs);
    }


  /**
   * Changes the values of the field.
   *
   * @param min array of min values. (accepts {@code Double.NEGATIVE_INFINITY})
   * @param max array of max values. (accepts {@code Double.POSITIVE_INFINITY})
   * @throws IllegalArgumentException if {@code min} or {@code max} is invalid
   */
  public void setRangeValues(double[] min, double[] max) {
    checkArgs(min, max);
    if (min.length * 2 != type.pointDimensionCount()
        || max.length * 2 != type.pointDimensionCount()) {
      throw new IllegalArgumentException(
          "field (name="
              + name
              + ") uses "
              + type.pointDimensionCount() / 2
              + " dimensions; cannot change to (incoming) "
              + min.length
              + " dimensions");
    }

    final byte[] bytes;
    if (fieldsData == null) {
      bytes = new byte[BYTES * 2 * min.length];
      fieldsData = new BytesRef(bytes);
    } else {
      bytes = ((BytesRef) fieldsData).bytes;
    }
    verifyAndEncode(min, max, bytes);
  }


  /**
   * Returns an alphabetical <code>List</code> of all keys in the trie that begin with a given
   * prefix. Only keys for nodes having non-null data are included in the <code>List</code>.
   *
   * @param prefix Each key returned from this method will begin with the characters in prefix.
   * @param numReturnValues The maximum number of values returned from this method.
   * @return A <code>List</code> with the results
   */
  public List<String> matchPrefix(CharSequence prefix, int numReturnValues) {
    Vector<String> sortKeysResult = new Vector<>();
    TSTNode startNode = getNode(prefix);
    if (startNode == null) {
      return sortKeysResult;
    }
    if (startNode.data != null) {
      sortKeysResult.addElement(getKey(startNode));
    }
    return sortKeysRecursion(
        startNode.relatives[TSTNode.EQKID],
        ((numReturnValues < 0) ? -1 : numReturnValues),
        sortKeysResult);
  }


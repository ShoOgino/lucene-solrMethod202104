  /**
   * This method is for introspection of attributes, it should simply add the key/values this
   * attribute holds to the given {@link AttributeReflector}.
   *
   * <p>Implementations look like this (e.g. for a combined attribute implementation):
   *
   * <pre class="prettyprint">
   *   public void reflectWith(AttributeReflector reflector) {
   *     reflector.reflect(CharTermAttribute.class, "term", term());
   *     reflector.reflect(PositionIncrementAttribute.class, "positionIncrement", getPositionIncrement());
   *   }
   * </pre>
   *
   * <p>If you implement this method, make sure that for each invocation, the same set of {@link
   * Attribute} interfaces and keys are passed to {@link AttributeReflector#reflect} in the same
   * order, but possibly different values. So don't automatically exclude e.g. {@code null}
   * properties!
   *
   * @see #reflectAsString(boolean)
   */
  public abstract void reflectWith(AttributeReflector reflector);


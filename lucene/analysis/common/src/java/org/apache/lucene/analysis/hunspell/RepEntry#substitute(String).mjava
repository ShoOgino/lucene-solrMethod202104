  List<String> substitute(String word) {
    if (mustStart) {
      boolean matches = mustEnd ? word.equals(pattern) : word.startsWith(pattern);
      return matches
          ? Collections.singletonList(replacement + word.substring(patternLen))
          : Collections.emptyList();
    }

    if (mustEnd) {
      return word.endsWith(pattern)
          ? Collections.singletonList(word.substring(0, word.length() - patternLen) + replacement)
          : Collections.emptyList();
    }

    int pos = word.indexOf(pattern);
    if (pos < 0) return Collections.emptyList();

    List<String> result = new ArrayList<>();
    while (pos >= 0) {
      result.add(word.substring(0, pos) + replacement + word.substring(pos + patternLen));
      pos = word.indexOf(pattern, pos + 1);
    }
    return result;
  }


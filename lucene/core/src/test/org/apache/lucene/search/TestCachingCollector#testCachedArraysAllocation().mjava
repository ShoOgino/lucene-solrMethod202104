  public void testCachedArraysAllocation() throws Exception {
    // tests the cached arrays allocation -- if the 'nextLength' was too high,
    // caching would terminate even if a smaller length would suffice.

    // set RAM limit enough for 150 docs + random(10000)
    int numDocs = random().nextInt(10000) + 150;
    for (boolean cacheScores : new boolean[] {false, true}) {
      int bytesPerDoc = cacheScores ? 8 : 4;
      CachingCollector cc =
          CachingCollector.create(
              new NoOpCollector(), cacheScores, bytesPerDoc * ONE_BYTE * numDocs);
      LeafCollector acc = cc.getLeafCollector(null);
      acc.setScorer(new MockScorable());
      for (int i = 0; i < numDocs; i++) acc.collect(i);
      assertTrue(cc.isCached());

      // The 151's document should terminate caching
      acc.collect(numDocs);
      assertFalse(cc.isCached());
    }
  }


  public void testOptimizeTopLevelClauseOrNull() throws IOException {
    // When there is a single non-null scorer, this scorer should be used
    // directly
    Directory dir = newDirectory();
    RandomIndexWriter w = new RandomIndexWriter(random(), dir);
    Document doc = new Document();
    doc.add(new StringField("foo", "bar", Store.NO));
    w.addDocument(doc);
    IndexReader reader = w.getReader();
    IndexSearcher searcher = new IndexSearcher(reader);
    searcher.setQueryCache(null); // so that weights are not wrapped
    final LeafReaderContext ctx = reader.leaves().get(0);
    Query query =
        new BooleanQuery.Builder()
            .add(new TermQuery(new Term("foo", "bar")), Occur.SHOULD) // existing term
            .add(new TermQuery(new Term("foo", "baz")), Occur.SHOULD) // missing term
            .build();

    // no scores -> term scorer
    Weight weight = searcher.createWeight(searcher.rewrite(query), ScoreMode.COMPLETE_NO_SCORES, 1);
    BulkScorer scorer = ((BooleanWeight) weight).booleanScorer(ctx);
    assertTrue(scorer instanceof DefaultBulkScorer); // term scorer

    // scores -> term scorer too
    query =
        new BooleanQuery.Builder()
            .add(new TermQuery(new Term("foo", "bar")), Occur.SHOULD) // existing term
            .add(new TermQuery(new Term("foo", "baz")), Occur.SHOULD) // missing term
            .build();
    weight = searcher.createWeight(searcher.rewrite(query), ScoreMode.COMPLETE, 1);
    scorer = ((BooleanWeight) weight).booleanScorer(ctx);
    assertTrue(scorer instanceof DefaultBulkScorer); // term scorer

    w.close();
    reader.close();
    dir.close();
  }


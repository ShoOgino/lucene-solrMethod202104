  /** Computes the number of intervals (rows or columns) to cover a range given the sizes. */
  private static int calcRowsOrCols(
      double cellRange, double cellMin, double requestRange, double requestMin, double worldRange) {
    assert requestMin >= cellMin;
    // Idealistically this wouldn't be so complicated but we concern ourselves with overflow and
    // edge cases
    double range = (requestRange + (requestMin - cellMin));
    if (range == 0) {
      return 1;
    }
    final double intervals = Math.ceil(range / cellRange);
    if (intervals > Integer.MAX_VALUE) {
      return Integer.MAX_VALUE; // should result in an error soon (exceed thresholds)
    }
    // ensures we don't have more intervals than world bounds (possibly due to rounding/edge issue)
    final long intervalsMax = Math.round(worldRange / cellRange);
    if (intervalsMax > Integer.MAX_VALUE) {
      // just return intervals
      return (int) intervals;
    }
    return Math.min((int) intervalsMax, (int) intervals);
  }


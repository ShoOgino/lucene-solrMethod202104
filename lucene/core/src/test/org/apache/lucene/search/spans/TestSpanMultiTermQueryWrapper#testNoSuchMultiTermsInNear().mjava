  public void testNoSuchMultiTermsInNear() throws Exception {
    // test to make sure non existent multiterms aren't throwing null pointer exceptions
    FuzzyQuery fuzzyNoSuch = new FuzzyQuery(new Term("field", "noSuch"), 1, 0, 1, false);
    SpanQuery spanNoSuch = new SpanMultiTermQueryWrapper<>(fuzzyNoSuch);
    SpanQuery term = new SpanTermQuery(new Term("field", "brown"));
    SpanQuery near = new SpanNearQuery(new SpanQuery[] {term, spanNoSuch}, 1, true);
    assertEquals(0, searcher.count(near));
    // flip order
    near = new SpanNearQuery(new SpanQuery[] {spanNoSuch, term}, 1, true);
    assertEquals(0, searcher.count(near));

    WildcardQuery wcNoSuch = new WildcardQuery(new Term("field", "noSuch*"));
    SpanQuery spanWCNoSuch = new SpanMultiTermQueryWrapper<>(wcNoSuch);
    near = new SpanNearQuery(new SpanQuery[] {term, spanWCNoSuch}, 1, true);
    assertEquals(0, searcher.count(near));

    RegexpQuery rgxNoSuch = new RegexpQuery(new Term("field", "noSuch"));
    SpanQuery spanRgxNoSuch = new SpanMultiTermQueryWrapper<>(rgxNoSuch);
    near = new SpanNearQuery(new SpanQuery[] {term, spanRgxNoSuch}, 1, true);
    assertEquals(0, searcher.count(near));

    PrefixQuery prfxNoSuch = new PrefixQuery(new Term("field", "noSuch"));
    SpanQuery spanPrfxNoSuch = new SpanMultiTermQueryWrapper<>(prfxNoSuch);
    near = new SpanNearQuery(new SpanQuery[] {term, spanPrfxNoSuch}, 1, true);
    assertEquals(0, searcher.count(near));

    // test single noSuch
    near = new SpanNearQuery(new SpanQuery[] {spanPrfxNoSuch}, 1, true);
    assertEquals(0, searcher.count(near));

    // test double noSuch
    near = new SpanNearQuery(new SpanQuery[] {spanPrfxNoSuch, spanPrfxNoSuch}, 1, true);
    assertEquals(0, searcher.count(near));
  }


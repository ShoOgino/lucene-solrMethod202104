  public void testSkipBytes() throws IOException {
    int numTestBytes = TestUtil.nextInt(random(), 100, 1000);
    byte[] testBytes = new byte[numTestBytes];
    final Directory dir = newDirectory();
    IndexOutput os = dir.createOutput("foo", newIOContext(random()));
    os.writeBytes(testBytes, numTestBytes);
    os.close();

    IndexInput is = dir.openInput("foo", newIOContext(random()));
    final InterceptingChecksumIndexInput checksumIndexInput =
        new InterceptingChecksumIndexInput(is, numTestBytes);

    // skip random chunks of bytes until everything has been skipped
    for (int skipped = 0; skipped < numTestBytes; ) {
      final int remaining = numTestBytes - skipped;
      // when remaining gets small enough, just skip the rest
      final int step = remaining < 10 ? remaining : random().nextInt(remaining);
      checksumIndexInput.skipBytes(step);
      skipped += step;
    }

    // ensure all skipped bytes are still "read" in so the checksum can be updated properly
    assertArrayEquals(testBytes, checksumIndexInput.readBytes);

    is.close();
    dir.close();
  }


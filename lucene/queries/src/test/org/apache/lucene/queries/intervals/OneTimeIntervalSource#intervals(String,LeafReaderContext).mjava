  @Override
  public IntervalIterator intervals(String field, LeafReaderContext ctx) throws IOException {
    return new IntervalIterator() {
      int doc = -1;
      boolean flag;
      final int maxDoc = ctx.reader().maxDoc();

      @Override
      public int start() {
        return 0;
      }

      @Override
      public int end() {
        return 0;
      }

      @Override
      public int gaps() {
        return 0;
      }

      /* only returns valid position every first time called per doc */
      @Override
      public int nextInterval() throws IOException {
        if (doc != NO_MORE_DOCS) {
          if (flag) {
            flag = false;
            return start();
          } else {
            return NO_MORE_INTERVALS;
          }
        }
        throw new AssertionError("Called with docId == NO_MORE_DOCS");
      }

      @Override
      public float matchCost() {
        return 0;
      }

      @Override
      public int docID() {
        return doc;
      }

      @Override
      public int nextDoc() throws IOException {
        doc++;
        if (doc >= maxDoc) {
          doc = NO_MORE_DOCS;
        }
        flag = true;
        return doc;
      }

      @Override
      public int advance(int target) throws IOException {
        doc = target;
        if (doc >= maxDoc) {
          doc = NO_MORE_DOCS;
        }
        flag = true;
        return doc;
      }

      @Override
      public long cost() {
        return 0;
      }
    };
  }


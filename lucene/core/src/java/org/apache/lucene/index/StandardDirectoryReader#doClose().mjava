  @Override
  @SuppressWarnings("try")
  protected void doClose() throws IOException {
    Closeable decRefDeleter =
        () -> {
          if (writer != null) {
            try {
              writer.decRefDeleter(segmentInfos);
            } catch (AlreadyClosedException ex) {
              // This is OK, it just means our original writer was
              // closed before we were, and this may leave some
              // un-referenced files in the index, which is
              // harmless.  The next time IW is opened on the
              // index, it will delete them.
            }
          }
        };
    try (Closeable finalizer = decRefDeleter) {
      // try to close each reader, even if an exception is thrown
      final List<? extends LeafReader> sequentialSubReaders = getSequentialSubReaders();
      IOUtils.applyToAll(sequentialSubReaders, LeafReader::decRef);
    }
  }


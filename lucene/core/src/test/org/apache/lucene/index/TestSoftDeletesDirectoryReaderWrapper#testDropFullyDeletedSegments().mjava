  public void testDropFullyDeletedSegments() throws IOException {
    IndexWriterConfig indexWriterConfig = newIndexWriterConfig();
    String softDeletesField = "soft_delete";
    indexWriterConfig.setSoftDeletesField(softDeletesField);
    indexWriterConfig.setMergePolicy(
        new SoftDeletesRetentionMergePolicy(
            softDeletesField, MatchAllDocsQuery::new, NoMergePolicy.INSTANCE));
    try (Directory dir = newDirectory();
        IndexWriter writer = new IndexWriter(dir, indexWriterConfig)) {

      Document doc = new Document();
      doc.add(new StringField("id", "1", Field.Store.YES));
      doc.add(new StringField("version", "1", Field.Store.YES));
      writer.addDocument(doc);
      writer.commit();
      doc = new Document();
      doc.add(new StringField("id", "2", Field.Store.YES));
      doc.add(new StringField("version", "1", Field.Store.YES));
      writer.addDocument(doc);
      writer.commit();

      try (DirectoryReader reader =
          new SoftDeletesDirectoryReaderWrapper(DirectoryReader.open(dir), softDeletesField)) {
        assertEquals(2, reader.leaves().size());
        assertEquals(2, reader.numDocs());
        assertEquals(2, reader.maxDoc());
        assertEquals(0, reader.numDeletedDocs());
      }
      writer.updateDocValues(new Term("id", "1"), new NumericDocValuesField(softDeletesField, 1));
      writer.commit();
      try (DirectoryReader reader =
          new SoftDeletesDirectoryReaderWrapper(DirectoryReader.open(writer), softDeletesField)) {
        assertEquals(1, reader.numDocs());
        assertEquals(1, reader.maxDoc());
        assertEquals(0, reader.numDeletedDocs());
        assertEquals(1, reader.leaves().size());
      }
      try (DirectoryReader reader =
          new SoftDeletesDirectoryReaderWrapper(DirectoryReader.open(dir), softDeletesField)) {
        assertEquals(1, reader.numDocs());
        assertEquals(1, reader.maxDoc());
        assertEquals(0, reader.numDeletedDocs());
        assertEquals(1, reader.leaves().size());
      }

      try (DirectoryReader reader = DirectoryReader.open(dir)) {
        assertEquals(2, reader.numDocs());
        assertEquals(2, reader.maxDoc());
        assertEquals(0, reader.numDeletedDocs());
        assertEquals(2, reader.leaves().size());
      }
    }
  }


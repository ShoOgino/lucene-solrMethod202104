  protected void createOffsetsEnumsWeightMatcher(
      LeafReader _leafReader, int docId, List<OffsetsEnum> results) throws IOException {
    // remap fieldMatcher/requireFieldMatch fields to the field we are highlighting
    LeafReader leafReader =
        new FilterLeafReader(_leafReader) {
          @Override
          public Terms terms(String field) throws IOException {
            if (components.getFieldMatcher().test(field)) {
              return super.terms(components.getField());
            } else {
              return super.terms(field);
            }
          }

          //  So many subclasses do this!
          // these ought to be a default or added via some intermediary like
          // "FilterTransientLeafReader" (exception on close).
          @Override
          public CacheHelper getCoreCacheHelper() {
            return null;
          }

          @Override
          public CacheHelper getReaderCacheHelper() {
            return null;
          }
        };
    IndexSearcher indexSearcher = new IndexSearcher(leafReader);
    indexSearcher.setQueryCache(null);
    Matches matches =
        indexSearcher
            .rewrite(components.getQuery())
            .createWeight(indexSearcher, ScoreMode.COMPLETE_NO_SCORES, 1.0f)
            .matches(leafReader.getContext(), docId);
    if (matches == null) {
      return; // doc doesn't match
    }
    for (String field : matches) {
      if (components.getFieldMatcher().test(field)) {
        MatchesIterator iterator = matches.getMatches(field);
        if (iterator == null) {
          continue;
        }
        results.add(new OffsetsEnum.OfMatchesIteratorWithSubs(iterator));
      }
    }
  }


  public boolean write(SortDoc sortDoc, LeafReaderContext readerContext, MapWriter.EntryWriter ew, int fieldIndex) throws IOException {
    int val;
    SortValue sortValue = sortDoc.getSortValue(this.field);
    if (sortValue != null) {
      if (sortValue.isPresent()) {
        val = (int) sortValue.getCurrentValue();
      } else { //empty-value
        return false;
      }
    } else {
      // field is not part of 'sort' param, but part of 'fl' param
      int readerOrd = readerContext.ord;
      NumericDocValues vals = null;
      if(docValuesCache.containsKey(readerOrd)) {
        NumericDocValues numericDocValues = docValuesCache.get(readerOrd);
        if(numericDocValues.docID() < sortDoc.docId) {
          //We have not advanced beyond the current docId so we can use this docValues.
          vals = numericDocValues;
        }
      }

      if(vals == null) {
        vals = DocValues.getNumeric(readerContext.reader(), this.field);
        docValuesCache.put(readerOrd, vals);
      }

      if (vals.advance(sortDoc.docId) == sortDoc.docId) {
        val = (int) vals.longValue();
      } else {
        return false;
      }
    }
    ew.put(this.field, val);
    return true;
  }


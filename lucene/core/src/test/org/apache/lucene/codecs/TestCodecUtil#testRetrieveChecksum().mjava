  public void testRetrieveChecksum() throws IOException {
    Directory dir = newDirectory();
    try (IndexOutput out = dir.createOutput("foo", IOContext.DEFAULT)) {
      out.writeByte((byte) 42);
      CodecUtil.writeFooter(out);
    }
    try (IndexInput in = dir.openInput("foo", IOContext.DEFAULT)) {
      CodecUtil.retrieveChecksum(in, in.length()); // no exception

      CorruptIndexException exception =
          expectThrows(
              CorruptIndexException.class, () -> CodecUtil.retrieveChecksum(in, in.length() - 1));
      assertTrue(exception.getMessage().contains("too long"));
      assertArrayEquals(new Throwable[0], exception.getSuppressed());

      exception =
          expectThrows(
              CorruptIndexException.class, () -> CodecUtil.retrieveChecksum(in, in.length() + 1));
      assertTrue(exception.getMessage().contains("truncated"));
      assertArrayEquals(new Throwable[0], exception.getSuppressed());
    }

    try (IndexOutput out = dir.createOutput("bar", IOContext.DEFAULT)) {
      for (int i = 0; i <= CodecUtil.footerLength(); ++i) {
        out.writeByte((byte) i);
      }
    }
    try (IndexInput in = dir.openInput("bar", IOContext.DEFAULT)) {
      CorruptIndexException exception =
          expectThrows(
              CorruptIndexException.class, () -> CodecUtil.retrieveChecksum(in, in.length()));
      assertTrue(exception.getMessage().contains("codec footer mismatch"));
      assertArrayEquals(new Throwable[0], exception.getSuppressed());

      exception =
          expectThrows(
              CorruptIndexException.class, () -> CodecUtil.retrieveChecksum(in, in.length() - 1));
      assertTrue(exception.getMessage().contains("too long"));

      exception =
          expectThrows(
              CorruptIndexException.class, () -> CodecUtil.retrieveChecksum(in, in.length() + 1));
      assertTrue(exception.getMessage().contains("truncated"));
    }

    dir.close();
  }


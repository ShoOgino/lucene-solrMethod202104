  public void testGetReaderByRam() throws IOException {
    Directory directory = newDirectory();
    FieldInfos.FieldNumbers fieldNumbers = buildIndex(directory);
    StandardDirectoryReader reader = (StandardDirectoryReader) DirectoryReader.open(directory);
    SegmentInfos segmentInfos = reader.segmentInfos.clone();
    ReaderPool pool =
        new ReaderPool(
            directory,
            directory,
            segmentInfos,
            fieldNumbers,
            () -> 0l,
            new NullInfoStream(),
            null,
            null);
    assertEquals(0, pool.getReadersByRam().size());

    int ord = 0;
    for (SegmentCommitInfo commitInfo : segmentInfos) {
      ReadersAndUpdates readersAndUpdates = pool.get(commitInfo, true);
      BinaryDocValuesFieldUpdates test =
          new BinaryDocValuesFieldUpdates(0, "test", commitInfo.info.maxDoc());
      test.add(0, new BytesRef(new byte[ord++]));
      test.finish();
      readersAndUpdates.addDVUpdate(test);
    }

    List<ReadersAndUpdates> readersByRam = pool.getReadersByRam();
    assertEquals(segmentInfos.size(), readersByRam.size());
    long previousRam = Long.MAX_VALUE;
    for (ReadersAndUpdates rld : readersByRam) {
      assertTrue(
          "previous: " + previousRam + " now: " + rld.ramBytesUsed.get(),
          previousRam >= rld.ramBytesUsed.get());
      previousRam = rld.ramBytesUsed.get();
      rld.dropChanges();
      pool.drop(rld.info);
    }
    IOUtils.close(pool, reader, directory);
  }


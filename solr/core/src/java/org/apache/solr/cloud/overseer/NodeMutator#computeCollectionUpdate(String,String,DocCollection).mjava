  /**
   * Returns the write command needed to update the replicas of a given collection given the identity of a node being down.
   * @return An optional with the write command or an empty one if the collection does not need any state modification.
   *    The returned write command might be for per replica state updates or for an update to state.json, depending on the
   *    configuration of the collection.
   */
  public static Optional<ZkWriteCommand> computeCollectionUpdate(String nodeName, String collectionName, DocCollection docCollection) {
    boolean needToUpdateCollection = false;
    List<String> downedReplicas = new ArrayList<>();
    Map<String,Slice> slicesCopy = new LinkedHashMap<>(docCollection.getSlicesMap());

    for (Entry<String, Slice> sliceEntry : slicesCopy.entrySet()) {
      Slice slice = sliceEntry.getValue();
      Map<String, Replica> newReplicas = slice.getReplicasCopy();

      Collection<Replica> replicas = slice.getReplicas();
      for (Replica replica : replicas) {
        String rNodeName = replica.getNodeName();
        if (rNodeName == null) {
          throw new RuntimeException("Replica without node name! " + replica);
        }
        if (rNodeName.equals(nodeName)) {
          log.debug("Update replica state for {} to {}", replica, Replica.State.DOWN);
          Map<String, Object> props = replica.shallowCopy();
          Replica newReplica = new Replica(replica.getName(), replica.node, replica.collection, slice.getName(), replica.core,
              Replica.State.DOWN, replica.type, props);
          newReplicas.put(replica.getName(), newReplica);
          needToUpdateCollection = true;
          downedReplicas.add(replica.getName());
        }
      }

      Slice newSlice = new Slice(slice.getName(), newReplicas, slice.shallowCopy(),collectionName);
      slicesCopy.put(slice.getName(), newSlice);
    }

    if (needToUpdateCollection) {
      if (docCollection.isPerReplicaState()) {
        return Optional.of(new ZkWriteCommand(collectionName, docCollection.copyWithSlices(slicesCopy),
            PerReplicaStatesOps.downReplicas(downedReplicas, docCollection.getPerReplicaStates()), false));
      } else {
        return Optional.of(new ZkWriteCommand(collectionName, docCollection.copyWithSlices(slicesCopy)));
      }
    } else {
      // No update needed for this collection
      return Optional.empty();
    }
  }


  /**
   * Create a new TransientSolrCoreCacheFactory instance
   *
   * @param loader a SolrResourceLoader used to find the TransientSolrCacheFactory classes
   * @param coreContainer CoreContainer that encloses all the Solr cores.              
   * @return a new, initialized TransientSolrCoreCache instance
   */

  public static TransientSolrCoreCacheFactory newInstance(SolrResourceLoader loader, CoreContainer coreContainer) {
    PluginInfo info = coreContainer.getConfig().getTransientCachePluginInfo();
    if (info == null) { // definition not in our solr.xml file, use default
      info = DEFAULT_TRANSIENT_SOLR_CACHE_INFO;
    }

    try {
      // According to the docs, this returns a TransientSolrCoreCacheFactory with the default c'tor
      TransientSolrCoreCacheFactory tccf = loader.findClass(info.className, TransientSolrCoreCacheFactory.class).getConstructor().newInstance(); 
      
      // OK, now we call its init method.
      if (PluginInfoInitialized.class.isAssignableFrom(tccf.getClass()))
        PluginInfoInitialized.class.cast(tccf).init(info);
      tccf.setCoreContainer(coreContainer);
      return tccf;
    } catch (Exception e) {
      // Many things could cause this, bad solrconfig, mis-typed class name, whatever.
      // Throw an exception to stop loading here; never return null.
      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, "Error instantiating "
              + TransientSolrCoreCacheFactory.class.getName() + " class [" + info.className + "]", e);
    }
  }


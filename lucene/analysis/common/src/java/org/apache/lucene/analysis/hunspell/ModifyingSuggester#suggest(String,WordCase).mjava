  void suggest(String word, WordCase wordCase) {
    String low = wordCase != WordCase.LOWER ? speller.dictionary.toLowerCase(word) : word;
    if (wordCase == WordCase.UPPER || wordCase == WordCase.MIXED) {
      trySuggestion(low);
    }

    tryVariationsOf(word);

    if (wordCase == WordCase.TITLE) {
      tryVariationsOf(low);
    } else if (wordCase == WordCase.UPPER) {
      tryVariationsOf(low);
      tryVariationsOf(speller.dictionary.toTitleCase(word));
    } else if (wordCase == WordCase.MIXED) {
      int dot = word.indexOf('.');
      if (dot > 0
          && dot < word.length() - 1
          && WordCase.caseOf(word.substring(dot + 1)) == WordCase.TITLE) {
        result.add(word.substring(0, dot + 1) + " " + word.substring(dot + 1));
      }

      boolean capitalized = Character.isUpperCase(word.charAt(0));
      if (capitalized) {
        tryVariationsOf(speller.dictionary.caseFold(word.charAt(0)) + word.substring(1));
      }

      tryVariationsOf(low);

      if (capitalized) {
        tryVariationsOf(speller.dictionary.toTitleCase(low));
      }

      List<String> adjusted =
          result.stream().map(s -> capitalizeAfterSpace(low, s)).collect(Collectors.toList());
      result.clear();
      result.addAll(adjusted);
    }
  }


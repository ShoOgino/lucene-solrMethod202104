  /**
   * Convert a set of Polygon objects into a GeoPolygon.
   *
   * @param polygons are the Polygon objects.
   * @return the GeoPolygon.
   */
  static GeoPolygon fromPolygon(final PlanetModel planetModel, final Polygon... polygons) {
    // System.err.println("Creating polygon...");
    if (polygons.length < 1) {
      throw new IllegalArgumentException("need at least one polygon");
    }
    final GeoPolygon shape;
    if (polygons.length == 1) {
      final GeoPolygon component = fromPolygon(planetModel, polygons[0]);
      if (component == null) {
        // Polygon is degenerate
        shape = new GeoCompositePolygon(planetModel);
      } else {
        shape = component;
      }
    } else {
      final GeoCompositePolygon poly = new GeoCompositePolygon(planetModel);
      for (final Polygon p : polygons) {
        final GeoPolygon component = fromPolygon(planetModel, p);
        if (component != null) {
          poly.addShape(component);
        }
      }
      shape = poly;
    }
    return shape;
    // System.err.println("...done");
  }


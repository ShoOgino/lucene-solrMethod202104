  private void doTestSort() {
    final int bytesPerDim = TestUtil.nextInt(random(), 1, 16);
    final int maxDoc = TestUtil.nextInt(random(), 1, 1 << random().nextInt(30));
    BKDConfig config = new BKDConfig(1, 1, bytesPerDim, BKDConfig.DEFAULT_MAX_POINTS_IN_LEAF_NODE);
    Point[] points = createRandomPoints(config, maxDoc, new int[1]);
    DummyPointsReader reader = new DummyPointsReader(points);
    MutablePointsReaderUtils.sort(config, maxDoc, reader, 0, points.length);
    Arrays.sort(
        points,
        new Comparator<Point>() {
          @Override
          public int compare(Point o1, Point o2) {
            int cmp = o1.packedValue.compareTo(o2.packedValue);
            if (cmp == 0) {
              cmp = Integer.compare(o1.doc, o2.doc);
            }
            return cmp;
          }
        });
    assertNotSame(points, reader.points);
    assertArrayEquals(points, reader.points);
  }


  @Override
  public void visitMatchingTerms(IndexReader reader, String fieldName, MatchingTermVisitor mtv)
      throws IOException {
    /* inspired by PrefixQuery.rewrite(): */
    Terms terms = MultiTerms.getTerms(reader, fieldName);
    if (terms != null) {
      TermsEnum termsEnum = terms.iterator();

      boolean skip = false;
      TermsEnum.SeekStatus status = termsEnum.seekCeil(new BytesRef(getPrefix()));
      if (status == TermsEnum.SeekStatus.FOUND) {
        mtv.visitMatchingTerm(getLucenePrefixTerm(fieldName));
      } else if (status == TermsEnum.SeekStatus.NOT_FOUND) {
        if (StringHelper.startsWith(termsEnum.term(), prefixRef)) {
          mtv.visitMatchingTerm(new Term(fieldName, termsEnum.term().utf8ToString()));
        } else {
          skip = true;
        }
      } else {
        // EOF
        skip = true;
      }

      if (!skip) {
        while (true) {
          BytesRef text = termsEnum.next();
          if (text != null && StringHelper.startsWith(text, prefixRef)) {
            mtv.visitMatchingTerm(new Term(fieldName, text.utf8ToString()));
          } else {
            break;
          }
        }
      }
    }
  }


  @Override
  protected void doAfterWriter(final ExecutorService es) throws Exception {
    final SearcherFactory factory =
        new SearcherFactory() {
          @Override
          public IndexSearcher newSearcher(IndexReader r, IndexReader previous) throws IOException {
            IndexSearcher s = new IndexSearcher(r, es);
            TestSearcherManager.this.warmCalled = true;
            s.search(new TermQuery(new Term("body", "united")), 10);
            return s;
          }
        };
    if (random().nextBoolean()) {
      // TODO: can we randomize the applyAllDeletes?  But
      // somehow for final searcher we must apply
      // deletes...
      mgr = new SearcherManager(writer, factory);
      isNRT = true;
    } else {
      // SearcherManager needs to see empty commit:
      writer.commit();
      mgr = new SearcherManager(dir, factory);
      isNRT = false;
      assertMergedSegmentsWarmed = false;
    }

    lifetimeMGR = new SearcherLifetimeManager();
  }


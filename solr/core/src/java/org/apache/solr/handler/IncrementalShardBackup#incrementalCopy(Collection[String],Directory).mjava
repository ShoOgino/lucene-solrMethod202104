    private BackupStats incrementalCopy(Collection<String> indexFiles, Directory dir) throws IOException {
        ShardBackupMetadata oldBackupPoint = getPrevBackupPoint();
        ShardBackupMetadata currentBackupPoint = ShardBackupMetadata.empty();
        URI indexDir = incBackupFiles.getIndexDir();
        BackupStats backupStats = new BackupStats();

        for(String fileName : indexFiles) {
            Optional<ShardBackupMetadata.BackedFile> opBackedFile = oldBackupPoint.getFile(fileName);
            Checksum originalFileCS = backupRepo.checksum(dir, fileName);

            if (opBackedFile.isPresent()) {
                ShardBackupMetadata.BackedFile backedFile = opBackedFile.get();
                Checksum existedFileCS = backedFile.fileChecksum;
                if (existedFileCS.equals(originalFileCS)) {
                    currentBackupPoint.addBackedFile(opBackedFile.get());
                    backupStats.skippedUploadingFile(existedFileCS);
                    continue;
                }
            }

            String backedFileName = UUID.randomUUID().toString();
            backupRepo.copyIndexFileFrom(dir, fileName, indexDir, backedFileName);

            currentBackupPoint.addBackedFile(backedFileName, fileName, originalFileCS);
            backupStats.uploadedFile(originalFileCS);
        }

        currentBackupPoint.store(backupRepo, incBackupFiles.getShardBackupMetadataDir(), shardBackupId);
        return backupStats;
    }


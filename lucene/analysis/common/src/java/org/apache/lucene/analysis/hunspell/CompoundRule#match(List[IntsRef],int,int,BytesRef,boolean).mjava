  private boolean match(
      List<IntsRef> words, int patternIndex, int wordIndex, BytesRef scratch, boolean fully) {
    if (patternIndex >= data.length) {
      return wordIndex >= words.size();
    }
    if (wordIndex >= words.size() && !fully) {
      return true;
    }

    char flag = data[patternIndex];
    if (patternIndex < data.length - 1 && data[patternIndex + 1] == '*') {
      int startWI = wordIndex;
      while (wordIndex < words.size() && dictionary.hasFlag(words.get(wordIndex), flag, scratch)) {
        wordIndex++;
      }

      while (wordIndex >= startWI) {
        if (match(words, patternIndex + 2, wordIndex, scratch, fully)) {
          return true;
        }

        wordIndex--;
      }
      return false;
    }

    boolean currentWordMatches =
        wordIndex < words.size() && dictionary.hasFlag(words.get(wordIndex), flag, scratch);

    if (patternIndex < data.length - 1 && data[patternIndex + 1] == '?') {
      if (currentWordMatches && match(words, patternIndex + 2, wordIndex + 1, scratch, fully)) {
        return true;
      }
      return match(words, patternIndex + 2, wordIndex, scratch, fully);
    }

    return currentWordMatches && match(words, patternIndex + 1, wordIndex + 1, scratch, fully);
  }


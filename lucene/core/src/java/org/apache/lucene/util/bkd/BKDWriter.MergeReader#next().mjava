    public boolean next() throws IOException {
      // System.out.println("MR.next this=" + this);
      while (true) {
        if (docBlockUpto == docsInBlock) {
          if (blockID == bkd.leafNodeOffset) {
            // System.out.println("  done!");
            return false;
          }
          // System.out.println("  new block @ fp=" + state.in.getFilePointer());
          docsInBlock = bkd.readDocIDs(state.in, state.in.getFilePointer(), state.scratchIterator);
          assert docsInBlock > 0;
          docBlockUpto = 0;
          bkd.visitDocValues(
              state.commonPrefixLengths,
              state.scratchDataPackedValue,
              state.scratchMinIndexPackedValue,
              state.scratchMaxIndexPackedValue,
              state.in,
              state.scratchIterator,
              docsInBlock,
              new IntersectVisitor() {
                int i = 0;

                @Override
                public void visit(int docID) {
                  throw new UnsupportedOperationException();
                }

                @Override
                public void visit(int docID, byte[] packedValue) {
                  assert docID == state.scratchIterator.docIDs[i];
                  System.arraycopy(
                      packedValue,
                      0,
                      packedValues,
                      i * bkd.config.packedBytesLength,
                      bkd.config.packedBytesLength);
                  i++;
                }

                @Override
                public Relation compare(byte[] minPackedValue, byte[] maxPackedValue) {
                  return Relation.CELL_CROSSES_QUERY;
                }
              });

          blockID++;
        }

        final int index = docBlockUpto++;
        int oldDocID = state.scratchIterator.docIDs[index];

        int mappedDocID;
        if (docMap == null) {
          mappedDocID = oldDocID;
        } else {
          mappedDocID = docMap.get(oldDocID);
        }

        if (mappedDocID != -1) {
          // Not deleted!
          docID = mappedDocID;
          System.arraycopy(
              packedValues,
              index * bkd.config.packedBytesLength,
              state.scratchDataPackedValue,
              0,
              bkd.config.packedBytesLength);
          return true;
        }
      }
    }


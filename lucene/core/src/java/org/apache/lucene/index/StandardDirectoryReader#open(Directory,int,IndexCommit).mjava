  /** called from DirectoryReader.open(...) methods */
  static DirectoryReader open(
      final Directory directory, int minSupportedMajorVersion, final IndexCommit commit)
      throws IOException {
    return new SegmentInfos.FindSegmentsFile<DirectoryReader>(directory) {
      @Override
      protected DirectoryReader doBody(String segmentFileName) throws IOException {
        if (minSupportedMajorVersion > Version.LATEST.major || minSupportedMajorVersion < 0) {
          throw new IllegalArgumentException(
              "minSupportedMajorVersion must be positive and <= "
                  + Version.LATEST.major
                  + " but was: "
                  + minSupportedMajorVersion);
        }
        SegmentInfos sis =
            SegmentInfos.readCommit(directory, segmentFileName, minSupportedMajorVersion);
        final SegmentReader[] readers = new SegmentReader[sis.size()];
        boolean success = false;
        try {
          for (int i = sis.size() - 1; i >= 0; i--) {
            readers[i] =
                new SegmentReader(sis.info(i), sis.getIndexCreatedVersionMajor(), IOContext.READ);
          }

          // This may throw CorruptIndexException if there are too many docs, so
          // it must be inside try clause so we close readers in that case:
          DirectoryReader reader =
              new StandardDirectoryReader(directory, readers, null, sis, false, false);
          success = true;

          return reader;
        } finally {
          if (success == false) {
            IOUtils.closeWhileHandlingException(readers);
          }
        }
      }
    }.run(commit);
  }


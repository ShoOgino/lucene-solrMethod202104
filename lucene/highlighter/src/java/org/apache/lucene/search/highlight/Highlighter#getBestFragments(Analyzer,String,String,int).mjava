  /**
   * Highlights chosen terms in a text, extracting the most relevant sections. This is a convenience
   * method that calls {@link #getBestFragments(TokenStream, String, int)}
   *
   * @param analyzer the analyzer that will be used to split <code>text</code> into chunks
   * @param fieldName the name of the field being highlighted (used by analyzer)
   * @param text text to highlight terms in
   * @param maxNumFragments the maximum number of fragments.
   * @return highlighted text fragments (between 0 and maxNumFragments number of fragments)
   * @throws InvalidTokenOffsetsException thrown if any token's endOffset exceeds the provided
   *     text's length
   */
  public final String[] getBestFragments(
      Analyzer analyzer, String fieldName, String text, int maxNumFragments)
      throws IOException, InvalidTokenOffsetsException {
    TokenStream tokenStream = analyzer.tokenStream(fieldName, text);
    return getBestFragments(tokenStream, text, maxNumFragments);
  }


  void applyMappings(StringBuilder sb) {
    FST.BytesReader bytesReader = null;
    FST.Arc<CharsRef> firstArc = null;
    FST.Arc<CharsRef> arc = null;

    int longestMatch;
    CharsRef longestOutput;

    for (int i = 0; i < sb.length(); i++) {
      if (!mightReplaceChar(sb.charAt(i))) {
        continue;
      }

      if (firstArc == null) {
        firstArc = fst.getFirstArc(new FST.Arc<>());
        bytesReader = fst.getBytesReader();
        arc = new FST.Arc<>();
      }
      arc.copyFrom(firstArc);
      CharsRef output = fst.outputs.getNoOutput();
      longestMatch = -1;
      longestOutput = null;

      for (int j = i; j < sb.length(); j++) {
        char ch = sb.charAt(j);

        try {
          if (fst.findTargetArc(ch, arc, arc, bytesReader) == null) {
            break;
          }
          output = fst.outputs.add(output, arc.output());
        } catch (IOException bogus) {
          throw new RuntimeException(bogus);
        }
        if (arc.isFinal()) {
          longestOutput = fst.outputs.add(output, arc.nextFinalOutput());
          longestMatch = j;
        }
      }

      if (longestMatch >= 0) {
        sb.delete(i, longestMatch + 1);
        sb.insert(i, longestOutput);
        i += (longestOutput.length - 1);
      }
    }
  }


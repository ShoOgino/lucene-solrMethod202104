  @Override
  public Collection<Accountable> getChildResources() {
    List<Accountable> resources = new ArrayList<>();
    try {
      if (searcherMgr != null) {
        SearcherManager mgr;
        IndexSearcher searcher;
        synchronized (searcherMgrLock) {
          mgr = searcherMgr; // acquire & release on same SearcherManager, via local reference
          searcher = mgr.acquire();
        }
        try {
          for (LeafReaderContext context : searcher.getIndexReader().leaves()) {
            LeafReader reader = FilterLeafReader.unwrap(context.reader());
            if (reader instanceof SegmentReader) {
              resources.add(Accountables.namedAccountable("segment", (SegmentReader) reader));
            }
          }
        } finally {
          mgr.release(searcher);
        }
      }
      return Collections.unmodifiableList(resources);
    } catch (IOException ioe) {
      throw new RuntimeException(ioe);
    }
  }


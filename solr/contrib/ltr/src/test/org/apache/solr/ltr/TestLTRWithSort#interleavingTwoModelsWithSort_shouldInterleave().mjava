  @Test
  public void interleavingTwoModelsWithSort_shouldInterleave() throws Exception {
    TeamDraftInterleaving.setRANDOM(new Random(10));//Random Boolean Choices Generation from Seed: [1,0]

    loadFeature("featureA", SolrFeature.class.getName(),
        "{\"q\":\"{!func}pow(popularity,2)\"}");

    loadFeature("featureB", SolrFeature.class.getName(),
        "{\"q\":\"{!func}pow(popularity,-2)\"}");

    loadModel("modelA", LinearModel.class.getName(),
        new String[] {"featureA"}, "{\"weights\":{\"featureA\":1.0}}");

    loadModel("modelB", LinearModel.class.getName(),
        new String[] {"featureB"}, "{\"weights\":{\"featureB\":1.0}}");

    final SolrQuery query = new SolrQuery();
    query.setQuery("title:a1");
    query.add("rows", "10");
    query.add("rq", "{!ltr reRankDocs=4 model=modelA model=modelB}");
    query.add("fl", "*,score");
    query.add("sort", "description desc");

    /*
    Doc1 = "popularity=1", ScoreA(1) ScoreB(1)
    Doc5 = "popularity=5", ScoreA(25) ScoreB(0.04)
    Doc7 = "popularity=7", ScoreA(49) ScoreB(0.02)
    Doc8 = "popularity=8", ScoreA(64) ScoreB(0.01)
    
    ModelARerankedList = [8,7,5,1]
    ModelBRerankedList = [1,5,7,8]
    
    OriginalRanking = [1,5,8,7]

    Random Boolean Choices Generation from Seed: [1,0]
    */

    int[] expectedInterleaved = new int[]{1, 8, 7, 5};

    String[] tests = new String[5];
    tests[0] = "/response/numFound/==8";
    for (int i = 1; i <= 4; i++) {
      tests[i] = "/response/docs/[" + (i - 1) + "]/id==\"" + expectedInterleaved[(i - 1)] + "\"";
    }
    assertJQ("/query" + query.toQueryString(), tests);

  }


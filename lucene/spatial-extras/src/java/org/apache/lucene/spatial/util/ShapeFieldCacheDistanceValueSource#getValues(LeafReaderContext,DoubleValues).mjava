  @Override
  public DoubleValues getValues(LeafReaderContext readerContext, DoubleValues scores)
      throws IOException {

    final double nullValue = (ctx.isGeo() ? 180 * multiplier : Double.MAX_VALUE);

    return DoubleValues.withDefault(
        new DoubleValues() {
          private final ShapeFieldCache<Point> cache = provider.getCache(readerContext.reader());
          private final Point from = ShapeFieldCacheDistanceValueSource.this.from;
          private final DistanceCalculator calculator = ctx.getDistCalc();

          private List<Point> currentVals;

          @Override
          public double doubleValue() throws IOException {
            double v = calculator.distance(from, currentVals.get(0));
            for (int i = 1; i < currentVals.size(); i++) {
              v = Math.min(v, calculator.distance(from, currentVals.get(i)));
            }
            return v * multiplier;
          }

          @Override
          public boolean advanceExact(int doc) throws IOException {
            currentVals = cache.getShapes(doc);
            return currentVals != null;
          }
        },
        nullValue);
  }


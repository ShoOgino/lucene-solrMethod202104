  private TwoPhaseIterator intersects(
      SortedNumericDocValues values, GeoEncodingUtils.Component2DPredicate component2DPredicate) {
    return new TwoPhaseIterator(values) {
      @Override
      public boolean matches() throws IOException {
        for (int i = 0, count = values.docValueCount(); i < count; ++i) {
          final long value = values.nextValue();
          final int lat = (int) (value >>> 32);
          final int lon = (int) (value & 0xFFFFFFFF);
          if (component2DPredicate.test(lat, lon)) {
            return true;
          }
        }
        return false;
      }

      @Override
      public float matchCost() {
        return 1000f; // TODO: what should it be?
      }
    };
  }


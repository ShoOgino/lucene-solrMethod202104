  public void testToStringISO8601() throws ParseException {
    Calendar cal = tree.newCal();
    cal.setTimeInMillis(random().nextLong());
    //  create ZonedDateTime from the calendar, then get toInstant.toString which is the ISO8601 we emulate
    //   note: we don't simply init off of millisEpoch because of possible GregorianChangeDate discrepancy.
    int year = cal.get(Calendar.YEAR);
    if (cal.get(Calendar.ERA) == 0) { // BC
      year = -year + 1;
    }
    String expectedISO8601 =
        ZonedDateTime.of(year, cal.get(Calendar.MONTH) + 1, cal.get(Calendar.DAY_OF_MONTH),
          cal.get(Calendar.HOUR_OF_DAY), cal.get(Calendar.MINUTE), cal.get(Calendar.SECOND),
          cal.get(Calendar.MILLISECOND) * 1_000_000, ZoneOffset.UTC)
            .toInstant().toString();
    String resultToString = tree.toString(cal) + 'Z';
    assertEquals(expectedISO8601, resultToString);
    assertEquals(cal, tree.parseCalendar(expectedISO8601));
  }


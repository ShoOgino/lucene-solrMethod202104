  public void testSimple() throws Exception {

    ModifiableSolrParams params = new ModifiableSolrParams()
        .add("processor", "template")
        .add("template.field", "id:{firstName}_{lastName}")
        .add("template.field", "another:{lastName}_{firstName}")
        .add("template.field", "missing:{lastName}_{unKnown}");
    AddUpdateCommand cmd = new AddUpdateCommand(new LocalSolrQueryRequest(null,
        params

    ));
    cmd.solrDoc = new SolrInputDocument();
    cmd.solrDoc.addField("firstName", "Tom");
    cmd.solrDoc.addField("lastName", "Cruise");

    new TemplateUpdateProcessorFactory().getInstance(cmd.getReq(), new SolrQueryResponse(), null).processAdd(cmd);
    assertEquals("Tom_Cruise", cmd.solrDoc.getFieldValue("id"));
    assertEquals("Cruise_Tom", cmd.solrDoc.getFieldValue("another"));
    assertEquals("Cruise_", cmd.solrDoc.getFieldValue("missing"));

    SolrInputDocument solrDoc = new SolrInputDocument();
    solrDoc.addField("id", "1");

   params = new ModifiableSolrParams()
        .add("processor", "template")
        .add("commit", "true")
        .add("template.field", "x_s:key_{id}");
    params.add("commit", "true");
    UpdateRequest add = new UpdateRequest().add(solrDoc);
    add.setParams(params);
    NamedList<Object> result = cluster.getSolrClient().request(CollectionAdminRequest.createCollection("c", "conf1", 1, 1).setPerReplicaState(SolrCloudTestCase.USE_PER_REPLICA_STATE));
    Utils.toJSONString(result.asMap(4));
    AbstractFullDistribZkTestBase.waitForCollection(cluster.getSolrClient().getZkStateReader(), "c",1);
    cluster.getSolrClient().request(add, "c");
    QueryResponse rsp = cluster.getSolrClient().query("c",
        new ModifiableSolrParams().add("q","id:1"));
    assertEquals( "key_1", rsp.getResults().get(0).getFieldValue("x_s"));


  }


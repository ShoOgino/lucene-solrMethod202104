  @Test
  public void testMethodsOverridden() throws Exception {
    // Ensures that all methods of IndexDeletionPolicy are
    // overridden/implemented. That's important to ensure that NoDeletionPolicy
    // overrides everything, so that no unexpected behavior/error occurs.
    // NOTE: even though IndexDeletionPolicy is an interface today, and so all
    // methods must be implemented by NoDeletionPolicy, this test is important
    // in case one day IDP becomes an abstract class.
    for (Method m : NoDeletionPolicy.class.getMethods()) {
      // getDeclaredMethods() returns just those methods that are declared on
      // NoDeletionPolicy. getMethods() returns those that are visible in that
      // context, including ones from Object. So just filter out Object. If in
      // the future IndexDeletionPolicy will become a class that extends a
      // different class than Object, this will need to change.
      if (m.getDeclaringClass() != Object.class) {
        assertTrue(m + " is not overridden !", m.getDeclaringClass() == NoDeletionPolicy.class);
      }
    }
  }


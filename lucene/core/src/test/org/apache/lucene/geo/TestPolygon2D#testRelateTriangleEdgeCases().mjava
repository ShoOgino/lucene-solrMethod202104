  // test
  public void testRelateTriangleEdgeCases() {
    for (int i = 0; i < 100; ++i) {
      // random radius between 1Km and 100Km
      int randomRadius = RandomNumbers.randomIntBetween(random(), 1000, 100000);
      // random number of vertices
      int numVertices = RandomNumbers.randomIntBetween(random(), 100, 1000);
      Polygon polygon = createRegularPolygon(0, 0, randomRadius, numVertices);
      Component2D impl = Polygon2D.create(polygon);

      // create and test a simple tessellation
      for (int j = 1; j < numVertices; ++j) {
        double[] a = new double[] {0d, 0d}; // center of poly
        double[] b = new double[] {polygon.getPolyLat(j - 1), polygon.getPolyLon(j - 1)};
        // occassionally test pancake triangles
        double[] c =
            random().nextBoolean()
                ? new double[] {polygon.getPolyLat(j), polygon.getPolyLon(j)}
                : new double[] {a[0], a[1]};
        assertTrue(impl.intersectsTriangle(a[0], a[1], b[0], b[1], c[0], c[1]));
      }
    }
  }


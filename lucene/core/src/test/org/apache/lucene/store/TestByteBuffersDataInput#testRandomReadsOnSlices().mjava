  @Test
  public void testRandomReadsOnSlices() throws Exception {
    for (int reps = randomIntBetween(1, 20); --reps > 0; ) {
      ByteBuffersDataOutput dst = new ByteBuffersDataOutput();

      byte[] prefix = new byte[randomIntBetween(0, 1024 * 8)];
      dst.writeBytes(prefix);

      long seed = randomLong();
      int max = 10_000;
      List<IOConsumer<DataInput>> reply =
          TestByteBuffersDataOutput.addRandomData(dst, new Xoroshiro128PlusRandom(seed), max);

      byte[] suffix = new byte[randomIntBetween(0, 1024 * 8)];
      dst.writeBytes(suffix);

      ByteBuffersDataInput src =
          dst.toDataInput().slice(prefix.length, dst.size() - prefix.length - suffix.length);

      assertEquals(0, src.position());
      assertEquals(dst.size() - prefix.length - suffix.length, src.size());
      for (IOConsumer<DataInput> c : reply) {
        c.accept(src);
      }

      LuceneTestCase.expectThrows(
          EOFException.class,
          () -> {
            src.readByte();
          });
    }
  }


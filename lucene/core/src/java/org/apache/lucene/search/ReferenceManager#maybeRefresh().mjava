  /**
   * You must call this (or {@link #maybeRefreshBlocking()}), periodically, if you want that {@link
   * #acquire()} will return refreshed instances.
   *
   * <p><b>Threads</b>: it's fine for more than one thread to call this at once. Only the first
   * thread will attempt the refresh; subsequent threads will see that another thread is already
   * handling refresh and will return immediately. Note that this means if another thread is already
   * refreshing then subsequent threads will return right away without waiting for the refresh to
   * complete.
   *
   * <p>If this method returns true it means the calling thread either refreshed or that there were
   * no changes to refresh. If it returns false it means another thread is currently refreshing.
   *
   * @throws IOException if refreshing the resource causes an {@link IOException}
   * @throws AlreadyClosedException if the reference manager has been {@link #close() closed}.
   */
  public final boolean maybeRefresh() throws IOException {
    ensureOpen();

    // Ensure only 1 thread does refresh at once; other threads just return immediately:
    final boolean doTryRefresh = refreshLock.tryLock();
    if (doTryRefresh) {
      try {
        doMaybeRefresh();
      } finally {
        refreshLock.unlock();
      }
    }

    return doTryRefresh;
  }


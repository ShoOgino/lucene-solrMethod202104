  private Collection<FieldMetadata> writeSingleSegment(
      Fields fields,
      NormsProducer normsProducer,
      STBlockWriter blockWriter,
      IndexDictionary.Builder dictionaryBuilder)
      throws IOException {
    List<FieldMetadata> fieldMetadataList =
        createFieldMetadataList(new FieldsIterator(fields, fieldInfos), maxDoc);
    TermIteratorQueue<FieldTerms> fieldTermsQueue =
        createFieldTermsQueue(fields, fieldMetadataList);
    List<TermIterator<FieldTerms>> groupedFieldTerms = new ArrayList<>(fieldTermsQueue.size());
    List<FieldMetadataTermState> termStates = new ArrayList<>(fieldTermsQueue.size());

    while (fieldTermsQueue.size() != 0) {
      TermIterator<FieldTerms> topFieldTerms = fieldTermsQueue.popTerms();
      BytesRef term = BytesRef.deepCopyOf(topFieldTerms.term);
      groupByTerm(fieldTermsQueue, topFieldTerms, groupedFieldTerms);
      writePostingLines(term, groupedFieldTerms, normsProducer, termStates);
      blockWriter.addLine(term, termStates, dictionaryBuilder);
      nextTermForIterators(groupedFieldTerms, fieldTermsQueue);
    }
    return fieldMetadataList;
  }


  @Override
  @SuppressWarnings({"unchecked", "rawtypes"})
  public void call(ClusterState state, ZkNodeProps message, NamedList results) throws Exception {
    ZkStateReader zkStateReader = ocmh.zkStateReader;
    SolrZkClient zkClient = zkStateReader.getZkClient();
    Map roles = null;
    String node = message.getStr("node");

    String roleName = message.getStr("role");
    boolean nodeExists = false;
    if (nodeExists = zkClient.exists(ZkStateReader.ROLES, true)) {
      roles = (Map) Utils.fromJSON(zkClient.getData(ZkStateReader.ROLES, null, new Stat(), true));
    } else {
      roles = new LinkedHashMap<>(1);
    }

    List nodeList = (List) roles.get(roleName);
    if (nodeList == null) roles.put(roleName, nodeList = new ArrayList<>());
    if (ADDROLE == operation) {
      log.info("Overseer role added to {}", node);
      if (!nodeList.contains(node)) nodeList.add(node);
    } else if (REMOVEROLE == operation) {
      log.info("Overseer role removed from {}", node);
      nodeList.remove(node);
    }

    if (nodeExists) {
      zkClient.setData(ZkStateReader.ROLES, Utils.toJSON(roles), true);
    } else {
      zkClient.create(ZkStateReader.ROLES, Utils.toJSON(roles), CreateMode.PERSISTENT, true);
    }
    //if there are too many nodes this command may time out. And most likely dedicated
    // overseers are created when there are too many nodes  . So , do this operation in a separate thread
    new Thread(() -> {
      try {
        overseerPrioritizer.prioritizeOverseerNodes(ocmh.myId);
      } catch (Exception e) {
        log.error("Error in prioritizing Overseer", e);
      }
    }, "OverseerPrioritizationThread").start();

  }


    @Override
    public ComparableProvider[] getComparableProviders(List<? extends LeafReader> readers)
        throws IOException {
      final ComparableProvider[] providers = new ComparableProvider[readers.size()];
      final SortedDocValues[] values = new SortedDocValues[readers.size()];
      for (int i = 0; i < readers.size(); i++) {
        final SortedDocValues sorted = valuesProvider.get(readers.get(i));
        values[i] = sorted;
      }
      OrdinalMap ordinalMap = OrdinalMap.build(null, values, PackedInts.DEFAULT);
      final int missingOrd;
      if (missingValue == SortField.STRING_LAST) {
        missingOrd = Integer.MAX_VALUE;
      } else {
        missingOrd = Integer.MIN_VALUE;
      }

      for (int readerIndex = 0; readerIndex < readers.size(); readerIndex++) {
        final SortedDocValues readerValues = values[readerIndex];
        final LongValues globalOrds = ordinalMap.getGlobalOrds(readerIndex);
        providers[readerIndex] =
            docID -> {
              if (readerValues.advanceExact(docID)) {
                // translate segment's ord to global ord space:
                return globalOrds.get(readerValues.ordValue());
              } else {
                return missingOrd;
              }
            };
      }
      return providers;
    }


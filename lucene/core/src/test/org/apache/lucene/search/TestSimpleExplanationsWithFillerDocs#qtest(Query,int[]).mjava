  /**
   * Adjusts <code>expDocNrs</code> based on the filler docs injected in the index, and if
   * neccessary wraps the <code>q</code> in a BooleanQuery that will filter out all filler docs
   * using the {@link #EXTRA} field.
   *
   * @see #replaceIndex
   */
  @Override
  public void qtest(Query q, int[] expDocNrs) throws Exception {

    expDocNrs = ArrayUtil.copyOfSubArray(expDocNrs, 0, expDocNrs.length);
    for (int i = 0; i < expDocNrs.length; i++) {
      expDocNrs[i] = PRE_FILLER_DOCS + ((NUM_FILLER_DOCS + 1) * expDocNrs[i]);
    }

    if (null != EXTRA) {
      BooleanQuery.Builder builder = new BooleanQuery.Builder();
      builder.add(new BooleanClause(q, BooleanClause.Occur.MUST));
      builder.add(
          new BooleanClause(new TermQuery(new Term(EXTRA, EXTRA)), BooleanClause.Occur.MUST_NOT));
      q = builder.build();
    }
    super.qtest(q, expDocNrs);
  }


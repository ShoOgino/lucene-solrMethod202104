  @Override
  public Weight createWeight(IndexSearcher searcher, ScoreMode scoreMode, float boost)
      throws IOException {
    final Weight indexQueryWeight =
        indexQuery.createWeight(
            searcher, ScoreMode.COMPLETE_NO_SCORES, boost); // scores aren't unsupported

    return new ConstantScoreWeight(this, boost) {

      @Override
      public Scorer scorer(LeafReaderContext context) throws IOException {

        final Scorer indexQueryScorer = indexQueryWeight.scorer(context);
        if (indexQueryScorer == null) {
          return null;
        }

        final TwoPhaseIterator predFuncValues =
            predicateValueSource.iterator(context, indexQueryScorer.iterator());
        return new ConstantScoreScorer(this, score(), scoreMode, predFuncValues);
      }

      @Override
      public boolean isCacheable(LeafReaderContext ctx) {
        return predicateValueSource.isCacheable(ctx);
      }
    };
  }


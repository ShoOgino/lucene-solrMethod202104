  @Override
  public final IntervalMatchesIterator matches(String field, LeafReaderContext ctx, int doc)
      throws IOException {
    List<IntervalMatchesIterator> subs = new ArrayList<>();
    for (IntervalsSource source : subSources) {
      IntervalMatchesIterator mi = source.matches(field, ctx, doc);
      if (mi == null) {
        return null;
      }
      if (isMinimizing) {
        mi = new CachingMatchesIterator(mi);
      }
      subs.add(mi);
    }
    IntervalIterator it =
        combine(
            subs.stream()
                .map(m -> IntervalMatches.wrapMatches(m, doc))
                .collect(Collectors.toList()));
    if (it.advance(doc) != doc) {
      return null;
    }
    if (it.nextInterval() == IntervalIterator.NO_MORE_INTERVALS) {
      return null;
    }
    return isMinimizing
        ? new MinimizingConjunctionMatchesIterator(it, subs)
        : new ConjunctionMatchesIterator(it, subs);
  }


    @Override
    public char[] parseFlags(String rawFlags) {
      String[] rawFlagParts = rawFlags.trim().split(",");
      char[] flags = new char[rawFlagParts.length];
      int upto = 0;

      for (String rawFlagPart : rawFlagParts) {
        // note, removing the trailing X/leading I for nepali... what is the rule here?!
        String replacement = rawFlagPart.replaceAll("[^0-9]", "");
        // note, ignoring empty flags (this happens in danish, for example)
        if (replacement.isEmpty()) {
          continue;
        }
        int flag = Integer.parseInt(replacement);
        if (flag == FLAG_UNSET || flag >= Character.MAX_VALUE) { // read default flags as well
          throw new IllegalArgumentException(
              "Num flags should be between 0 and " + DEFAULT_FLAGS + ", found " + flag);
        }
        flags[upto++] = (char) flag;
      }

      if (upto < flags.length) {
        flags = ArrayUtil.copyOfSubArray(flags, 0, upto);
      }
      return flags;
    }


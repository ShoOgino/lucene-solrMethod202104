  /**
   * Returns byte 0x00 if the point crosses this edge subtree an even number of times. Returns byte
   * 0x01 if the point crosses this edge subtree an odd number of times. Returns byte 0x02 if the
   * point is on one of the edges.
   *
   * <p>See <a href="https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html">
   * https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html</a> for more information.
   */
  // ported to java from https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html
  // original code under the BSD license
  // (https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html#License%20to%20Use)
  //
  // Copyright (c) 1970-2003, Wm. Randolph Franklin
  //
  // Permission is hereby granted, free of charge, to any person obtaining a copy of this software
  // and associated
  // documentation files (the "Software"), to deal in the Software without restriction, including
  // without limitation
  // the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  // the Software, and
  // to permit persons to whom the Software is furnished to do so, subject to the following
  // conditions:
  //
  // 1. Redistributions of source code must retain the above copyright
  //    notice, this list of conditions and the following disclaimers.
  // 2. Redistributions in binary form must reproduce the above copyright
  //    notice in the documentation and/or other materials provided with
  //    the distribution.
  // 3. The name of W. Randolph Franklin may not be used to endorse or
  //    promote products derived from this Software without specific
  //    prior written permission.
  //
  // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
  // BUT NOT LIMITED
  // TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
  // NO EVENT SHALL
  // THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  // IN AN ACTION OF
  // CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
  // OR OTHER DEALINGS
  // IN THE SOFTWARE.
  private byte containsPnPoly(double x, double y) {
    byte res = FALSE;
    if (y <= this.max) {
      if (y == this.y1 && y == this.y2
          || (y <= this.y1 && y >= this.y2) != (y >= this.y1 && y <= this.y2)) {
        if ((x == this.x1 && x == this.x2)
            || ((x <= this.x1 && x >= this.x2) != (x >= this.x1 && x <= this.x2)
                && GeoUtils.orient(this.x1, this.y1, this.x2, this.y2, x, y) == 0)) {
          return ON_EDGE;
        } else if (this.y1 > y != this.y2 > y) {
          res =
              x < (this.x2 - this.x1) * (y - this.y1) / (this.y2 - this.y1) + this.x1
                  ? TRUE
                  : FALSE;
        }
      }
      if (this.left != null) {
        res ^= left.containsPnPoly(x, y);
        if ((res & 0x02) == 0x02) {
          return ON_EDGE;
        }
      }

      if (this.right != null && y >= this.low) {
        res ^= right.containsPnPoly(x, y);
        if ((res & 0x02) == 0x02) {
          return ON_EDGE;
        }
      }
    }
    assert res >= FALSE && res <= ON_EDGE;
    return res;
  }


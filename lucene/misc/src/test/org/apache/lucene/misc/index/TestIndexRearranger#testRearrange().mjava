  public void testRearrange() throws Exception {
    Directory inputDir = newDirectory();
    createIndex(100, 10, inputDir);

    Directory outputDir = newDirectory();
    IndexRearranger rearranger =
        new IndexRearranger(
            inputDir,
            outputDir,
            getIndexWriterConfig(),
            List.of(new OddDocSelector(), new EvenDocSelector()));
    rearranger.execute();
    IndexReader reader = DirectoryReader.open(outputDir);
    assertEquals(2, reader.leaves().size());
    LeafReader segment1 = reader.leaves().get(0).reader();
    assertEquals(50, segment1.numDocs());
    NumericDocValues numericDocValues = segment1.getNumericDocValues("ord");
    assertTrue(numericDocValues.advanceExact(0));
    boolean odd = numericDocValues.longValue() % 2 == 1;
    for (int i = 1; i < 50; i++) {
      assertTrue(numericDocValues.advanceExact(i));
      assertEquals(odd, numericDocValues.longValue() % 2 == 1);
    }
    LeafReader segment2 = reader.leaves().get(1).reader();
    assertEquals(50, segment2.numDocs());
    numericDocValues = segment2.getNumericDocValues("ord");
    assertTrue(numericDocValues.advanceExact(0));
    boolean odd2 = numericDocValues.longValue() % 2 == 1;
    assertTrue(odd != odd2);
    for (int i = 1; i < 50; i++) {
      assertTrue(numericDocValues.advanceExact(i));
      assertEquals(odd2, numericDocValues.longValue() % 2 == 1);
    }
    reader.close();
    inputDir.close();
    outputDir.close();
  }


  /**
   * Applies the consumer to all non-null elements in the collection even if an exception is thrown.
   * The first exception thrown by the consumer is re-thrown and subsequent exceptions are
   * suppressed.
   */
  public static <T> void applyToAll(Collection<T> collection, IOConsumer<T> consumer)
      throws IOException {
    IOUtils.close(
        collection.stream().filter(Objects::nonNull).map(t -> (Closeable) () -> consumer.accept(t))
            ::iterator);
  }


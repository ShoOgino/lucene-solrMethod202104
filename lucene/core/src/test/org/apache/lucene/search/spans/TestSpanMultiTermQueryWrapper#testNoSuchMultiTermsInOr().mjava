  public void testNoSuchMultiTermsInOr() throws Exception {
    // test to make sure non existent multiterms aren't throwing null pointer exceptions
    FuzzyQuery fuzzyNoSuch = new FuzzyQuery(new Term("field", "noSuch"), 1, 0, 1, false);
    SpanQuery spanNoSuch = new SpanMultiTermQueryWrapper<>(fuzzyNoSuch);
    SpanQuery term = new SpanTermQuery(new Term("field", "brown"));
    SpanOrQuery near = new SpanOrQuery(new SpanQuery[] {term, spanNoSuch});
    assertEquals(1, searcher.count(near));

    // flip
    near = new SpanOrQuery(new SpanQuery[] {spanNoSuch, term});
    assertEquals(1, searcher.count(near));

    WildcardQuery wcNoSuch = new WildcardQuery(new Term("field", "noSuch*"));
    SpanQuery spanWCNoSuch = new SpanMultiTermQueryWrapper<>(wcNoSuch);
    near = new SpanOrQuery(new SpanQuery[] {term, spanWCNoSuch});
    assertEquals(1, searcher.count(near));

    RegexpQuery rgxNoSuch = new RegexpQuery(new Term("field", "noSuch"));
    SpanQuery spanRgxNoSuch = new SpanMultiTermQueryWrapper<>(rgxNoSuch);
    near = new SpanOrQuery(new SpanQuery[] {term, spanRgxNoSuch});
    assertEquals(1, searcher.count(near));

    PrefixQuery prfxNoSuch = new PrefixQuery(new Term("field", "noSuch"));
    SpanQuery spanPrfxNoSuch = new SpanMultiTermQueryWrapper<>(prfxNoSuch);
    near = new SpanOrQuery(new SpanQuery[] {term, spanPrfxNoSuch});
    assertEquals(1, searcher.count(near));

    near = new SpanOrQuery(new SpanQuery[] {spanPrfxNoSuch});
    assertEquals(0, searcher.count(near));

    near = new SpanOrQuery(new SpanQuery[] {spanPrfxNoSuch, spanPrfxNoSuch});
    assertEquals(0, searcher.count(near));
  }


  /**
   * Create a query for matching a bounding box using doc values. This query is usually slow as it
   * does not use an index structure and needs to verify documents one-by-one in order to know
   * whether they match. It is best used wrapped in an {@link IndexOrDocValuesQuery} alongside a
   * {@link LatLonPoint#newBoxQuery}.
   */
  public static Query newSlowBoxQuery(
      String field,
      double minLatitude,
      double maxLatitude,
      double minLongitude,
      double maxLongitude) {
    // exact double values of lat=90.0D and lon=180.0D must be treated special as they are not
    // represented in the encoding
    // and should not drag in extra bogus junk! TODO: should encodeCeil just throw
    // ArithmeticException to be less trappy here?
    if (minLatitude == 90.0) {
      // range cannot match as 90.0 can never exist
      return new MatchNoDocsQuery("LatLonDocValuesField.newBoxQuery with minLatitude=90.0");
    }
    if (minLongitude == 180.0) {
      if (maxLongitude == 180.0) {
        // range cannot match as 180.0 can never exist
        return new MatchNoDocsQuery(
            "LatLonDocValuesField.newBoxQuery with minLongitude=maxLongitude=180.0");
      } else if (maxLongitude < minLongitude) {
        // encodeCeil() with dateline wrapping!
        minLongitude = -180.0;
      }
    }
    return new LatLonDocValuesBoxQuery(field, minLatitude, maxLatitude, minLongitude, maxLongitude);
  }


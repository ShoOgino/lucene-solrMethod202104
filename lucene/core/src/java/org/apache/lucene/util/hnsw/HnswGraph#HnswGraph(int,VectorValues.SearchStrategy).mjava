  HnswGraph(int maxConn, VectorValues.SearchStrategy searchStrategy) {
    graph = new ArrayList<>();
    // Typically with diversity criteria we see nodes not fully occupied; average fanout seems to be
    // about 1/2 maxConn. There is some indexing time penalty for under-allocating, but saves RAM
    graph.add(new NeighborArray(Math.max(32, maxConn / 4)));
    this.maxConn = maxConn;
    this.searchStrategy = searchStrategy;
  }


  /** LUCENE-6299: Test if addindexes(Dir[]) prevents exceeding max docs. */
  // TODO: can we use the setter to lower the amount of docs to be written here?
  @Nightly
  public void testAddTooManyIndexesDir() throws Exception {
    // we cheat and add the same one over again... IW wants a write lock on each
    Directory dir = newDirectory(random(), NoLockFactory.INSTANCE);
    Document doc = new Document();
    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(null));
    for (int i = 0; i < 100000; i++) {
      w.addDocument(doc);
    }
    w.forceMerge(1);
    w.commit();
    w.close();

    // wrap this with disk full, so test fails faster and doesn't fill up real disks.
    MockDirectoryWrapper dir2 = newMockDirectory();
    w = new IndexWriter(dir2, new IndexWriterConfig(null));
    w.commit(); // don't confuse checkindex
    dir2.setMaxSizeInBytes(dir2.sizeInBytes() + 65536); // 64KB
    Directory dirs[] = new Directory[1 + (IndexWriter.MAX_DOCS / 100000)];
    for (int i = 0; i < dirs.length; i++) {
      // bypass iw check for duplicate dirs
      dirs[i] = new FilterDirectory(dir) {};
    }

    try {
      w.addIndexes(dirs);
      fail("didn't get expected exception");
    } catch (IllegalArgumentException expected) {
      // pass
    } catch (IOException fakeDiskFull) {
      final Exception e;
      if (fakeDiskFull.getMessage() != null
          && fakeDiskFull.getMessage().startsWith("fake disk full")) {
        e =
            new RuntimeException(
                "test failed: IW checks aren't working and we are executing addIndexes");
        e.addSuppressed(fakeDiskFull);
      } else {
        e = fakeDiskFull;
      }
      throw e;
    }

    w.close();
    dir.close();
    dir2.close();
  }


  /**
   * Create a query for matching one or more geometries. Line geometries are not supported.
   * @param field field name. must not be null.
   * @param latLonGeometries array of LatLonGeometries. must not be null or empty.
   * @return query matching points within at least one geometry.
   * @throws IllegalArgumentException  if {@code field} is null, {@code latLonGeometries} is null, empty or contain a null or line geometry.
   * @see LatLonGeometry
   */
  public static Query newGeometryQuery(String field, LatLonGeometry... latLonGeometries) {
    if (latLonGeometries.length == 1) {
      if (latLonGeometries[0] instanceof Rectangle) {
        final Rectangle rect = (Rectangle) latLonGeometries[0];
        return newBoxQuery(field, rect.minLat, rect.maxLat, rect.minLon, rect.maxLon);
      }
      if (latLonGeometries[0] instanceof Circle) {
        final Circle circle = (Circle) latLonGeometries[0];
        return newDistanceQuery(field, circle.getLat(), circle.getLon(), circle.getRadius());
      }
    }
    return new LatLonPointInGeometryQuery(field, latLonGeometries);
  }


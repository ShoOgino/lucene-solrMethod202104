  @Before
  public void setup() throws IOException {
    TYPE_TEXT_POSITIONS = TextField.TYPE_STORED;

    TYPE_TEXT_POSITIONS_OFFSETS = new FieldType(TextField.TYPE_STORED);
    TYPE_TEXT_POSITIONS_OFFSETS.setIndexOptions(
        IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);
    TYPE_TEXT_POSITIONS_OFFSETS.freeze();

    Map<String, Analyzer> fieldAnalyzers = new HashMap<>();

    // Create an analyzer with some synonyms, just to showcase them.
    SynonymMap synonymMap =
        buildSynonymMap(
            new String[][] {
              {"moon\u0000shine", "firewater"},
              {"firewater", "moon\u0000shine"},
            });

    // Make a non-empty offset gap so that break iterator doesn't go haywire on multivalues
    // glued together.
    final int offsetGap = RandomizedTest.randomIntBetween(1, 2);
    final int positionGap = RandomizedTest.randomFrom(new int[] {0, 1, 100});
    Analyzer synonymsAnalyzer =
        new AnalyzerWithGaps(
            offsetGap,
            positionGap,
            new Analyzer() {
              @Override
              protected TokenStreamComponents createComponents(String fieldName) {
                Tokenizer tokenizer = new WhitespaceTokenizer();
                TokenStream tokenStream = new SynonymGraphFilter(tokenizer, synonymMap, true);
                return new TokenStreamComponents(tokenizer, tokenStream);
              }
            });

    fieldAnalyzers.put(FLD_TEXT1, synonymsAnalyzer);
    fieldAnalyzers.put(FLD_TEXT2, synonymsAnalyzer);

    analyzer = new PerFieldAnalyzerWrapper(new MissingAnalyzer(), fieldAnalyzers);
  }


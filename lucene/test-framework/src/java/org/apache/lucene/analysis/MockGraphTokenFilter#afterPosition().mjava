  @Override
  protected void afterPosition() throws IOException {
    if (DEBUG) {
      System.out.println("MockGraphTF.afterPos");
    }
    if (random.nextInt(7) == 5) {

      final int posLength = TestUtil.nextInt(random, 1, 5);

      if (DEBUG) {
        System.out.println("  do insert! posLen=" + posLength);
      }

      final Position posEndData = positions.get(outputPos + posLength);

      // Look ahead as needed until we figure out the right
      // endOffset:
      while (!end && posEndData.endOffset == -1 && inputPos <= (outputPos + posLength)) {
        if (!peekToken()) {
          break;
        }
      }

      if (posEndData.endOffset != -1) {
        // Notify super class that we are injecting a token:
        insertToken();
        clearAttributes();
        posLenAtt.setPositionLength(posLength);
        termAtt.append(TestUtil.randomUnicodeString(random));
        posIncAtt.setPositionIncrement(0);
        offsetAtt.setOffset(positions.get(outputPos).startOffset, posEndData.endOffset);
        if (DEBUG) {
          System.out.println(
              "  inject: outputPos="
                  + outputPos
                  + " startOffset="
                  + offsetAtt.startOffset()
                  + " endOffset="
                  + offsetAtt.endOffset()
                  + " posLength="
                  + posLenAtt.getPositionLength());
        }
        // TODO: set TypeAtt too?
      } else {
        // Either 1) the tokens ended before our posLength,
        // or 2) our posLength ended inside a hole from the
        // input.  In each case we just skip the inserted
        // token.
      }
    }
  }


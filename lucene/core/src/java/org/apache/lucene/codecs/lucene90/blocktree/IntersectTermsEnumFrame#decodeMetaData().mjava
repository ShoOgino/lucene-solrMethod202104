  public void decodeMetaData() throws IOException {

    // lazily catch up on metadata decode:
    final int limit = getTermBlockOrd();
    boolean absolute = metaDataUpto == 0;
    assert limit > 0;

    // TODO: better API would be "jump straight to term=N"???
    while (metaDataUpto < limit) {

      // TODO: we could make "tiers" of metadata, ie,
      // decode docFreq/totalTF but don't decode postings
      // metadata; this way caller could get
      // docFreq/totalTF w/o paying decode cost for
      // postings

      // TODO: if docFreq were bulk decoded we could
      // just skipN here:

      // stats
      if (statsSingletonRunLength > 0) {
        termState.docFreq = 1;
        termState.totalTermFreq = 1;
        statsSingletonRunLength--;
      } else {
        int token = statsReader.readVInt();
        if ((token & 1) == 1) {
          termState.docFreq = 1;
          termState.totalTermFreq = 1;
          statsSingletonRunLength = token >>> 1;
        } else {
          termState.docFreq = token >>> 1;
          if (ite.fr.fieldInfo.getIndexOptions() == IndexOptions.DOCS) {
            termState.totalTermFreq = termState.docFreq;
          } else {
            termState.totalTermFreq = termState.docFreq + statsReader.readVLong();
          }
        }
      }
      // metadata
      ite.fr.parent.postingsReader.decodeTerm(bytesReader, ite.fr.fieldInfo, termState, absolute);

      metaDataUpto++;
      absolute = false;
    }
    termState.termBlockOrd = metaDataUpto;
  }

